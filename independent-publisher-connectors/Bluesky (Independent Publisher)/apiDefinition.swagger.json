{
  "swagger": "2.0",
  "info": {
    "title": "Bluesky Social",
    "description": "Specification for the Bluesky Social endpoints",
    "contact": {
      "name": "Dan Romano",
      "email": "dan.romano@swolcat.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.0"
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://docs.bsky.app/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://example.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Social Media"
    }
  ],
  "host": "bsky.social",
  "basePath": "/xrpc",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/app.bsky.feed.getActorLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Actor Likes",
        "description": "Retrieves a list of posts liked by a specific actor (user) within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getActorLikes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor whose likes are being retrieved.",
            "x-ms-summary": "Actor ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of liked posts to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of posts liked by the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "likes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "The unique identifier of the liked post."
                      },
                      "likedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the post was liked."
                      },
                      "content": {
                        "type": "object",
                        "description": "The content of the liked post.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "description": "The text content of the post."
                          },
                          "media": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of media (e.g., image, video)."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the media."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified actor does not exist or has no liked posts.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.actor.getPreferences": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Actor Preferences",
        "description": "Retrieves the preferences for a specific actor (user) within the Bluesky network. This endpoint is part of the `app.bsky.actor` namespace and requires authentication.",
        "operationId": "getPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor whose preferences are being retrieved.",
            "x-ms-summary": "Actor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the preferences for the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "preferences": {
                  "type": "object",
                  "description": "An object containing various preferences for the actor."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified actor does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.video.uploadVideo": {
      "post": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Upload Video",
        "description": "Uploads a video file for processing and sharing within the Bluesky platform. This endpoint is part  of the Bluesky application Lexicon APIs (`app.bsky.*`) and requires authentication. For more details,  see the [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "uploadVideo",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The video file to be uploaded.",
            "x-ms-summary": "Video file"
          },
          {
            "name": "title",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Title of the video.",
            "x-ms-summary": "Video title"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Description of the video content.",
            "x-ms-summary": "Video description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully uploaded the video.",
            "schema": {
              "type": "object",
              "properties": {
                "videoId": {
                  "type": "string",
                  "description": "Unique identifier for the uploaded video."
                },
                "status": {
                  "type": "string",
                  "description": "The status of the video upload (e.g., pending, processing)."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.video.getUploadLimits": {
      "get": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Get Video Upload Limits",
        "description": "Retrieves the video upload limits for the authenticated user, including maximum file size  and supported formats. This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`)  and typically requires authentication. For more details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getVideoUploadLimits",
        "responses": {
          "200": {
            "description": "Successfully retrieved video upload limits.",
            "schema": {
              "type": "object",
              "properties": {
                "maxFileSize": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Maximum file size for video uploads in bytes."
                },
                "supportedFormats": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of supported video formats (e.g., mp4, mov)."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.video.getJobStatus": {
      "get": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Get Video Job Status",
        "description": "Retrieves the status of a video processing job by job ID. This endpoint is part of the  Bluesky application Lexicon APIs (`app.bsky.*`) and typically requires authentication. For more details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getVideoJobStatus",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the video job whose status is being retrieved.",
            "x-ms-summary": "Video job identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved video job status.",
            "schema": {
              "type": "object",
              "properties": {
                "jobId": {
                  "type": "string",
                  "description": "The unique identifier of the video job."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the job (e.g., pending, processing, completed)."
                },
                "progress": {
                  "type": "number",
                  "format": "float",
                  "description": "Progress percentage of the job."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "Error message if the job has failed."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.notification.getUnreadCount": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Get Unread Notification Count",
        "description": "Retrieves the count of unread notifications for the authenticated user. This endpoint is part  of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically requires authentication. For more details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getUnreadNotificationCount",
        "responses": {
          "200": {
            "description": "Successfully retrieved unread notification count.",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of unread notifications."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.labeler.getServices": {
      "get": {
        "tags": [
          "app.bsky.labeler"
        ],
        "summary": "Get Labeler Services",
        "description": "Retrieves a list of labeler services available within the Bluesky application. Labeler services  provide content labeling features. This endpoint is part of the Bluesky application Lexicon APIs  (`app.bsky.*`) and may require authentication based on the specific setup. For more details,  see the [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getLabelerServices",
        "responses": {
          "200": {
            "description": "Successfully retrieved list of labeler services.",
            "schema": {
              "type": "object",
              "properties": {
                "services": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LabelerService"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.muteThread": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute Thread",
        "description": "Mutes a specific thread for an actor, preventing notifications and visibility in feeds.  This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically  requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "muteThread",
        "parameters": [
          {
            "name": "thread",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier (URI) of the thread to mute.",
            "x-ms-summary": "Thread URI"
          },
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The DID or handle of the actor muting the thread.",
            "x-ms-summary": "Actor identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the specified thread.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the thread was successfully muted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getStarterPacks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Starter Packs",
        "description": "Retrieves a list of available starter packs, which are curated sets of users for the actor to consider following. This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getStarterPacks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of starter packs to retrieve.",
            "x-ms-summary": "Starter packs limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of starter packs.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StarterPack"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getStarterPack": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Starter Pack",
        "description": "Retrieves details of a specific starter pack, which includes a curated set of users for the  actor to follow. This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`)  and typically requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getStarterPack",
        "parameters": [
          {
            "name": "pack",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the starter pack to retrieve.",
            "x-ms-summary": "Starter pack identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the starter pack.",
            "schema": {
              "type": "object",
              "properties": {
                "packId": {
                  "type": "string",
                  "description": "Unique identifier of the starter pack."
                },
                "title": {
                  "type": "string",
                  "description": "Title of the starter pack."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the starter pack."
                },
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getKnownFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Known Followers",
        "description": "Retrieves a list of known followers for a specific actor. This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically requires authentication. For  further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getKnownFollowers",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The DID or handle of the actor whose known followers are being retrieved.",
            "x-ms-summary": "Actor identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of known followers to retrieve.",
            "x-ms-summary": "Followers limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of known followers for the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "followers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.getProfile": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Actor Profile",
        "description": "Retrieves the profile information for a specific actor (user) within the Bluesky network. This endpoint is part of the `app.bsky.actor` namespace and requires authentication.",
        "operationId": "getProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor whose profile is being retrieved.",
            "x-ms-summary": "Actor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the profile information for the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "profile": {
                  "type": "object",
                  "description": "An object containing profile details for the actor.",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The display name of the actor."
                    },
                    "bio": {
                      "type": "string",
                      "description": "The bio or description of the actor."
                    },
                    "location": {
                      "type": "string",
                      "description": "The location of the actor."
                    },
                    "website": {
                      "type": "string",
                      "description": "The website URL associated with the actor."
                    },
                    "avatarUrl": {
                      "type": "string",
                      "description": "URL of the actor's avatar image."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified actor does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getActorStarterPacks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Actor Starter Packs",
        "description": "Retrieves a list of starter packs for a specific actor, which are curated sets of users that the actor may want to follow. This endpoint is part of the Bluesky application Lexicon APIs  (`app.bsky.*`) and typically requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getActorStarterPacks",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The DID or handle of the actor for whom starter packs are being retrieved.",
            "x-ms-summary": "Actor identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of starter packs to retrieve.",
            "x-ms-summary": "Starter pack limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved starter packs for the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/StarterPack"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.getProfiles": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Multiple Actor Profiles",
        "description": "Retrieves profile information for multiple actors within the Bluesky network. This endpoint is part of the `app.bsky.actor` namespace and requires authentication.",
        "operationId": "getProfiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actorIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of unique identifiers for the actors whose profiles are being retrieved.",
            "x-ms-summary": "Actor IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved profile information for the specified actors.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "profile": {
                    "type": "object",
                    "description": "An object containing profile details for each actor.",
                    "properties": {
                      "actorId": {
                        "type": "string",
                        "description": "The unique identifier of the actor."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the actor."
                      },
                      "bio": {
                        "type": "string",
                        "description": "The bio or description of the actor."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the actor."
                      },
                      "website": {
                        "type": "string",
                        "description": "The website URL associated with the actor."
                      },
                      "avatarUrl": {
                        "type": "string",
                        "description": "URL of the actor's avatar image."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - One or more of the specified actors do not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.sendInteractions": {
      "post": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Send Interactions",
        "description": "Sends user interactions, such as likes or reposts, for a specified post within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "sendInteractions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "interactions",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string",
                    "description": "The unique identifier of the post being interacted with."
                  },
                  "interactionType": {
                    "type": "string",
                    "enum": [
                      "like",
                      "repost",
                      "comment"
                    ],
                    "description": "The type of interaction being performed."
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of the interaction."
                  }
                }
              }
            },
            "description": "An array of interactions to be sent.",
            "x-ms-summary": "Interactions Data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully recorded the interactions.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message for the successful operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getQuotes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Quotes",
        "description": "Retrieves a list of posts quoting a specific post within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getQuotes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the post being quoted.",
            "x-ms-summary": "Post ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of quotes to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of quotes for the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "quotes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "The unique identifier of the quoting post."
                      },
                      "authorId": {
                        "type": "string",
                        "description": "The unique identifier of the author of the quoting post."
                      },
                      "content": {
                        "type": "object",
                        "description": "The content of the quoting post."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.actor.getSuggestions": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Actor Suggestions",
        "description": "Retrieves a list of suggested actors (users) within the Bluesky network based on the current user's profile and interests. This endpoint is part of the `app.bsky.actor` namespace and requires authentication.",
        "operationId": "getSuggestions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of suggested actors to retrieve.",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of suggested actors.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actorId": {
                    "type": "string",
                    "description": "The unique identifier of the suggested actor."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the suggested actor."
                  },
                  "bio": {
                    "type": "string",
                    "description": "The bio or description of the suggested actor."
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the suggested actor."
                  },
                  "website": {
                    "type": "string",
                    "description": "The website URL associated with the suggested actor."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "URL of the suggested actor's avatar image."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.actor.putPreferences": {
      "put": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Update Actor Preferences",
        "description": "Updates the preferences for a specific actor (user) within the Bluesky network. This endpoint is part of the `app.bsky.actor` namespace and requires authentication.",
        "operationId": "putPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor whose preferences are being updated.",
            "x-ms-summary": "Actor ID"
          },
          {
            "name": "preferences",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string",
                  "description": "The display name of the actor."
                },
                "bio": {
                  "type": "string",
                  "description": "The bio or description of the actor."
                },
                "preferences": {
                  "type": "object",
                  "description": "An object containing updated preferences for the actor."
                }
              }
            },
            "description": "An object containing the preferences to update for the actor.",
            "x-ms-summary": "Preferences Data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the preferences for the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Confirmation message for the successful update."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified actor does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeedSkeleton": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feed Skeleton",
        "description": "Retrieves the skeleton structure of a feed for a specific generator within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getFeedSkeleton",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generatorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the feed generator.",
            "x-ms-summary": "Feed Generator ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of items to retrieve in the skeleton feed.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the feed skeleton for the specified generator.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "itemId": {
                    "type": "string",
                    "description": "The unique identifier of the item in the skeleton feed."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.notification.registerPush": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Register Push Notification",
        "description": "Registers a device for receiving push notifications for the authenticated user. This endpoint is part  of the Bluesky application Lexicon APIs (`app.bsky.*`) and requires authentication. For more details,  see the [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "registerPushNotification",
        "parameters": [
          {
            "name": "deviceToken",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "The push notification token provided by the device.",
                  "x-ms-summary": "Device token"
                },
                "platform": {
                  "type": "string",
                  "description": "The platform of the device (e.g., iOS, Android).",
                  "x-ms-summary": "Device platform"
                },
                "enableNotifications": {
                  "type": "boolean",
                  "description": "Enable or disable push notifications for this device.",
                  "x-ms-summary": "Push notifications preference"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully registered the device for push notifications.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the device was successfully registered for push notifications."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.searchActors": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Search Actors",
        "description": "Searches for actors (users) within the Bluesky network based on a search query. This endpoint is part of the `app.bsky.actor` namespace and requires authentication.",
        "operationId": "searchActors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The search query to find actors.",
            "x-ms-summary": "Search Query"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of search results to retrieve.",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results for actors matching the query.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actorId": {
                    "type": "string",
                    "description": "The unique identifier of the actor."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the actor."
                  },
                  "bio": {
                    "type": "string",
                    "description": "The bio or description of the actor."
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the actor."
                  },
                  "website": {
                    "type": "string",
                    "description": "The website URL associated with the actor."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "URL of the actor's avatar image."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.actor.searchActorsTypeahead": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Search Actors Typeahead",
        "description": "Provides typeahead suggestions for actors (users) within the Bluesky network based on a partial search query. This endpoint is part of the `app.bsky.actor` namespace and requires authentication.",
        "operationId": "searchActorsTypeahead",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The partial search query to find actors.",
            "x-ms-summary": "Search Query"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of typeahead suggestions to retrieve.",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved typeahead suggestions for actors matching the query.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actorId": {
                    "type": "string",
                    "description": "The unique identifier of the suggested actor."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the suggested actor."
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "URL of the suggested actor's avatar image."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getRepostedBy": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Reposted By",
        "description": "Retrieves a list of users who reposted a specific post within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getRepostedBy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the post being reposted.",
            "x-ms-summary": "Post ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of reposts to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of users who reposted the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "reposts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "The unique identifier of the user who reposted."
                      },
                      "repostedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the post was reposted."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getRelationships": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Relationships",
        "description": "Retrieves the relationships between the specified actor and a list of other actors, such as follows  and blocks. This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically  requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getRelationships",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The DID or handle of the primary actor whose relationships are being queried.",
            "x-ms-summary": "Primary actor identifier"
          },
          {
            "name": "actors",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of DIDs or handles for other actors to query relationships with.",
            "x-ms-summary": "Target actor identifiers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved relationships for the specified actors.",
            "schema": {
              "type": "object",
              "properties": {
                "relationships": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Relationship"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getSuggestedFollowsByActor": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Suggested Follows by Actor",
        "description": "Retrieves a list of suggested accounts for the specified actor to follow based on shared connections or interests. This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getSuggestedFollowsByActor",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The DID or handle of the actor for whom suggested follows are being retrieved.",
            "x-ms-summary": "Actor identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of suggested follows to retrieve.",
            "x-ms-summary": "Suggestions limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved suggested follows for the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "suggestions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getSuggestedFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Suggested Feeds",
        "description": "Retrieves a list of suggested feeds for the user based on their activity and interests within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getSuggestedFeeds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of suggested feeds to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of suggested feeds for the user.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "feedId": {
                    "type": "string",
                    "description": "The unique identifier of the suggested feed."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the suggested feed."
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the suggested feed."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the feed was created."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getActorFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Actor Feeds",
        "description": "Retrieves a list of feeds created or associated with a specific actor (user) within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getActorFeeds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor whose feeds are being retrieved.",
            "x-ms-summary": "Actor ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of feeds to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of feeds associated with the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "feeds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "feedId": {
                        "type": "string",
                        "description": "The unique identifier of the feed."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the feed."
                      },
                      "description": {
                        "type": "string",
                        "description": "A brief description of the feed."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the feed was created."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified actor does not exist or has no associated feeds.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getAuthorFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Author Feed",
        "description": "Retrieves the feed of posts created by a specific author (user) within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getAuthorFeed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the author whose feed is being retrieved.",
            "x-ms-summary": "Author ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of posts to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the feed of the specified author.",
            "schema": {
              "type": "object",
              "properties": {
                "feed": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "The unique identifier of the post."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the post was created."
                      },
                      "content": {
                        "type": "object",
                        "description": "The content of the post.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "description": "The text content of the post."
                          },
                          "media": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of media (e.g., image, video)."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the media."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified author does not exist or has no posts.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feed",
        "description": "Retrieves the main feed for a user, including posts from followed accounts and recommended content within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getFeed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the user whose main feed is being retrieved.",
            "x-ms-summary": "User ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of posts to retrieve in the feed.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the main feed for the specified user.",
            "schema": {
              "type": "object",
              "properties": {
                "feed": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "The unique identifier of the post."
                      },
                      "authorId": {
                        "type": "string",
                        "description": "The unique identifier of the author of the post."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the post was created."
                      },
                      "content": {
                        "type": "object",
                        "description": "The content of the post.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "description": "The text content of the post."
                          },
                          "media": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of media (e.g., image, video)."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the media."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified user does not exist or has no feed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feed Generator",
        "description": "Retrieves posts and related content from a specified feed generator within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getFeedGenerator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generatorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the feed generator.",
            "x-ms-summary": "Feed Generator ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of posts to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the posts from the specified feed generator.",
            "schema": {
              "type": "object",
              "properties": {
                "feed": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "The unique identifier of the post."
                      },
                      "authorId": {
                        "type": "string",
                        "description": "The unique identifier of the author of the post."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the post was created."
                      },
                      "content": {
                        "type": "object",
                        "description": "The content of the post.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "description": "The text content of the post."
                          },
                          "media": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of media (e.g., image, video)."
                                },
                                "url": {
                                  "type": "string",
                                  "description": "The URL of the media."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified feed generator does not exist or has no posts.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeedGenerators": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feed Generators",
        "description": "Retrieves metadata about multiple feed generators within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getFeedGenerators",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generatorIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of unique identifiers for the feed generators to retrieve.",
            "x-ms-summary": "Feed Generator IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved metadata for the specified feed generators.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "generatorId": {
                    "type": "string",
                    "description": "The unique identifier of the feed generator."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the feed generator."
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the feed generator."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.describeFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Describe Feed Generator",
        "description": "Retrieves metadata and configuration details about a feed generator within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "describeFeedGenerator",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generatorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the feed generator.",
            "x-ms-summary": "Feed Generator ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved metadata and configuration details for the feed generator.",
            "schema": {
              "type": "object",
              "properties": {
                "generatorId": {
                  "type": "string",
                  "description": "The unique identifier of the feed generator."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the feed generator."
                },
                "description": {
                  "type": "string",
                  "description": "A description of the feed generator."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp when the feed generator was created."
                },
                "config": {
                  "type": "object",
                  "description": "Configuration details for the feed generator."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified feed generator does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Likes for a Post",
        "description": "Retrieves a list of users who liked a specific post within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getLikes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the post whose likes are being retrieved.",
            "x-ms-summary": "Post ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of likes to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of users who liked the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "likes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "The unique identifier of the user who liked the post."
                      },
                      "likedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the post was liked."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getPostThread": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Post Thread",
        "description": "Retrieves a thread of posts starting from a specific post within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getPostThread",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the starting post in the thread.",
            "x-ms-summary": "Post ID"
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The depth of the thread to retrieve.",
            "x-ms-summary": "Depth"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the post thread starting from the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "thread": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "The unique identifier of a post in the thread."
                      },
                      "authorId": {
                        "type": "string",
                        "description": "The unique identifier of the post's author."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the post was created."
                      },
                      "content": {
                        "type": "object",
                        "description": "The content of the post."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Posts",
        "description": "Retrieves multiple posts by their unique identifiers within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getPosts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of unique identifiers for the posts to retrieve.",
            "x-ms-summary": "Post IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified posts.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string",
                    "description": "The unique identifier of the post."
                  },
                  "authorId": {
                    "type": "string",
                    "description": "The unique identifier of the post's author."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the post was created."
                  },
                  "content": {
                    "type": "object",
                    "description": "The content of the post."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.repostedBy": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Retrieve users who reposted a post",
        "operationId": "RepostedBy",
        "description": "Fetches a list of users who have reposted a specified post.",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Post identifier",
            "description": "The unique identifier of the post for which repost information is being retrieved."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of reposts to retrieve."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Pagination cursor",
            "description": "A timestamp to paginate results, retrieving reposts before this time."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sort order",
            "description": "The order in which to sort the reposts, e.g., by time."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users who reposted the specified post.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the user who reposted the post."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user who reposted the post."
                  },
                  "repostedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user reposted the post."
                  }
                },
                "required": [
                  "userId",
                  "displayName",
                  "repostedAt"
                ]
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.feed.getTimeline": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Timeline",
        "description": "Retrieves the user's timeline, including posts from followed accounts and relevant content within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getTimeline",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of posts to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the user's timeline.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string",
                    "description": "The unique identifier of the post."
                  },
                  "authorId": {
                    "type": "string",
                    "description": "The unique identifier of the post's author."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the post was created."
                  },
                  "content": {
                    "type": "object",
                    "description": "The content of the post."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.follow": {
      "post": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Follow a user",
        "operationId": "Follow",
        "description": "Allows the authenticated user to follow a specified user on the platform.",
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "User identifier",
            "description": "The unique identifier of the user to follow."
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmation that the user was successfully followed.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the follow action was successful."
                },
                "message": {
                  "type": "string",
                  "description": "A message confirming that the user was followed."
                }
              },
              "required": [
                "success",
                "message"
              ]
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getListBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get List Blocks",
        "description": "Retrieves a list of users who have been blocked by the specified actor within a given list. This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically  requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getListBlocks",
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the list for which blocked users are being retrieved.",
            "x-ms-summary": "List identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of blocked users to retrieve.",
            "x-ms-summary": "Blocked users limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of blocked users.",
            "schema": {
              "type": "object",
              "properties": {
                "blocks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Retrieve blocked users",
        "operationId": "GetBlocks",
        "description": "Fetches a list of users that the authenticated user has blocked.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of blocked users to retrieve."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result offset",
            "description": "The number of blocked users to skip for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users that have been blocked by the authenticated user.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the blocked user."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the blocked user."
                  },
                  "blockedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user was blocked."
                  }
                },
                "required": [
                  "userId",
                  "displayName",
                  "blockedAt"
                ]
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Retrieve a user's followers",
        "operationId": "GetFollowers",
        "description": "Fetches a list of users who follow a specified user.",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor identifier",
            "description": "The unique identifier of the actor whose followers are being retrieved."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of followers to retrieve."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result offset",
            "description": "The number of followers to skip for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users who follow the specified user.",
            "schema": {
              "type": "object",
              "properties": {
                "followers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "The unique identifier of the follower."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the follower."
                      },
                      "followedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the user started following."
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getFollows": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Follows",
        "description": "Retrieves a list of users that a specified actor is following. This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "getFollows",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The DID or handle of the actor whose follows are being retrieved.",
            "x-ms-summary": "Actor identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of follows to retrieve.",
            "x-ms-summary": "Follows limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of follows for the specified actor.",
            "schema": {
              "type": "object",
              "properties": {
                "follows": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getList": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Retrieve a user list",
        "operationId": "GetList",
        "description": "Fetches a list of users associated with a specified list, such as a group or category.",
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "List identifier",
            "description": "The unique identifier of the list to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users associated with the specified list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the user in the list."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user in the list."
                  },
                  "addedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user was added to the list."
                  }
                },
                "required": [
                  "userId",
                  "displayName",
                  "addedAt"
                ]
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getListMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Which lists is the requester's account muting",
        "description": "Which lists is the requester's account muting",
        "operationId": "GetListMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "x-ms-summary": "Limit the number of results",
            "description": "Specifies the maximum number of muted lists to return.",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string",
            "x-ms-summary": "Cursor for pagination",
            "description": "Used to fetch the next page of muted lists."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "lists": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.feed.getListFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get List Feed",
        "description": "Retrieves a feed for a specific list of users within the Bluesky network. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "getListFeed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the list whose feed is being retrieved.",
            "x-ms-summary": "List ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of posts to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the feed for the specified list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string",
                    "description": "The unique identifier of the post."
                  },
                  "authorId": {
                    "type": "string",
                    "description": "The unique identifier of the post's author."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the post was created."
                  },
                  "content": {
                    "type": "object",
                    "description": "The content of the post."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getLists": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Fetch a list of lists that belong to an actor",
        "description": "Retrieves lists associated with a specified actor.",
        "operationId": "GetLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actor",
            "required": true,
            "type": "string",
            "format": "at-identifier",
            "x-ms-summary": "Actor identifier",
            "description": "The unique identifier of the actor whose lists are being retrieved."
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1,
            "x-ms-summary": "Limit the number of results",
            "description": "Specifies the maximum number of lists to return."
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string",
            "x-ms-summary": "Cursor for pagination",
            "description": "Used to fetch the next page of lists."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "lists": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who does the viewer mute",
        "description": "Retrieves a list of accounts that the viewer has muted.",
        "operationId": "GetMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1,
            "x-ms-summary": "Limit the number of results",
            "description": "Specifies the maximum number of muted accounts to return."
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string",
            "x-ms-summary": "Cursor for pagination",
            "description": "Used to fetch the next page of muted accounts."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "mutes"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "mutes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.feed.searchPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Search Posts",
        "description": "Searches for posts across the Bluesky network based on a specified query. This endpoint is part of the `app.bsky.feed` namespace and requires authentication.",
        "operationId": "searchPosts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The search query to find posts.",
            "x-ms-summary": "Search Query"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of search results to retrieve.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results.",
            "x-ms-summary": "Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results for posts matching the query.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string",
                    "description": "The unique identifier of the post."
                  },
                  "authorId": {
                    "type": "string",
                    "description": "The unique identifier of the post's author."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the post was created."
                  },
                  "content": {
                    "type": "object",
                    "description": "The content of the post."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.muteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an actor by did or handle",
        "description": "Mutes a specified actor using their DID or handle.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "actor"
              ],
              "type": "object",
              "properties": {
                "actor": {
                  "format": "uri",
                  "description": "Actor identifier",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor muted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "MuteActor"
      }
    },
    "/app.bsky.graph.muteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute a list of actors",
        "description": "Mutes a list of specified actors using their identifiers.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "actors"
              ],
              "type": "object",
              "properties": {
                "actors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri",
                    "description": "Actor identifier"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors muted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "MuteActorList"
      }
    },
    "/app.bsky.graph.unmuteThread": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute Thread",
        "description": "Unmutes a specific thread for an actor, allowing notifications and visibility in feeds again.  This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`) and typically  requires authentication. For further details, see the  [API Hosts and Auth guide](https://docs.bsky.app/docs/advanced-guides/api-directory).\n",
        "operationId": "unmuteThread",
        "parameters": [
          {
            "name": "thread",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier (URI) of the thread to unmute.",
            "x-ms-summary": "Thread URI"
          },
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The DID or handle of the actor unmuting the thread.",
            "x-ms-summary": "Actor identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the specified thread.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the thread was successfully unmuted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "enum": [
                    "InvalidRequest",
                    "ExpiredToken",
                    "InvalidToken"
                  ]
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "type": "object",
              "required": [
                "error",
                "message"
              ],
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error code indicating missing authentication."
                },
                "message": {
                  "type": "string",
                  "description": "Detailed error message for unauthorized access."
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.unmuteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an actor by did or handle",
        "description": "Unmutes a specified actor using their DID or handle.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "actor"
              ],
              "type": "object",
              "properties": {
                "actor": {
                  "format": "uri",
                  "description": "Actor identifier",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor unmuted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "UnmuteActor"
      }
    },
    "/app.bsky.graph.unmuteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute a list of actors",
        "description": "Unmutes a list of specified actors using their identifiers.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "actors"
              ],
              "type": "object",
              "properties": {
                "actors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri",
                    "description": "Actor identifier"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors unmuted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "UnmuteActorList"
      }
    },
    "/app.bsky.notification.listNotifications": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Retrieve a list of notifications",
        "description": "Fetches a list of notifications for the authenticated user.",
        "operationId": "ListNotifications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 20,
            "maximum": 100,
            "x-ms-summary": "Limit the number of results",
            "description": "Specifies the maximum number of notifications to return."
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string",
            "x-ms-summary": "Cursor for pagination",
            "description": "Used to fetch the next page of notifications."
          },
          {
            "in": "query",
            "name": "seenAt",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Last seen timestamp",
            "description": "Filters notifications to show those received since the last seen timestamp."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "notifications": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NotificationView"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for pagination"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.notification.updateSeen": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Mark notifications as seen",
        "description": "Marks notifications as seen up to the specified timestamp for the authenticated user.",
        "operationId": "UpdateSeen",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "seenAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp up to which notifications are marked as seen."
                }
              },
              "required": [
                "seenAt"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications marked as seen successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/app.bsky.unspecced.popular": {
      "get": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "Retrieve popular posts",
        "description": "Fetches a list of popular posts.",
        "operationId": "GetPopularPosts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 20,
            "maximum": 100,
            "x-ms-summary": "Limit the number of results",
            "description": "Specifies the maximum number of popular posts to return."
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string",
            "x-ms-summary": "Cursor for pagination",
            "description": "Used to fetch the next page of popular posts."
          },
          {
            "in": "query",
            "name": "algorithm",
            "type": "string",
            "x-ms-summary": "Algorithm type",
            "description": "Specifies the algorithm used to determine popularity."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string",
                  "description": "Cursor for pagination"
                },
                "posts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PostView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/com.atproto.server.createSession": {
      "post": {
        "summary": "CreateSession",
        "description": "Authenticates to Bluesky and retrieves session tokens",
        "operationId": "CreateSession",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "type": "string",
            "default": "application/json",
            "x-ms-summary": "Content-Type header value",
            "description": "Content-Type header value"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "identifier"
                },
                "password": {
                  "type": "string",
                  "description": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "x-ms-visibility": "important"
      }
    }
  },
  "definitions": {

    "LabelerService": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string",
          "description": "Unique identifier for the labeler service."
        },
        "name": {
          "type": "string",
          "description": "Name of the labeler service."
        },
        "description": {
          "type": "string",
          "description": "Brief description of the labeler service."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp indicating when the service was created."
        }
      }
    },
    "Relationship": {
      "type": "object",
      "properties": {
        "actor": {
          "type": "string",
          "description": "The DID or handle of the target actor."
        },
        "follows": {
          "type": "boolean",
          "description": "Whether the primary actor follows the target actor."
        },
        "blocks": {
          "type": "boolean",
          "description": "Whether the primary actor has blocked the target actor."
        },
        "muted": {
          "type": "boolean",
          "description": "Whether the primary actor has muted the target actor."
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The unique identifier of the user."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the user."
        },
        "bio": {
          "type": "string",
          "description": "Short biography or description of the user."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the user joined the network."
        }
      }
    },
    "StarterPack": {
      "type": "object",
      "properties": {
        "packId": {
          "type": "string",
          "description": "Unique identifier of the starter pack."
        },
        "title": {
          "type": "string",
          "description": "Title of the starter pack."
        },
        "description": {
          "type": "string",
          "description": "Brief description of the starter pack."
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "description": "The unique identifier of a user in the starter pack."
              },
              "displayName": {
                "type": "string",
                "description": "Display name of the user."
              },
              "bio": {
                "type": "string",
                "description": "Short biography or description of the user."
              }
            }
          }
        }
      }
    },
    "SuggestedFeed": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The URI for the suggested feed."
        },
        "title": {
          "type": "string",
          "description": "Title of the suggested feed."
        },
        "description": {
          "type": "string",
          "description": "Description of the suggested feed."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp indicating when the feed was created."
        }
      }
    },
    "QuoteItem": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The URI of the quote."
        },
        "author": {
          "type": "string",
          "description": "Author of the quote."
        },
        "content": {
          "type": "string",
          "description": "Content of the quote."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp indicating when the quote was created."
        }
      }
    },
    "NotificationView": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the notification."
        },
        "message": {
          "type": "string",
          "description": "Notification message content."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the notification was created."
        }
      }
    },
    "ProfileViewBasic": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ProfileView": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "description": {
          "maxLength": 2560,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ProfileViewDetailed": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "description": {
          "maxLength": 2560,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "banner": {
          "type": "string"
        },
        "followersCount": {
          "type": "integer"
        },
        "followsCount": {
          "type": "integer"
        },
        "postsCount": {
          "type": "integer"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ViewerState": {
      "type": "object",
      "properties": {
        "muted": {
          "type": "boolean"
        },
        "mutedByList": {
          "$ref": "#/definitions/ListViewBasic"
        },
        "blockedBy": {
          "type": "boolean"
        },
        "blocking": {
          "format": "at-uri",
          "type": "string"
        },
        "following": {
          "format": "at-uri",
          "type": "string"
        },
        "followedBy": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "Preferences": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/AdultContentPref"
          }
        ]
      }
    },
    "AdultContentPref": {
      "required": [
        "enabled"
      ],
      "type": "object",
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "ContentLabelPref": {
      "required": [
        "label",
        "visibility"
      ],
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "visibility": {
          "enum": [
            "show",
            "warn",
            "hide"
          ],
          "type": "string"
        }
      }
    },
    "Label": {
      "description": "Metadata tag on an atproto resource (eg, repo or record)",
      "required": [
        "src",
        "uri",
        "val",
        "cts"
      ],
      "type": "object",
      "properties": {
        "src": {
          "format": "did",
          "description": "DID of the actor who created this label",
          "type": "string"
        },
        "uri": {
          "format": "uri",
          "description": "AT URI of the record, repository (account), or other resource which this label applies to",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "description": "optionally, CID specifying the specific version of 'uri' resource this label applies to",
          "type": "string"
        },
        "val": {
          "description": "the short string name of the value or type of this label",
          "maxLength": 128,
          "type": "string"
        },
        "neg": {
          "description": "if true, this is a negation label, overwriting a previous label",
          "type": "boolean"
        },
        "cts": {
          "format": "datetime",
          "description": "timestamp when this label was created",
          "type": "string"
        }
      }
    },
    "ListViewBasic": {
      "type": "object"
    },
    "ExternalEmbed": {
      "required": [
        "external"
      ],
      "type": "object",
      "properties": {
        "external": {
          "$ref": "#/definitions/External"
        }
      }
    },
    "External": {
      "required": [
        "uri",
        "title",
        "description"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thumb": {
          "format": "binary",
          "maxLength": 1000000,
          "type": "string"
        }
      }
    },
    "ExternalEmbedView": {
      "required": [
        "external"
      ],
      "type": "object",
      "properties": {
        "external": {
          "$ref": "#/definitions/ExternalView"
        }
      }
    },
    "ExternalView": {
      "required": [
        "uri",
        "title",
        "description"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thumb": {
          "type": "string"
        }
      }
    },
    "ImagesEmbed": {
      "required": [
        "images"
      ],
      "type": "object",
      "properties": {
        "images": {
          "maxItems": 4,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "Image": {
      "required": [
        "image",
        "alt"
      ],
      "type": "object",
      "properties": {
        "image": {
          "format": "binary",
          "maxLength": 1000000,
          "type": "string"
        },
        "alt": {
          "type": "string"
        }
      }
    },
    "ImagesEmbedView": {
      "required": [
        "images"
      ],
      "type": "object",
      "properties": {
        "images": {
          "maxItems": 4,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageView"
          }
        }
      }
    },
    "ImageView": {
      "required": [
        "thumb",
        "fullsize",
        "alt"
      ],
      "type": "object",
      "properties": {
        "thumb": {
          "type": "string"
        },
        "fullsize": {
          "type": "string"
        },
        "alt": {
          "type": "string"
        }
      }
    },
    "RecordEmbed": {
      "required": [
        "record"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/StrongRef"
        }
      }
    },
    "RecordEmbedView": {
      "required": [
        "record"
      ],
      "type": "object",
      "properties": {
        "record": {
          "allOf": [
            {
              "$ref": "#/definitions/ViewRecord"
            }
          ]
        }
      }
    },
    "ViewRecord": {
      "required": [
        "uri",
        "cid",
        "author",
        "value",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "value": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "embeds": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/ImagesEmbedView"
              }
            ]
          }
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ViewNotFound": {
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "ViewBlocked": {
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "RecordWithMediaEmbed": {
      "required": [
        "record",
        "media"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/RecordEmbed"
        },
        "media": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbed"
            }
          ]
        }
      }
    },
    "RecordWithMediaEmbedView": {
      "required": [
        "record",
        "media"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/RecordEmbedView"
        },
        "media": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbedView"
            }
          ]
        }
      }
    },
    "PostView": {
      "required": [
        "uri",
        "cid",
        "author",
        "record",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "record": {
          "type": "object"
        },
        "embed": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbedView"
            }
          ]
        },
        "replyCount": {
          "type": "integer"
        },
        "repostCount": {
          "type": "integer"
        },
        "likeCount": {
          "type": "integer"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "BlockedActor": {
      "type": "object"
    },
    "BlockedByActor": {
      "type": "object"
    },
    "Like": {
      "required": [
        "indexedAt",
        "createdAt",
        "actor"
      ],
      "type": "object",
      "properties": {
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        },
        "actor": {
          "$ref": "#/definitions/ProfileView"
        }
      }
    },
    "FeedLike": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/StrongRef"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The URI of the post."
        },
        "author": {
          "type": "string",
          "description": "The author of the post."
        },
        "content": {
          "type": "string",
          "description": "The content of the post."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp indicating when the post was created."
        }
      }
    },
    "Embed": {
      "allOf": [
        {
          "$ref": "#/definitions/ImagesEmbedView"
        }
      ]
    },
    "ReplyRef": {
      "required": [
        "root",
        "parent"
      ],
      "type": "object",
      "properties": {
        "root": {
          "$ref": "#/definitions/StrongRef"
        },
        "parent": {
          "$ref": "#/definitions/StrongRef"
        }
      }
    },
    "Entity": {
      "description": "Deprecated - use facets instead",
      "required": [
        "index",
        "type",
        "value"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/TextSlice"
        },
        "type": {
          "description": "Expected values are 'mention' and 'link'",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TextSlice": {
      "description": "Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings",
      "required": [
        "start",
        "end"
      ],
      "type": "object",
      "properties": {
        "start": {
          "minimum": 0,
          "type": "integer"
        },
        "end": {
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "Repost": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/StrongRef"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Block": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "did",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Follow": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "did",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ListRecord": {
      "required": [
        "name",
        "purpose",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "purpose": {
          "$ref": "#/definitions/ListPurpose"
        },
        "name": {
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "maxLength": 3000,
          "type": "string"
        },
        "descriptionFacets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RichTextFacet"
          }
        },
        "avatar": {
          "format": "binary",
          "description": "A binary file with a maximum size of 1,000,000 bytes. Accepts image/png or image/jpeg file types",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ListItemRecord": {
      "required": [
        "subject",
        "list",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "uri",
          "description": "Decentralized identifier (DID)",
          "type": "string"
        },
        "list": {
          "format": "uri",
          "description": "Unique identifier of the list",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Creation date of the list item",
          "type": "string"
        }
      }
    },
    "Notification": {
      "required": [
        "uri",
        "cid",
        "author",
        "reason",
        "record",
        "isRead",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "cid": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileView"
        },
        "reason": {
          "enum": [
            "like",
            "repost",
            "follow",
            "mention",
            "reply",
            "quote"
          ],
          "type": "string"
        },
        "reasonSubject": {
          "format": "uri",
          "type": "string"
        },
        "record": {
          "type": "object"
        },
        "isRead": {
          "type": "boolean"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "Feed": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "The URI for the feed."
        },
        "title": {
          "type": "string",
          "description": "Title of the feed."
        },
        "description": {
          "type": "string",
          "description": "Description of the feed."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp indicating when the feed was created."
        }
      }
    },
    "FeedGenerator": {
      "type": "object",
      "properties": {
        "did": {
          "type": "string",
          "description": "Decentralized identifier (DID) of the feed generator."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the feed generator."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the feed generator."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of when the feed generator was created."
        },
        "feeds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feed"
          }
        },
        "policies": {
          "type": "object",
          "description": "Policies associated with the feed generator.",
          "properties": {
            "content": {
              "type": "string",
              "description": "Content policy for the feed generator."
            },
            "moderation": {
              "type": "string",
              "description": "Moderation policy for the feed generator."
            }
          }
        }
      }
    },
    "Facet": {
      "required": [
        "index",
        "features"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/ByteSlice"
        },
        "features": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Mention"
              }
            ]
          }
        }
      }
    },
    "Mention": {
      "description": "A facet feature for actor mentions",
      "required": [
        "did"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        }
      }
    },
    "Link": {
      "description": "A facet feature for links",
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        }
      }
    },
    "ByteSlice": {
      "description": "A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings",
      "required": [
        "byteStart",
        "byteEnd"
      ],
      "type": "object",
      "properties": {
        "byteStart": {
          "minimum": 0,
          "type": "integer"
        },
        "byteEnd": {
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "FeedViewPost": {
      "required": [
        "post"
      ],
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/PostView"
        },
        "reply": {
          "$ref": "#/definitions/ReplyRef"
        },
        "reason": {
          "allOf": [
            {
              "$ref": "#/definitions/ReasonRepost"
            }
          ]
        }
      }
    },
    "ReasonRepost": {
      "required": [
        "by",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "by": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ThreadViewPost": {
      "required": [
        "post"
      ],
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/PostView"
        },
        "parent": {
          "allOf": [
            {
              "$ref": "#/definitions/ThreadViewPost"
            }
          ]
        },
        "replies": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/ThreadViewPost"
              }
            ]
          }
        }
      }
    },
    "NotFoundPost": {
      "required": [
        "uri",
        "notFound"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "notFound": {
          "default": true,
          "type": "boolean"
        }
      }
    },
    "BlockedPost": {
      "required": [
        "uri",
        "blocked"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "blocked": {
          "default": true,
          "type": "boolean"
        }
      }
    },
    "ListView": {
      "required": [
        "uri",
        "creator",
        "name",
        "purpose",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/ProfileView"
        },
        "name": {
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "purpose": {
          "$ref": "#/definitions/ListPurpose"
        },
        "description": {
          "description": "Max graphemes 300, maxLength 3000",
          "type": "string"
        },
        "descriptionFacets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RichTextFacet"
          }
        },
        "avatar": {
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ListViewerState"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ListItemView": {
      "required": [
        "subject"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/ProfileView"
        }
      }
    },
    "ListPurpose": {
      "enum": [
        "modlist"
      ],
      "type": "string"
    },
    "Modlist": {
      "description": "A list of actors to apply an aggregate moderation action (mute/block) on",
      "type": "string"
    },
    "ListViewerState": {
      "type": "object",
      "properties": {
        "muted": {
          "type": "boolean"
        }
      }
    },
    "StrongRef": {
      "description": "A URI with a content-hash fingerprint",
      "required": [
        "uri",
        "cid"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        }
      }
    },
    "RichTextFacet": {
      "required": [
        "index",
        "features"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/ByteSlice"
        },
        "features": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Mention"
              }
            ]
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "accessToken": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "tags": []
}