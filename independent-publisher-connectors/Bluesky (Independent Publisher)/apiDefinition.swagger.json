{
  "swagger": "2.0",
  "info": {
    "title": "Bluesky API",
    "description": "Unofficial specification for the Bluesky Social endpoints",
    "contact": {
      "email": "dan.romano@swolcat.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.0"
  },
  "host": "bsky.social",
  "basePath": "/xrpc",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/app.bsky.actor.getPreferences": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get private preferences attached to the account",
        "operationId": "GetPreferences",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "required": [
                "preferences"
              ],
              "type": "object",
              "properties": {
                "preferences": {
                  "$ref": "#/definitions/Preferences"
                }
              }
            }
          }
        },
        "parameters": [],
        "description": "Get private preferences attached to the account"
      }
    },
    "/app.bsky.actor.getProfile": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "operationId": "getActorProfile",
        "summary": "Retrieve a profile for a specific actor",
        "description": "Fetches detailed profile information for a specified actor from Bluesky.",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor identifier",
            "description": "The unique identifier of the actor whose profile is being retrieved."
          }
        ],
        "responses": {
          "200": {
            "description": "A profile object containing details about the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "actorId": {
                  "type": "string",
                  "description": "The unique identifier of the actor."
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of the actor."
                },
                "bio": {
                  "type": "string",
                  "description": "The biography or description of the actor."
                },
                "profileImage": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL of the actor's profile image."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of when the profile was created."
                }
              },
              "required": [ "actorId", "displayName" ]
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.getProfiles": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Retrieve profiles for multiple actors",
        "operationId": "GetProfiles",
        "description": "Fetches detailed profile information for a list of specified actors from Bluesky.",
        "parameters": [
          {
            "name": "actorIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "List of actor identifiers",
            "description": "An array of unique identifiers for each actor whose profile information is being retrieved."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of profile objects containing details about each actor.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actorId": {
                    "type": "string",
                    "description": "The unique identifier of the actor."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the actor."
                  },
                  "bio": {
                    "type": "string",
                    "description": "The biography or description of the actor."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the actor's profile image."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of when the profile was created."
                  }
                },
                "required": [ "actorId", "displayName" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.getSuggestions": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Retrieve suggested actors",
        "description": "Fetches a list of suggested actors for the authenticated user, based on various criteria.",
        "operationId":  "GetSuggestions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit the number of suggestions",
            "description": "Specifies the maximum number of actor suggestions to return."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset for pagination",
            "description": "Specifies the offset for pagination, allowing you to skip a certain number of suggestions."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of suggested actors for the user.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actorId": {
                    "type": "string",
                    "description": "The unique identifier of the suggested actor."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the suggested actor."
                  },
                  "bio": {
                    "type": "string",
                    "description": "The biography or description of the suggested actor."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the suggested actor's profile image."
                  },
                  "suggestedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the actor was suggested."
                  }
                },
                "required": [ "actorId", "displayName" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.putPreferences": {
      "put": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Update actor preferences",
        "description": "Updates the preferences for the authenticated user, allowing customization of settings.",
        "operationId": "PutPreferences",
        "parameters": [
          {
            "name": "preferences",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "theme": {
                  "type": "string",
                  "enum": [ "light", "dark" ],
                  "description": "The preferred theme for the user interface, either 'light' or 'dark'."
                },
                "notificationsEnabled": {
                  "type": "boolean",
                  "description": "Whether notifications are enabled for the user."
                },
                "language": {
                  "type": "string",
                  "description": "The preferred language for the user interface."
                }
              }
            },
            "x-ms-summary": "User preferences object",
            "description": "An object containing the updated preferences for the authenticated user."
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmation that preferences were updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the preferences update was successful."
                },
                "message": {
                  "type": "string",
                  "description": "A message confirming the update of preferences."
                }
              },
              "required": [ "success", "message" ]
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.searchActors": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Search for actors",
        "description": "Allows searching for actors based on a query, with options for limiting and offsetting results.",
        "operationId": "SearchActors",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search query",
            "description": "The search term to find matching actors."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of results to return."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result offset",
            "description": "The number of results to skip for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of actors matching the search query.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actorId": {
                    "type": "string",
                    "description": "The unique identifier of the actor."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the actor."
                  },
                  "bio": {
                    "type": "string",
                    "description": "The biography or description of the actor."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the actor's profile image."
                  },
                  "joinedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the actor joined."
                  }
                },
                "required": [ "actorId", "displayName" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.searchActorsTypeahead": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Typeahead search for actors",
        "operationId": "SearchActorsTypeahead",
        "description": "Provides a typeahead search feature for finding actors based on partial input.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Partial search query",
            "description": "The partial input to search for matching actors."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of results to return for the typeahead search."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of actors matching the partial search query.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actorId": {
                    "type": "string",
                    "description": "The unique identifier of the actor."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the actor."
                  },
                  "bio": {
                    "type": "string",
                    "description": "The biography or description of the actor."
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "description": "The URL of the actor's profile image."
                  },
                  "suggestedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the actor was suggested."
                  }
                },
                "required": [ "actorId", "displayName" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getAuthorFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Retrieve an author's feed",
        "operationId": "GetAuthorFeed",
        "description": "Fetches the feed posts of a specified author.",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Author identifier",
            "description": "The unique identifier of the author whose feed is being retrieved."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of posts to retrieve from the author's feed."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Pagination cursor",
            "description": "A timestamp to paginate results, retrieving posts published before this time."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts from the specified author's feed.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string",
                    "description": "The unique identifier of the post."
                  },
                  "authorId": {
                    "type": "string",
                    "description": "The identifier of the author of the post."
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the post."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the post was created."
                  },
                  "likesCount": {
                    "type": "integer",
                    "description": "The number of likes the post has received."
                  },
                  "commentsCount": {
                    "type": "integer",
                    "description": "The number of comments on the post."
                  }
                },
                "required": [ "postId", "authorId", "content", "createdAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Retrieve likes for a post",
        "operationId": "GetLikes",
        "description": "Fetches a list of users who have liked a specified post.",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Post identifier",
            "description": "The unique identifier of the post for which likes are being retrieved."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of likes to retrieve."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Pagination cursor",
            "description": "A timestamp to paginate results, retrieving likes before this time."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sort order",
            "description": "The order in which to sort the likes, e.g., by time."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users who liked the specified post.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the user who liked the post."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user who liked the post."
                  },
                  "likedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user liked the post."
                  }
                },
                "required": [ "userId", "displayName", "likedAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getPostThread": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Retrieve a post thread",
        "operationId": "GetPostThread",
        "description": "Fetches the thread of replies and interactions associated with a specified post.",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Post identifier",
            "description": "The unique identifier of the post for which the thread is being retrieved."
          },
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Thread depth",
            "description": "The depth level of replies to retrieve in the thread."
          }
        ],
        "responses": {
          "200": {
            "description": "The thread of replies and interactions for the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "type": "string",
                  "description": "The unique identifier of the root post."
                },
                "authorId": {
                  "type": "string",
                  "description": "The identifier of the author of the root post."
                },
                "content": {
                  "type": "string",
                  "description": "The content of the root post."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp when the root post was created."
                },
                "replies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "replyId": {
                        "type": "string",
                        "description": "The unique identifier of the reply."
                      },
                      "authorId": {
                        "type": "string",
                        "description": "The identifier of the author of the reply."
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the reply."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the reply was created."
                      }
                    },
                    "required": [ "replyId", "authorId", "content", "createdAt" ]
                  },
                  "description": "An array of replies associated with the post thread."
                }
              },
              "required": [ "postId", "authorId", "content", "createdAt" ]
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Retrieve multiple posts",
        "operationId": "GetPosts",
        "description": "Fetches details for multiple specified posts based on their unique identifiers.",
        "parameters": [
          {
            "name": "postIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ms-summary": "List of post identifiers",
            "description": "An array of unique identifiers for each post to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts with details for each specified post identifier.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string",
                    "description": "The unique identifier of the post."
                  },
                  "authorId": {
                    "type": "string",
                    "description": "The unique identifier of the author of the post."
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the post."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the post was created."
                  },
                  "likesCount": {
                    "type": "integer",
                    "description": "The number of likes the post has received."
                  },
                  "commentsCount": {
                    "type": "integer",
                    "description": "The number of comments on the post."
                  }
                },
                "required": [ "postId", "authorId", "content", "createdAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.repostedBy": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Retrieve users who reposted a post",
        "operationId": "RepostedBy",
        "description": "Fetches a list of users who have reposted a specified post.",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "Post identifier",
            "description": "The unique identifier of the post for which repost information is being retrieved."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of reposts to retrieve."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Pagination cursor",
            "description": "A timestamp to paginate results, retrieving reposts before this time."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-summary": "Sort order",
            "description": "The order in which to sort the reposts, e.g., by time."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users who reposted the specified post.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the user who reposted the post."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user who reposted the post."
                  },
                  "repostedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user reposted the post."
                  }
                },
                "required": [ "userId", "displayName", "repostedAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getTimeline": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Retrieve the user’s timeline",
        "operationId": "GetTimeline",
        "description": "Fetches posts from the authenticated user's timeline, including posts from followed users.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of posts to retrieve for the timeline."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Pagination cursor",
            "description": "A timestamp to paginate results, retrieving posts before this time."
          },
          {
            "name": "includeReplies",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Include replies",
            "description": "Specifies whether to include replies in the timeline results."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts from the user’s timeline.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "postId": {
                    "type": "string",
                    "description": "The unique identifier of the post."
                  },
                  "authorId": {
                    "type": "string",
                    "description": "The unique identifier of the author of the post."
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the post."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the post was created."
                  },
                  "likesCount": {
                    "type": "integer",
                    "description": "The number of likes the post has received."
                  },
                  "commentsCount": {
                    "type": "integer",
                    "description": "The number of comments on the post."
                  }
                },
                "required": [ "postId", "authorId", "content", "createdAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.follow": {
      "post": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Follow a user",
        "operationId": "Follow",
        "description": "Allows the authenticated user to follow a specified user on the platform.",
        "parameters": [
          {
            "name": "userId",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "User identifier",
            "description": "The unique identifier of the user to follow."
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmation that the user was successfully followed.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the follow action was successful."
                },
                "message": {
                  "type": "string",
                  "description": "A message confirming that the user was followed."
                }
              },
              "required": [ "success", "message" ]
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Retrieve blocked users",
        "operationId": "GetBlocks",
        "description": "Fetches a list of users that the authenticated user has blocked.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of blocked users to retrieve."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result offset",
            "description": "The number of blocked users to skip for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users that have been blocked by the authenticated user.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the blocked user."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the blocked user."
                  },
                  "blockedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user was blocked."
                  }
                },
                "required": [ "userId", "displayName", "blockedAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Retrieve a user's followers",
        "operationId": "GetFollowers",
        "description": "Fetches a list of users who follow a specified user.",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "User identifier",
            "description": "The unique identifier of the user whose followers are being retrieved."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of followers to retrieve."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result offset",
            "description": "The number of followers to skip for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users who follow the specified user.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the follower."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the follower."
                  },
                  "followedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user started following."
                  }
                },
                "required": [ "userId", "displayName", "followedAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getFollows": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Retrieve users followed by a user",
        "operationId": "GetFollows",
        "description": "Fetches a list of users that the specified user is following.",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "User identifier",
            "description": "The unique identifier of the user whose followed users are being retrieved."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result limit",
            "description": "The maximum number of users to retrieve."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Result offset",
            "description": "The number of users to skip for pagination."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users that the specified user is following.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the followed user."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the followed user."
                  },
                  "followedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user started following."
                  }
                },
                "required": [ "userId", "displayName", "followedAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getList": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Retrieve a user list",
        "operationId": "GetList",
        "description": "Fetches a list of users associated with a specified list, such as a group or category.",
        "parameters": [
          {
            "name": "listId",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "List identifier",
            "description": "The unique identifier of the list to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users associated with the specified list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "The unique identifier of the user in the list."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the user in the list."
                  },
                  "addedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the user was added to the list."
                  }
                },
                "required": [ "userId", "displayName", "addedAt" ]
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "Error message"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the error"
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.graph.getListMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Which lists is the requester's account muting?",
        "operationId": "GetListMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "lists": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getLists": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Fetch a list of lists that belong to an actor",
        "operationId": "GetLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actor",
            "required": true,
            "type": "string",
            "format": "at-identifier"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "lists": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who does the viewer mute?",
        "operationId": "GetMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "mutes"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "mutes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.muteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an actor by did or handle",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "actor"
              ],
              "type": "object",
              "properties": {
                "actor": {
                  "format": "uri",
                  "description": "Actor identifier",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor muted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "MuteActor"
      }
    },
    "/app.bsky.graph.muteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute a list of actors",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "list"
              ],
              "type": "object",
              "properties": {
                "list": {
                  "format": "uri",
                  "description": "List identifier",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor list muted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "MuteActorList"
      }
    },
    "/app.bsky.graph.unmuteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an actor by did or handle",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "actor"
              ],
              "type": "object",
              "properties": {
                "actor": {
                  "format": "at-identifier",
                  "description": "Actor identifier",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor unmuted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "UnmuteActor"
      }
    },
    "/app.bsky.graph.unmuteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute a list of actors",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "list"
              ],
              "type": "object",
              "properties": {
                "list": {
                  "format": "at-uri",
                  "description": "List URI",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors in the list unmuted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "UnmuteActorList"
      }
    },
    "/app.bsky.notification.getUnreadCount": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Get count of unread notifications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "seenAt",
            "description": "Datetime at which notifications were last seen",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "count"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "description": "Count of unread notifications",
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "GetUnreadCount"
      }
    },
    "/app.bsky.notification.listNotifications": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "List notifications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of notifications to fetch",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paginating through notifications",
            "type": "string"
          },
          {
            "in": "query",
            "name": "seenAt",
            "description": "Datetime at which notifications were last seen",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "notifications"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "description": "Cursor for the next page of notifications",
                  "type": "string"
                },
                "notifications": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Notification"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "ListNotifications"
      }
    },
    "/app.bsky.notification.updateSeen": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Notify server that the user has seen notifications",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "seenAt"
              ],
              "type": "object",
              "properties": {
                "seenAt": {
                  "format": "date-time",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "UpdateSeen"
      }
    },
    "/app.bsky.unspecced.popular": {
      "get": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "An unspecced view of globally popular items",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "includeNsfw",
            "description": "Whether to include not safe for work items",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items to return",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "Cursor for pagination",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "feed"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "feed": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FeedViewPost"
                  }
                }
              }
            }
          }
        },
        "operationId": "Popular"
      }
    },
    "/com.atproto.server.createSession": {
      "post": {
        "summary": "CreateSession",
        "description": "Authenticates to Bluesky and retrieves session tokens",
        "operationId": "CreateSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "User identifier (e.g., username or email)"
                },
                "password": {
                  "type": "string",
                  "description": "Password for authentication"
                }
              },
              "required": [ "identifier", "password" ],
              "x-ms-visibility": "internal"
            },
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "accessJwt": {
                  "type": "string",
                  "description": "Access JWT token"
                },
                "refreshJwt": {
                  "type": "string",
                  "description": "Refresh JWT token"
                }
              }
            }
          }
        },
        "x-ms-visibility": "important"
      }
    }
  },
  "definitions": {
    "ProfileViewBasic": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ProfileView": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "description": {
          "maxLength": 2560,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ProfileViewDetailed": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "description": {
          "maxLength": 2560,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "banner": {
          "type": "string"
        },
        "followersCount": {
          "type": "integer"
        },
        "followsCount": {
          "type": "integer"
        },
        "postsCount": {
          "type": "integer"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ViewerState": {
      "type": "object",
      "properties": {
        "muted": {
          "type": "boolean"
        },
        "mutedByList": {
          "$ref": "#/definitions/ListViewBasic"
        },
        "blockedBy": {
          "type": "boolean"
        },
        "blocking": {
          "format": "at-uri",
          "type": "string"
        },
        "following": {
          "format": "at-uri",
          "type": "string"
        },
        "followedBy": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "Preferences": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/AdultContentPref"
          }
        ]
      }
    },
    "AdultContentPref": {
      "required": [
        "enabled"
      ],
      "type": "object",
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "ContentLabelPref": {
      "required": [
        "label",
        "visibility"
      ],
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "visibility": {
          "enum": [
            "show",
            "warn",
            "hide"
          ],
          "type": "string"
        }
      }
    },
    "Label": {
      "description": "Metadata tag on an atproto resource (eg, repo or record)",
      "required": [
        "src",
        "uri",
        "val",
        "cts"
      ],
      "type": "object",
      "properties": {
        "src": {
          "format": "did",
          "description": "DID of the actor who created this label",
          "type": "string"
        },
        "uri": {
          "format": "uri",
          "description": "AT URI of the record, repository (account), or other resource which this label applies to",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "description": "optionally, CID specifying the specific version of 'uri' resource this label applies to",
          "type": "string"
        },
        "val": {
          "description": "the short string name of the value or type of this label",
          "maxLength": 128,
          "type": "string"
        },
        "neg": {
          "description": "if true, this is a negation label, overwriting a previous label",
          "type": "boolean"
        },
        "cts": {
          "format": "datetime",
          "description": "timestamp when this label was created",
          "type": "string"
        }
      }
    },
    "ListViewBasic": {
      "type": "object"
    },
    "ExternalEmbed": {
      "required": [
        "external"
      ],
      "type": "object",
      "properties": {
        "external": {
          "$ref": "#/definitions/External"
        }
      }
    },
    "External": {
      "required": [
        "uri",
        "title",
        "description"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thumb": {
          "format": "binary",
          "maxLength": 1000000,
          "type": "string"
        }
      }
    },
    "ExternalEmbedView": {
      "required": [
        "external"
      ],
      "type": "object",
      "properties": {
        "external": {
          "$ref": "#/definitions/ExternalView"
        }
      }
    },
    "ExternalView": {
      "required": [
        "uri",
        "title",
        "description"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thumb": {
          "type": "string"
        }
      }
    },
    "ImagesEmbed": {
      "required": [
        "images"
      ],
      "type": "object",
      "properties": {
        "images": {
          "maxItems": 4,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "Image": {
      "required": [
        "image",
        "alt"
      ],
      "type": "object",
      "properties": {
        "image": {
          "format": "binary",
          "maxLength": 1000000,
          "type": "string"
        },
        "alt": {
          "type": "string"
        }
      }
    },
    "ImagesEmbedView": {
      "required": [
        "images"
      ],
      "type": "object",
      "properties": {
        "images": {
          "maxItems": 4,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageView"
          }
        }
      }
    },
    "ImageView": {
      "required": [
        "thumb",
        "fullsize",
        "alt"
      ],
      "type": "object",
      "properties": {
        "thumb": {
          "type": "string"
        },
        "fullsize": {
          "type": "string"
        },
        "alt": {
          "type": "string"
        }
      }
    },
    "RecordEmbed": {
      "required": [
        "record"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/StrongRef"
        }
      }
    },
    "RecordEmbedView": {
      "required": [
        "record"
      ],
      "type": "object",
      "properties": {
        "record": {
          "allOf": [
            {
              "$ref": "#/definitions/ViewRecord"
            }
          ]
        }
      }
    },
    "ViewRecord": {
      "required": [
        "uri",
        "cid",
        "author",
        "value",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "value": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "embeds": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/ImagesEmbedView"
              }
            ]
          }
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ViewNotFound": {
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "ViewBlocked": {
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "RecordWithMediaEmbed": {
      "required": [
        "record",
        "media"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/RecordEmbed"
        },
        "media": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbed"
            }
          ]
        }
      }
    },
    "RecordWithMediaEmbedView": {
      "required": [
        "record",
        "media"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/RecordEmbedView"
        },
        "media": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbedView"
            }
          ]
        }
      }
    },
    "PostView": {
      "required": [
        "uri",
        "cid",
        "author",
        "record",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "record": {
          "type": "object"
        },
        "embed": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbedView"
            }
          ]
        },
        "replyCount": {
          "type": "integer"
        },
        "repostCount": {
          "type": "integer"
        },
        "likeCount": {
          "type": "integer"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "BlockedActor": {
      "type": "object"
    },
    "BlockedByActor": {
      "type": "object"
    },
    "Like": {
      "required": [
        "indexedAt",
        "createdAt",
        "actor"
      ],
      "type": "object",
      "properties": {
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        },
        "actor": {
          "$ref": "#/definitions/ProfileView"
        }
      }
    },
    "FeedLike": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/StrongRef"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Post": {
      "required": [
        "text",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "text": {
          "description": "text",
          "maxLength": 3000,
          "type": "string"
        },
        "entities": {
          "description": "deprecated - replaced by app.bsky.richtext.facet",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "facets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facet"
          }
        },
        "reply": {
          "$ref": "#/definitions/ReplyRef"
        },
        "embed": {
          "$ref": "#/definitions/Embed"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Embed": {
      "allOf": [
        {
          "$ref": "#/definitions/ImagesEmbedView"
        }
      ]
    },
    "ReplyRef": {
      "required": [
        "root",
        "parent"
      ],
      "type": "object",
      "properties": {
        "root": {
          "$ref": "#/definitions/StrongRef"
        },
        "parent": {
          "$ref": "#/definitions/StrongRef"
        }
      }
    },
    "Entity": {
      "description": "Deprecated - use facets instead",
      "required": [
        "index",
        "type",
        "value"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/TextSlice"
        },
        "type": {
          "description": "Expected values are 'mention' and 'link'",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TextSlice": {
      "description": "Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings",
      "required": [
        "start",
        "end"
      ],
      "type": "object",
      "properties": {
        "start": {
          "minimum": 0,
          "type": "integer"
        },
        "end": {
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "Repost": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/StrongRef"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Block": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "did",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Follow": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "did",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ListRecord": {
      "required": [
        "name",
        "purpose",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "purpose": {
          "$ref": "#/definitions/ListPurpose"
        },
        "name": {
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "maxLength": 3000,
          "type": "string"
        },
        "descriptionFacets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RichTextFacet"
          }
        },
        "avatar": {
          "format": "binary",
          "description": "A binary file with a maximum size of 1,000,000 bytes. Accepts image/png or image/jpeg file types",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ListItemRecord": {
      "required": [
        "subject",
        "list",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "uri",
          "description": "Decentralized identifier (DID)",
          "type": "string"
        },
        "list": {
          "format": "uri",
          "description": "Unique identifier of the list",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Creation date of the list item",
          "type": "string"
        }
      }
    },
    "Notification": {
      "required": [
        "uri",
        "cid",
        "author",
        "reason",
        "record",
        "isRead",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "cid": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileView"
        },
        "reason": {
          "enum": [
            "like",
            "repost",
            "follow",
            "mention",
            "reply",
            "quote"
          ],
          "type": "string"
        },
        "reasonSubject": {
          "format": "uri",
          "type": "string"
        },
        "record": {
          "type": "object"
        },
        "isRead": {
          "type": "boolean"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "Facet": {
      "required": [
        "index",
        "features"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/ByteSlice"
        },
        "features": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Mention"
              }
            ]
          }
        }
      }
    },
    "Mention": {
      "description": "A facet feature for actor mentions",
      "required": [
        "did"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        }
      }
    },
    "Link": {
      "description": "A facet feature for links",
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        }
      }
    },
    "ByteSlice": {
      "description": "A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings",
      "required": [
        "byteStart",
        "byteEnd"
      ],
      "type": "object",
      "properties": {
        "byteStart": {
          "minimum": 0,
          "type": "integer"
        },
        "byteEnd": {
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "FeedViewPost": {
      "required": [
        "post"
      ],
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/PostView"
        },
        "reply": {
          "$ref": "#/definitions/ReplyRef"
        },
        "reason": {
          "allOf": [
            {
              "$ref": "#/definitions/ReasonRepost"
            }
          ]
        }
      }
    },
    "ReasonRepost": {
      "required": [
        "by",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "by": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ThreadViewPost": {
      "required": [
        "post"
      ],
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/PostView"
        },
        "parent": {
          "allOf": [
            {
              "$ref": "#/definitions/ThreadViewPost"
            }
          ]
        },
        "replies": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/ThreadViewPost"
              }
            ]
          }
        }
      }
    },
    "NotFoundPost": {
      "required": [
        "uri",
        "notFound"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "notFound": {
          "default": true,
          "type": "boolean"
        }
      }
    },
    "BlockedPost": {
      "required": [
        "uri",
        "blocked"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "blocked": {
          "default": true,
          "type": "boolean"
        }
      }
    },
    "ListView": {
      "required": [
        "uri",
        "creator",
        "name",
        "purpose",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/ProfileView"
        },
        "name": {
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "purpose": {
          "$ref": "#/definitions/ListPurpose"
        },
        "description": {
          "description": "Max graphemes 300, maxLength 3000",
          "type": "string"
        },
        "descriptionFacets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RichTextFacet"
          }
        },
        "avatar": {
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ListViewerState"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ListItemView": {
      "required": [
        "subject"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/ProfileView"
        }
      }
    },
    "ListPurpose": {
      "enum": [
        "modlist"
      ],
      "type": "string"
    },
    "Modlist": {
      "description": "A list of actors to apply an aggregate moderation action (mute/block) on",
      "type": "string"
    },
    "ListViewerState": {
      "type": "object",
      "properties": {
        "muted": {
          "type": "boolean"
        }
      }
    },
    "StrongRef": {
      "description": "A URI with a content-hash fingerprint",
      "required": [
        "uri",
        "cid"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        }
      }
    },
    "RichTextFacet": {
      "required": [
        "index",
        "features"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/ByteSlice"
        },
        "features": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Mention"
              }
            ]
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "Access Token": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "Access Token": []
    }
  ],
  "tags": []
}