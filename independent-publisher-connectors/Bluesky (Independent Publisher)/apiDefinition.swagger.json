{
  "swagger": "2.0",
  "info": {
    "title": "Bluesky API",
    "description": "Unofficial OpenAPI specification for the Bluesky API endpoints.",
    "contact": {
      "email": "dan.romano@swolcat.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.0"
  },
  "host": "bsky.social",
  "basePath": "/xrpc",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/app.bsky.actor.getPreferences": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get private preferences attached to the account.",
        "operationId": "GetPreferences",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "required": [
                "preferences"
              ],
              "type": "object",
              "properties": {
                "preferences": {
                  "$ref": "#/definitions/Preferences"
                }
              }
            }
          }
        },
        "parameters": [],
        "description": "Get private preferences attached to the account."
      }
    },
    "/app.bsky.actor.getProfile": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get a detailed profile view of an actor.",
        "operationId": "getProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actor",
            "description": "Identifier of the actor to get the profile for.",
            "required": true,
            "type": "string",
            "format": "at-identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProfileViewDetailed"
            }
          }
        }
      }
    },
    "/app.bsky.actor.getProfiles": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get detailed profile views of multiple actors.",
        "operationId": "getProfiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actors",
            "description": "Identifiers of the actors to get the profiles for.",
            "required": true,
            "type": "array",
            "items": {
              "format": "at-identifier",
              "type": "string"
            },
            "maxItems": 25
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "required": [
                "profiles"
              ],
              "type": "object",
              "properties": {
                "profiles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileViewDetailed"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.getSuggestions": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get a list of actors suggested for following.",
        "description": "Used in discovery UIs.",
        "operationId": "getSuggestions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "The maximum number of suggested actors to return.",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "A cursor for pagination.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "required": [
                "actors"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "actors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.putPreferences": {
      "post": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Sets the private preferences attached to the account.",
        "operationId": "PutPreferences",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "preferences"
              ],
              "type": "object",
              "properties": {
                "preferences": {
                  "$ref": "#/definitions/Preferences"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/app.bsky.actor.searchActors": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Find actors matching search criteria.",
        "operationId": "searchActors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "actors"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "actors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.actor.searchActorsTypeahead": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Find actor suggestions for a search term.",
        "operationId": "searchActorsTypeahead",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "term",
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "actors"
              ],
              "type": "object",
              "properties": {
                "actors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileViewBasic"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.getAuthorFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actor",
            "required": true,
            "type": "string",
            "format": "at-identifier"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A view of an actor's feed",
            "schema": {
              "required": [
                "feed"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "feed": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FeedViewPost"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Errors",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/BlockedActor"
                }
              ]
            }
          }
        },
        "operationId": "GetAuthorFeed"
      }
    },
    "/app.bsky.feed.getLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uri",
            "required": true,
            "type": "string",
            "format": "at-uri"
          },
          {
            "in": "query",
            "name": "cid",
            "type": "string",
            "format": "cid"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of likes for a specific post",
            "schema": {
              "required": [
                "uri",
                "likes"
              ],
              "type": "object",
              "properties": {
                "uri": {
                  "format": "at-uri",
                  "type": "string"
                },
                "cid": {
                  "format": "cid",
                  "type": "string"
                },
                "cursor": {
                  "type": "string"
                },
                "likes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Like"
                  }
                }
              }
            }
          }
        },
        "operationId": "getLikes"
      }
    },
    "/app.bsky.feed.getPostThread": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uri",
            "required": true,
            "type": "string",
            "format": "at-uri"
          },
          {
            "in": "query",
            "name": "depth",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The post thread for a specific post",
            "schema": {
              "required": [
                "thread"
              ],
              "type": "object",
              "properties": {
                "thread": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/ThreadViewPost"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "NotFound",
                  "type": "string"
                }
              }
            }
          }
        },
        "operationId": "GetPostThread"
      }
    },
    "/app.bsky.feed.getPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uris",
            "required": true,
            "type": "array",
            "items": {
              "format": "at-uri",
              "type": "string"
            },
            "maxLength": 25
          }
        ],
        "responses": {
          "200": {
            "description": "A batch of specific posts",
            "schema": {
              "required": [
                "posts"
              ],
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PostView"
                  }
                }
              }
            }
          }
        },
        "operationId": "getPosts"
      }
    },
    "/app.bsky.feed.repostedBy": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "uri",
            "required": true,
            "type": "string",
            "format": "at-uri"
          },
          {
            "in": "query",
            "name": "cid",
            "type": "string",
            "format": "cid"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of actors who have reposted a specific post",
            "schema": {
              "required": [
                "uri",
                "repostedBy"
              ],
              "type": "object",
              "properties": {
                "uri": {
                  "format": "at-uri",
                  "type": "string"
                },
                "cid": {
                  "format": "cid",
                  "type": "string"
                },
                "cursor": {
                  "type": "string"
                },
                "repostedBy": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          }
        },
        "operationId": "repostedBy"
      }
    },
    "/app.bsky.feed.getTimeline": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "description": "A view of the user's home timeline.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "algorithm",
            "type": "string"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The user's home timeline",
            "schema": {
              "required": [
                "feed"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "feed": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FeedViewPost"
                  }
                }
              }
            }
          }
        },
        "operationId": "getTimeline"
      }
    },
    "/app.bsky.feed.follow": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "A social follow.",
        "operationId": "follow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Follow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "tid": {
                  "description": "The record key",
                  "type": "string"
                },
                "record": {
                  "$ref": "#/definitions/Follow"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who is the requester's account blocking?",
        "operationId": "getBlocks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "blocks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who is following an actor?",
        "operationId": "getFollowers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actor",
            "required": true,
            "type": "string",
            "format": "at-identifier"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "$ref": "#/definitions/ProfileView"
                },
                "cursor": {
                  "type": "string"
                },
                "followers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getFollows": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who is an actor following?",
        "operationId": "getFollows",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actor",
            "required": true,
            "type": "string",
            "format": "at-identifier"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "$ref": "#/definitions/ProfileView"
                },
                "cursor": {
                  "type": "string"
                },
                "follows": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getList": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Fetch a list of actors",
        "operationId": "getList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "list",
            "required": true,
            "type": "string",
            "format": "at-uri"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "list": {
                  "$ref": "#/definitions/ListView"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListItemView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getListMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Which lists is the requester's account muting?",
        "operationId": "getListMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "lists": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getLists": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Fetch a list of lists that belong to an actor",
        "operationId": "getLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "actor",
            "required": true,
            "type": "string",
            "format": "at-identifier"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "lists": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ListView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.getMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Who does the viewer mute?",
        "operationId": "getMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "mutes"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "mutes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/app.bsky.graph.muteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an actor by did or handle.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "actor"
              ],
              "type": "object",
              "properties": {
                "actor": {
                  "format": "uri",
                  "description": "Actor identifier",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor muted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "muteActor"
      }
    },
    "/app.bsky.graph.muteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute a list of actors.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "list"
              ],
              "type": "object",
              "properties": {
                "list": {
                  "format": "uri",
                  "description": "List identifier",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor list muted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "muteActorList"
      }
    },
    "/app.bsky.graph.unmuteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an actor by did or handle.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "actor"
              ],
              "type": "object",
              "properties": {
                "actor": {
                  "format": "at-identifier",
                  "description": "Actor identifier",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor unmuted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "unmuteActor"
      }
    },
    "/app.bsky.graph.unmuteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute a list of actors.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "list"
              ],
              "type": "object",
              "properties": {
                "list": {
                  "format": "at-uri",
                  "description": "List URI",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors in the list unmuted successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "unmuteActorList"
      }
    },
    "/app.bsky.notification.getUnreadCount": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Get count of unread notifications.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "seenAt",
            "description": "Datetime at which notifications were last seen",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "count"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "description": "Count of unread notifications",
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "getUnreadCount"
      }
    },
    "/app.bsky.notification.listNotifications": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "List notifications.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of notifications to fetch",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paginating through notifications",
            "type": "string"
          },
          {
            "in": "query",
            "name": "seenAt",
            "description": "Datetime at which notifications were last seen",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "notifications"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "description": "Cursor for the next page of notifications",
                  "type": "string"
                },
                "notifications": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Notification"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "listNotifications"
      }
    },
    "/app.bsky.notification.updateSeen": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Notify server that the user has seen notifications.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "seenAt"
              ],
              "type": "object",
              "properties": {
                "seenAt": {
                  "format": "date-time",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "operationId": "updateSeen"
      }
    },
    "/app.bsky.unspecced.popular": {
      "get": {
        "tags": [
          "app.bsky.unspecced"
        ],
        "summary": "An unspecced view of globally popular items",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "includeNsfw",
            "description": "Whether to include not safe for work items",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items to return",
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "minimum": 1
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "Cursor for pagination",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "required": [
                "feed"
              ],
              "type": "object",
              "properties": {
                "cursor": {
                  "type": "string"
                },
                "feed": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FeedViewPost"
                  }
                }
              }
            }
          }
        },
        "operationId": "popular"
      }
    },
    "/com.atproto.server.createSession": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "accessJwt": {
                  "type": "string",
                  "description": "accessJwt"
                },
                "refreshJwt": {
                  "type": "string",
                  "description": "refreshJwt"
                }
              }
            }
          }
        },
        "summary": "CreateSession",
        "description": "Authenticates to Bluesky and retrieves session tokens.",
        "operationId": "CreateSession",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "identifier"
                },
                "password": {
                  "type": "string",
                  "description": "password"
                }
              },
              "x-ms-visibility": "internal"
            },
            "x-ms-visibility": "internal"
          }
        ],
        "x-ms-visibility": "important"
      }
    }
  },
  "definitions": {
    "ProfileViewBasic": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ProfileView": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "description": {
          "maxLength": 2560,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ProfileViewDetailed": {
      "required": [
        "did",
        "handle"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        },
        "handle": {
          "format": "handle",
          "type": "string"
        },
        "displayName": {
          "maxLength": 640,
          "type": "string"
        },
        "description": {
          "maxLength": 2560,
          "type": "string"
        },
        "avatar": {
          "type": "string"
        },
        "banner": {
          "type": "string"
        },
        "followersCount": {
          "type": "integer"
        },
        "followsCount": {
          "type": "integer"
        },
        "postsCount": {
          "type": "integer"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "ViewerState": {
      "type": "object",
      "properties": {
        "muted": {
          "type": "boolean"
        },
        "mutedByList": {
          "$ref": "#/definitions/ListViewBasic"
        },
        "blockedBy": {
          "type": "boolean"
        },
        "blocking": {
          "format": "at-uri",
          "type": "string"
        },
        "following": {
          "format": "at-uri",
          "type": "string"
        },
        "followedBy": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "Preferences": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "#/definitions/AdultContentPref"
          }
        ]
      }
    },
    "AdultContentPref": {
      "required": [
        "enabled"
      ],
      "type": "object",
      "properties": {
        "enabled": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "ContentLabelPref": {
      "required": [
        "label",
        "visibility"
      ],
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "visibility": {
          "enum": [
            "show",
            "warn",
            "hide"
          ],
          "type": "string"
        }
      }
    },
    "Label": {
      "description": "Metadata tag on an atproto resource (eg, repo or record)",
      "required": [
        "src",
        "uri",
        "val",
        "cts"
      ],
      "type": "object",
      "properties": {
        "src": {
          "format": "did",
          "description": "DID of the actor who created this label",
          "type": "string"
        },
        "uri": {
          "format": "uri",
          "description": "AT URI of the record, repository (account), or other resource which this label applies to",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "description": "optionally, CID specifying the specific version of 'uri' resource this label applies to",
          "type": "string"
        },
        "val": {
          "description": "the short string name of the value or type of this label",
          "maxLength": 128,
          "type": "string"
        },
        "neg": {
          "description": "if true, this is a negation label, overwriting a previous label",
          "type": "boolean"
        },
        "cts": {
          "format": "datetime",
          "description": "timestamp when this label was created",
          "type": "string"
        }
      }
    },
    "ListViewBasic": {
      "type": "object"
    },
    "ExternalEmbed": {
      "required": [
        "external"
      ],
      "type": "object",
      "properties": {
        "external": {
          "$ref": "#/definitions/External"
        }
      }
    },
    "External": {
      "required": [
        "uri",
        "title",
        "description"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thumb": {
          "format": "binary",
          "maxLength": 1000000,
          "type": "string"
        }
      }
    },
    "ExternalEmbedView": {
      "required": [
        "external"
      ],
      "type": "object",
      "properties": {
        "external": {
          "$ref": "#/definitions/ExternalView"
        }
      }
    },
    "ExternalView": {
      "required": [
        "uri",
        "title",
        "description"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "thumb": {
          "type": "string"
        }
      }
    },
    "ImagesEmbed": {
      "required": [
        "images"
      ],
      "type": "object",
      "properties": {
        "images": {
          "maxItems": 4,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    },
    "Image": {
      "required": [
        "image",
        "alt"
      ],
      "type": "object",
      "properties": {
        "image": {
          "format": "binary",
          "maxLength": 1000000,
          "type": "string"
        },
        "alt": {
          "type": "string"
        }
      }
    },
    "ImagesEmbedView": {
      "required": [
        "images"
      ],
      "type": "object",
      "properties": {
        "images": {
          "maxItems": 4,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageView"
          }
        }
      }
    },
    "ImageView": {
      "required": [
        "thumb",
        "fullsize",
        "alt"
      ],
      "type": "object",
      "properties": {
        "thumb": {
          "type": "string"
        },
        "fullsize": {
          "type": "string"
        },
        "alt": {
          "type": "string"
        }
      }
    },
    "RecordEmbed": {
      "required": [
        "record"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/StrongRef"
        }
      }
    },
    "RecordEmbedView": {
      "required": [
        "record"
      ],
      "type": "object",
      "properties": {
        "record": {
          "allOf": [
            {
              "$ref": "#/definitions/ViewRecord"
            }
          ]
        }
      }
    },
    "ViewRecord": {
      "required": [
        "uri",
        "cid",
        "author",
        "value",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "value": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "embeds": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/ImagesEmbedView"
              }
            ]
          }
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ViewNotFound": {
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "ViewBlocked": {
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        }
      }
    },
    "RecordWithMediaEmbed": {
      "required": [
        "record",
        "media"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/RecordEmbed"
        },
        "media": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbed"
            }
          ]
        }
      }
    },
    "RecordWithMediaEmbedView": {
      "required": [
        "record",
        "media"
      ],
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/RecordEmbedView"
        },
        "media": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbedView"
            }
          ]
        }
      }
    },
    "PostView": {
      "required": [
        "uri",
        "cid",
        "author",
        "record",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "record": {
          "type": "object"
        },
        "embed": {
          "allOf": [
            {
              "$ref": "#/definitions/ImagesEmbedView"
            }
          ]
        },
        "replyCount": {
          "type": "integer"
        },
        "repostCount": {
          "type": "integer"
        },
        "likeCount": {
          "type": "integer"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ViewerState"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "BlockedActor": {
      "type": "object"
    },
    "BlockedByActor": {
      "type": "object"
    },
    "Like": {
      "required": [
        "indexedAt",
        "createdAt",
        "actor"
      ],
      "type": "object",
      "properties": {
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        },
        "actor": {
          "$ref": "#/definitions/ProfileView"
        }
      }
    },
    "FeedLike": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/StrongRef"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Post": {
      "required": [
        "text",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "text": {
          "description": "text",
          "maxLength": 3000,
          "type": "string"
        },
        "entities": {
          "description": "deprecated - replaced by app.bsky.richtext.facet.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "facets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facet"
          }
        },
        "reply": {
          "$ref": "#/definitions/ReplyRef"
        },
        "embed": {
          "$ref": "#/definitions/Embed"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Embed": {
      "allOf": [
        {
          "$ref": "#/definitions/ImagesEmbedView"
        }
      ]
    },
    "ReplyRef": {
      "required": [
        "root",
        "parent"
      ],
      "type": "object",
      "properties": {
        "root": {
          "$ref": "#/definitions/StrongRef"
        },
        "parent": {
          "$ref": "#/definitions/StrongRef"
        }
      }
    },
    "Entity": {
      "description": "Deprecated - use facets instead.",
      "required": [
        "index",
        "type",
        "value"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/TextSlice"
        },
        "type": {
          "description": "Expected values are 'mention' and 'link'.",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TextSlice": {
      "description": "Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.",
      "required": [
        "start",
        "end"
      ],
      "type": "object",
      "properties": {
        "start": {
          "minimum": 0,
          "type": "integer"
        },
        "end": {
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "Repost": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/StrongRef"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Block": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "did",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "Follow": {
      "required": [
        "subject",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "did",
          "type": "string"
        },
        "createdAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ListRecord": {
      "required": [
        "name",
        "purpose",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "purpose": {
          "$ref": "#/definitions/ListPurpose"
        },
        "name": {
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "maxLength": 3000,
          "type": "string"
        },
        "descriptionFacets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RichTextFacet"
          }
        },
        "avatar": {
          "format": "binary",
          "description": "A binary file with a maximum size of 1,000,000 bytes. Accepts image/png or image/jpeg file types.",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ListItemRecord": {
      "required": [
        "subject",
        "list",
        "createdAt"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "format": "uri",
          "description": "Decentralized identifier (DID)",
          "type": "string"
        },
        "list": {
          "format": "uri",
          "description": "Unique identifier of the list",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "description": "Creation date of the list item",
          "type": "string"
        }
      }
    },
    "Notification": {
      "required": [
        "uri",
        "cid",
        "author",
        "reason",
        "record",
        "isRead",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        },
        "cid": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/ProfileView"
        },
        "reason": {
          "enum": [
            "like",
            "repost",
            "follow",
            "mention",
            "reply",
            "quote"
          ],
          "type": "string"
        },
        "reasonSubject": {
          "format": "uri",
          "type": "string"
        },
        "record": {
          "type": "object"
        },
        "isRead": {
          "type": "boolean"
        },
        "indexedAt": {
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "Facet": {
      "required": [
        "index",
        "features"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/ByteSlice"
        },
        "features": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Mention"
              }
            ]
          }
        }
      }
    },
    "Mention": {
      "description": "A facet feature for actor mentions.",
      "required": [
        "did"
      ],
      "type": "object",
      "properties": {
        "did": {
          "format": "did",
          "type": "string"
        }
      }
    },
    "Link": {
      "description": "A facet feature for links.",
      "required": [
        "uri"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "uri",
          "type": "string"
        }
      }
    },
    "ByteSlice": {
      "description": "A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings.",
      "required": [
        "byteStart",
        "byteEnd"
      ],
      "type": "object",
      "properties": {
        "byteStart": {
          "minimum": 0,
          "type": "integer"
        },
        "byteEnd": {
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "FeedViewPost": {
      "required": [
        "post"
      ],
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/PostView"
        },
        "reply": {
          "$ref": "#/definitions/ReplyRef"
        },
        "reason": {
          "allOf": [
            {
              "$ref": "#/definitions/ReasonRepost"
            }
          ]
        }
      }
    },
    "ReasonRepost": {
      "required": [
        "by",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "by": {
          "$ref": "#/definitions/ProfileViewBasic"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ThreadViewPost": {
      "required": [
        "post"
      ],
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/PostView"
        },
        "parent": {
          "allOf": [
            {
              "$ref": "#/definitions/ThreadViewPost"
            }
          ]
        },
        "replies": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/ThreadViewPost"
              }
            ]
          }
        }
      }
    },
    "NotFoundPost": {
      "required": [
        "uri",
        "notFound"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "notFound": {
          "default": true,
          "type": "boolean"
        }
      }
    },
    "BlockedPost": {
      "required": [
        "uri",
        "blocked"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "blocked": {
          "default": true,
          "type": "boolean"
        }
      }
    },
    "ListView": {
      "required": [
        "uri",
        "creator",
        "name",
        "purpose",
        "indexedAt"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/ProfileView"
        },
        "name": {
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "purpose": {
          "$ref": "#/definitions/ListPurpose"
        },
        "description": {
          "description": "Max graphemes 300, maxLength 3000",
          "type": "string"
        },
        "descriptionFacets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RichTextFacet"
          }
        },
        "avatar": {
          "type": "string"
        },
        "viewer": {
          "$ref": "#/definitions/ListViewerState"
        },
        "indexedAt": {
          "format": "datetime",
          "type": "string"
        }
      }
    },
    "ListItemView": {
      "required": [
        "subject"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/ProfileView"
        }
      }
    },
    "ListPurpose": {
      "enum": [
        "modlist"
      ],
      "type": "string"
    },
    "Modlist": {
      "description": "A list of actors to apply an aggregate moderation action (mute/block) on",
      "type": "string"
    },
    "ListViewerState": {
      "type": "object",
      "properties": {
        "muted": {
          "type": "boolean"
        }
      }
    },
    "StrongRef": {
      "description": "A URI with a content-hash fingerprint.",
      "required": [
        "uri",
        "cid"
      ],
      "type": "object",
      "properties": {
        "uri": {
          "format": "at-uri",
          "type": "string"
        },
        "cid": {
          "format": "cid",
          "type": "string"
        }
      }
    },
    "RichTextFacet": {
      "required": [
        "index",
        "features"
      ],
      "type": "object",
      "properties": {
        "index": {
          "$ref": "#/definitions/ByteSlice"
        },
        "features": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Mention"
              }
            ]
          }
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "Access Token": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "Access Token": []
    }
  ],
  "tags": []
}