{
  "swagger": "2.0",
  "info": {
    "title": "Bluesky (Independent Publisher)",
    "description": "The HTTP API Bluesky API enables programmatic interaction with user timelines, posting, and profiles.",
    "version": "1.0"
  },
  "host": "bsky.app",
  "basePath": "/xrpc",
  "schemes": [
    "https"
  ],
  "paths": {
    "/app.bsky.feed.getTimeline": {
      "get": {
        "summary": "Get User Timeline",
        "description": "Retrieve a list of posts from a specified user's timeline.",
        "operationId": "GetTimeline",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The username or user ID for the timeline."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of posts to retrieve, up to a maximum limit."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved timeline posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the post."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Username of the post's author."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of when the post was created."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "default": {
              "description": "An unspecified error occurred.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.post": {
      "post": {
        "summary": "Create a New Post",
        "description": "Publish a new status update to the user's feed.",
        "operationId": "CreatePost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "description": "The text content of the post (max 280 characters)."
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of URLs for any media attachments."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the created post."
                },
                "content": {
                  "type": "string",
                  "description": "The content of the created post."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the post was created."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - post content is too long or missing required parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.actor.getProfile": {
      "get": {
        "summary": "Get User Profile",
        "description": "Retrieve profile information for a specified user.",
        "operationId": "GetUserProfile",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The username or user ID of the profile to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the user's profile.",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Username of the profile."
                },
                "bio": {
                  "type": "string",
                  "description": "The user's biography."
                },
                "follower_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of the user's followers."
                },
                "following_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of accounts the user is following."
                },
                "profile_image": {
                  "type": "string",
                  "description": "URL to the user's profile image."
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getKnownFollowers": {
      "get": {
        "summary": "Get Known Followers",
        "description": "Retrieve a list of followers that are known to follow a specific user.",
        "operationId": "GetKnownFollowers",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The handle or user ID of the user to retrieve known followers for."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of followers to return."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved known followers.",
            "schema": {
              "type": "object",
              "properties": {
                "followers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the follower."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the follower."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the follower's avatar image."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.sendMessage": {
      "post": {
        "summary": "Send Message",
        "description": "Send a message to a conversation.",
        "operationId": "SendMessage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "description": "ID of the conversation to send the message to."
                },
                "content": {
                  "type": "string",
                  "description": "The content of the message."
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of URLs for any media attachments."
                }
              },
              "required": [ "conversationId", "content" ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Message sent successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "messageId": {
                  "type": "string",
                  "description": "Unique identifier of the sent message."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp when the message was sent."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getRelationships": {
      "get": {
        "summary": "Get Relationships",
        "description": "Retrieve the relationship status between the specified user and other users.",
        "operationId": "GetRelationships",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The handle or user ID of the subject whose relationships are being queried."
          },
          {
            "name": "objects",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of handles or user IDs to check relationships with the subject."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved relationship statuses.",
            "schema": {
              "type": "object",
              "properties": {
                "relationships": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the other user."
                      },
                      "isFollowing": {
                        "type": "boolean",
                        "description": "Whether the subject is following this user."
                      },
                      "isFollowedBy": {
                        "type": "boolean",
                        "description": "Whether this user is following the subject."
                      },
                      "isMuted": {
                        "type": "boolean",
                        "description": "Whether the subject has muted this user."
                      },
                      "isBlocking": {
                        "type": "boolean",
                        "description": "Whether the subject is blocking this user."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.video.uploadVideo": {
      "post": {
        "summary": "Upload Video",
        "description": "Upload a video file to Bluesky.",
        "operationId": "UploadVideo",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The video file to upload."
          },
          {
            "name": "title",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Title of the video."
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Description of the video."
          },
          {
            "name": "tags",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Tags associated with the video."
          }
        ],
        "responses": {
          "201": {
            "description": "Video uploaded successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "videoId": {
                  "type": "string",
                  "description": "Unique identifier of the uploaded video."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the upload (e.g., processing, completed)."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeed": {
      "get": {
        "summary": "Get Feed",
        "description": "Retrieve the feed of posts for a specified user or tag.",
        "operationId": "GetFeed",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The handle or user ID to retrieve the feed for. If not specified, retrieves the global feed."
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A tag to filter the feed by. Only posts containing this tag will be returned."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of posts to retrieve."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Retrieve posts before this timestamp."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved feed posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "Unique identifier for the post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Handle of the post's author."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post."
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the post was created."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getStarterPack": {
      "get": {
        "summary": "Get Starter Pack",
        "description": "Retrieve a list of recommended users to follow for new users.",
        "operationId": "GetStarterPack",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of recommended users to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved recommended users.",
            "schema": {
              "type": "object",
              "properties": {
                "recommendedUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the recommended user."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the recommended user."
                      },
                      "bio": {
                        "type": "string",
                        "description": "Biography of the recommended user."
                      },
                      "followerCount": {
                        "type": "integer",
                        "description": "Number of followers the recommended user has."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getStarterPacks": {
      "get": {
        "summary": "Get Starter Packs",
        "description": "Retrieve a list of starter packs, which are collections of recommended users to follow.",
        "operationId": "GetStarterPacks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of starter packs to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved starter packs.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "packId": {
                        "type": "string",
                        "description": "Unique identifier for the starter pack."
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the starter pack."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the starter pack."
                      },
                      "users": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "handle": {
                              "type": "string",
                              "description": "Handle of the recommended user."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of the recommended user."
                            },
                            "bio": {
                              "type": "string",
                              "description": "Biography of the recommended user."
                            },
                            "followerCount": {
                              "type": "integer",
                              "description": "Number of followers the recommended user has."
                            }
                          }
                        },
                        "description": "List of recommended users in the starter pack."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getListBlocks": {
      "get": {
        "summary": "Get Blocked Users",
        "description": "Retrieve a list of users that the specified user has blocked.",
        "operationId": "GetListBlocks",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The handle or user ID for which to retrieve the blocked users."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of blocked users to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of blocked users.",
            "schema": {
              "type": "object",
              "properties": {
                "blockedUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the blocked user."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the blocked user."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the blocked user's avatar image."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getBlocks": {
      "get": {
        "summary": "Get Blocks",
        "description": "Retrieve a list of users blocked by the authenticated user.",
        "operationId": "GetBlocks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of blocked users to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of blocked users.",
            "schema": {
              "type": "object",
              "properties": {
                "blockedUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the blocked user."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the blocked user."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the blocked user's avatar image."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getLikes": {
      "get": {
        "summary": "Get Likes",
        "description": "Retrieve a list of users who liked a specified post.",
        "operationId": "GetLikes",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the post to retrieve likes for."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of likes to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of users who liked the post.",
            "schema": {
              "type": "object",
              "properties": {
                "likes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the user who liked the post."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the user who liked the post."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the user's avatar image who liked the post."
                      },
                      "likedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the user liked the post."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getPosts": {
      "get": {
        "summary": "Get Posts",
        "description": "Retrieve a list of specific posts by their IDs.",
        "operationId": "GetPosts",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Array of post IDs to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "Unique identifier of the post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Handle of the post's author."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post."
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the post was created."
                      },
                      "likesCount": {
                        "type": "integer",
                        "description": "Number of likes the post has received."
                      },
                      "commentsCount": {
                        "type": "integer",
                        "description": "Number of comments on the post."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.searchPosts": {
      "get": {
        "summary": "Search Posts",
        "description": "Search for posts that match a specific query.",
        "operationId": "SearchPosts",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The search query to match posts."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of posts to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results for posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "Unique identifier of the post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Handle of the post's author."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post."
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the post was created."
                      },
                      "likesCount": {
                        "type": "integer",
                        "description": "Number of likes the post has received."
                      },
                      "commentsCount": {
                        "type": "integer",
                        "description": "Number of comments on the post."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "/app.bsky.feed.getFeed": {
        "get": {
          "summary": "Get Feed",
          "description": "Retrieve the feed of posts for a specified user or tag.",
          "operationId": "GetFeed",
          "parameters": [
            {
              "name": "user",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "The handle or user ID to retrieve the feed for. If not specified, retrieves the global feed."
            },
            {
              "name": "tag",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "A tag to filter the feed by. Only posts containing this tag will be returned."
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of posts to retrieve."
            },
            {
              "name": "before",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time",
              "description": "Retrieve posts before this timestamp."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved feed posts.",
              "schema": {
                "type": "object",
                "properties": {
                  "posts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "postId": {
                          "type": "string",
                          "description": "Unique identifier for the post."
                        },
                        "author": {
                          "type": "string",
                          "description": "Handle of the post's author."
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the post."
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the post was created."
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request - missing or invalid parameters.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "401": {
              "description": "Unauthorized - Invalid or missing API key.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "default": {
              "description": "An unspecified error occurred.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/app.bsky.actor.getPreferences": {
    "get": {
      "summary": "Get User Preferences",
      "description": "Retrieve the preferences for a specified user.",
      "operationId": "GetUserPreferences",
      "parameters": [
        {
          "name": "user",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The username or user ID for whom to retrieve preferences."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved user preferences.",
          "schema": {
            "type": "object",
            "properties": {
              "preferences": {
                "type": "object",
                "description": "Object containing user preferences.",
                "properties": {
                  "theme": {
                    "type": "string",
                    "description": "User's preferred theme."
                  },
                  "notificationsEnabled": {
                    "type": "boolean",
                    "description": "Whether notifications are enabled for the user."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/app.bsky.actor.getSuggestions": {
    "get": {
      "summary": "Get Suggested Accounts",
      "description": "Retrieve a list of suggested accounts for a specified user based on preferences or activity.",
      "operationId": "GetSuggestions",
      "parameters": [
        {
          "name": "user",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The username or user ID for whom to retrieve suggestions."
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of suggestions to retrieve, up to a maximum limit."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved suggested accounts.",
          "schema": {
            "type": "object",
            "properties": {
              "suggestions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the suggested account."
                    },
                    "username": {
                      "type": "string",
                      "description": "Username of the suggested account."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the suggested account."
                    },
                    "bio": {
                      "type": "string",
                      "description": "Bio or description of the suggested account."
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/app.bsky.actor.searchActors": {
    "get": {
      "summary": "Search for Actors",
      "description": "Search for user accounts based on a query string.",
      "operationId": "SearchActors",
      "parameters": [
        {
          "name": "query",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The search query to find user accounts."
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Number of results to retrieve, up to a maximum limit."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved search results.",
          "schema": {
            "type": "object",
            "properties": {
              "actors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the actor."
                    },
                    "username": {
                      "type": "string",
                      "description": "Username of the actor."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of the actor."
                    },
                    "bio": {
                      "type": "string",
                      "description": "Bio or description of the actor."
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/app.bsky.feed.getActorFeeds": {
    "get": {
      "summary": "Get Actor Feeds",
      "description": "Retrieve a list of feed posts from a specified actor.",
      "operationId": "GetActorFeeds",
      "parameters": [
        {
          "name": "actorId",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The unique identifier of the actor whose feeds are to be retrieved."
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of posts to retrieve."
        },
        {
          "name": "cursor",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A cursor for pagination to retrieve the next set of posts."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved actor's feed posts.",
          "schema": {
            "type": "object",
            "properties": {
              "feeds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the post."
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the post."
                    },
                    "author": {
                      "type": "string",
                      "description": "Author of the post."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of when the post was created."
                    }
                  }
                }
              },
              "nextCursor": {
                "type": "string",
                "description": "Cursor for the next set of posts, if available."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/app.bsky.feed.getFeedGenerator": {
    "get": {
      "summary": "Get Feed Generator",
      "description": "Retrieve a generated feed based on user preferences.",
      "operationId": "GetFeedGenerator",
      "parameters": [
        {
          "name": "userId",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The unique identifier of the user for whom the feed is generated."
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of items to retrieve."
        },
        {
          "name": "cursor",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A cursor for pagination to retrieve the next set of feed items."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved the generated feed.",
          "schema": {
            "type": "object",
            "properties": {
              "feedItems": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the feed item."
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the feed item."
                    },
                    "author": {
                      "type": "string",
                      "description": "Author of the feed item."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of when the feed item was created."
                    }
                  }
                }
              },
              "nextCursor": {
                "type": "string",
                "description": "Cursor for the next set of feed items, if available."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/app.bsky.feed.getFeedSkeleton": {
    "get": {
      "summary": "Get Feed Skeleton",
      "description": "Retrieve a skeletal version of a feed for faster loading and minimal content structure.",
      "operationId": "GetFeedSkeleton",
      "parameters": [
        {
          "name": "userId",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The unique identifier of the user for whom the feed skeleton is retrieved."
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of items to retrieve in the feed skeleton."
        },
        {
          "name": "cursor",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A cursor for pagination to retrieve the next set of feed skeleton items."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved the feed skeleton.",
          "schema": {
            "type": "object",
            "properties": {
              "skeletonItems": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier for the skeleton item."
                    },
                    "placeholderText": {
                      "type": "string",
                      "description": "Placeholder text or minimal content to display quickly."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of when the skeleton item was created."
                    }
                  }
                }
              },
              "nextCursor": {
                "type": "string",
                "description": "Cursor for the next set of feed skeleton items, if available."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/chat.bsky.convo.muteConvo": {
    "post": {
      "summary": "Mute Conversation",
      "description": "Mute a conversation for a specific user.",
      "operationId": "MuteConversation",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "convoId": {
                "type": "string",
                "description": "The unique identifier of the conversation to mute."
              },
              "userId": {
                "type": "string",
                "description": "The unique identifier of the user muting the conversation."
              }
            },
            "required": [ "convoId", "userId" ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully muted the conversation.",
          "schema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Confirmation status, e.g., 'muted'."
              },
              "convoId": {
                "type": "string",
                "description": "The ID of the muted conversation."
              },
              "userId": {
                "type": "string",
                "description": "The ID of the user who muted the conversation."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/chat.bsky.convo.listConvos": {
    "get": {
      "summary": "List Conversations",
      "description": "Retrieve a list of conversations for the authenticated user.",
      "operationId": "ListConversations",
      "parameters": [
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of conversations to retrieve."
        },
        {
          "name": "cursor",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A cursor for pagination to retrieve the next set of conversations."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved the list of conversations.",
          "schema": {
            "type": "object",
            "properties": {
              "conversations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "convoId": {
                      "type": "string",
                      "description": "Unique identifier for the conversation."
                    },
                    "lastMessage": {
                      "type": "string",
                      "description": "The content of the last message in the conversation."
                    },
                    "participants": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of participants' user IDs in the conversation."
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the last message in the conversation."
                    }
                  }
                }
              },
              "nextCursor": {
                "type": "string",
                "description": "Cursor for the next set of conversations, if available."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/chat.bsky.convo.leaveConvo": {
    "post": {
      "summary": "Leave Conversation",
      "description": "Leave a specific conversation.",
      "operationId": "LeaveConversation",
      "parameters": [
        {
          "name": "body",
          "in": "body",
          "required": true,
          "schema": {
            "type": "object",
            "properties": {
              "convoId": {
                "type": "string",
                "description": "The unique identifier of the conversation to leave."
              },
              "userId": {
                "type": "string",
                "description": "The unique identifier of the user leaving the conversation."
              }
            },
            "required": [ "convoId", "userId" ]
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully left the conversation.",
          "schema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "description": "Confirmation status, e.g., 'left'."
              },
              "convoId": {
                "type": "string",
                "description": "The ID of the conversation left."
              },
              "userId": {
                "type": "string",
                "description": "The ID of the user who left the conversation."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/chat.bsky.convo.getConvo": {
    "get": {
      "summary": "Get Conversation Details",
      "description": "Retrieve details about a specific conversation.",
      "operationId": "GetConversationDetails",
      "parameters": [
        {
          "name": "convoId",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The unique identifier of the conversation to retrieve."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved conversation details.",
          "schema": {
            "type": "object",
            "properties": {
              "convoId": {
                "type": "string",
                "description": "Unique identifier for the conversation."
              },
              "participants": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of participant user IDs in the conversation."
              },
              "messages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "messageId": {
                      "type": "string",
                      "description": "Unique identifier for the message."
                    },
                    "sender": {
                      "type": "string",
                      "description": "User ID of the message sender."
                    },
                    "content": {
                      "type": "string",
                      "description": "Content of the message."
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of when the message was sent."
                    }
                  }
                },
                "description": "List of messages in the conversation."
              },
              "lastUpdated": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the last message in the conversation."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/chat.bsky.actor.exportAccountData": {
    "get": {
      "summary": "Export Account Data",
      "description": "Export the account data for the authenticated user.",
      "operationId": "ExportAccountData",
      "responses": {
        "200": {
          "description": "Successfully exported account data.",
          "schema": {
            "type": "object",
            "properties": {
              "accountData": {
                "type": "object",
                "description": "Exported account data in JSON format.",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username of the account."
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address associated with the account."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Account creation date."
                  },
                  "conversations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "convoId": {
                          "type": "string",
                          "description": "Unique identifier of a conversation."
                        },
                        "lastMessage": {
                          "type": "string",
                          "description": "Content of the last message in the conversation."
                        },
                        "lastUpdated": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of the last update in the conversation."
                        }
                      }
                    },
                    "description": "List of conversations associated with the account."
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/app.bsky.video.getUploadLimits": {
    "get": {
      "summary": "Get Video Upload Limits",
      "description": "Retrieve the upload limits for videos, such as maximum file size and duration.",
      "operationId": "GetVideoUploadLimits",
      "responses": {
        "200": {
          "description": "Successfully retrieved video upload limits.",
          "schema": {
            "type": "object",
            "properties": {
              "maxFileSize": {
                "type": "integer",
                "description": "Maximum file size allowed for video uploads, in bytes."
              },
              "maxDuration": {
                "type": "integer",
                "description": "Maximum duration allowed for video uploads, in seconds."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    }
  },
  "/app.bsky.notification.listNotifications": {
    "get": {
      "summary": "List Notifications",
      "description": "Retrieve a list of notifications for the authenticated user.",
      "operationId": "ListNotifications",
      "parameters": [
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The maximum number of notifications to retrieve."
        },
        {
          "name": "cursor",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A cursor for pagination to retrieve the next set of notifications."
        }
      ],
      "responses": {
        "200": {
          "description": "Successfully retrieved the list of notifications.",
          "schema": {
            "type": "object",
            "properties": {
              "notifications": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "notificationId": {
                      "type": "string",
                      "description": "Unique identifier for the notification."
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the notification (e.g., 'like', 'comment', 'follow')."
                    },
                    "content": {
                      "type": "string",
                      "description": "Content or message of the notification."
                    },
                    "sender": {
                      "type": "string",
                      "description": "User ID of the sender of the notification."
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the notification was created."
                    }
                  }
                }
              },
              "nextCursor": {
                "type": "string",
                "description": "Cursor for the next set of notifications, if available."
              }
            }
          }
        },
        "400": {
          "description": "Invalid request - missing or invalid parameters.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        },
        "401": {
          "description": "Unauthorized - Invalid or missing credentials.",
          "schema": {
            "$ref": "#/definitions/ErrorResponse"
          }
        }
      }
    },
    "/app.bsky.graph.getActorStarterPacks": {
      "get": {
        "summary": "Get Actor Starter Packs",
        "description": "Retrieve recommended starter packs of actors for new users to follow.",
        "operationId": "GetActorStarterPacks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of starter packs to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A cursor for pagination to retrieve the next set of starter packs."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved actor starter packs.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "packId": {
                        "type": "string",
                        "description": "Unique identifier for the starter pack."
                      },
                      "actors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Unique identifier for the actor."
                            },
                            "username": {
                              "type": "string",
                              "description": "Username of the actor."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of the actor."
                            },
                            "bio": {
                              "type": "string",
                              "description": "Bio or description of the actor."
                            }
                          }
                        },
                        "description": "List of actors included in the starter pack."
                      }
                    }
                  }
                },
                "nextCursor": {
                  "type": "string",
                  "description": "Cursor for the next set of starter packs, if available."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing credentials.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.describeFeedGenerator": {
      "get": {
        "summary": "Describe Feed Generator",
        "description": "Retrieve metadata about the feed generator, such as supported types and limits.",
        "operationId": "DescribeFeedGenerator",
        "responses": {
          "200": {
            "description": "Successfully retrieved feed generator metadata.",
            "schema": {
              "type": "object",
              "properties": {
                "supportedTypes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of supported feed types."
                },
                "maxFeedItems": {
                  "type": "integer",
                  "description": "Maximum number of items allowed in a feed."
                },
                "maxItemSize": {
                  "type": "integer",
                  "description": "Maximum size allowed for each item in the feed."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing credentials.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getQuotes": {
      "get": {
        "summary": "Get Quotes for a Post",
        "description": "Retrieve a list of posts that quote a specific post.",
        "operationId": "GetQuotes",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the post for which to retrieve quotes."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of quotes to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A cursor for pagination to retrieve the next set of quotes."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved quotes for the post.",
            "schema": {
              "type": "object",
              "properties": {
                "quotes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "quoteId": {
                        "type": "string",
                        "description": "Unique identifier for the quote post."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the quote post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Username of the author of the quote post."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the quote was created."
                      }
                    }
                  }
                },
                "nextCursor": {
                  "type": "string",
                  "description": "Cursor for the next set of quotes, if available."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing credentials.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getSuggestedFeeds": {
      "get": {
        "summary": "Get Suggested Feeds",
        "description": "Retrieve a list of suggested feeds for the authenticated user.",
        "operationId": "GetSuggestedFeeds",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of suggested feeds to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A cursor for pagination to retrieve the next set of suggested feeds."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved suggested feeds.",
            "schema": {
              "type": "object",
              "properties": {
                "feeds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "feedId": {
                        "type": "string",
                        "description": "Unique identifier for the suggested feed."
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the suggested feed."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the suggested feed."
                      },
                      "author": {
                        "type": "string",
                        "description": "Username of the author of the suggested feed."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the feed was created."
                      }
                    }
                  }
                },
                "nextCursor": {
                  "type": "string",
                  "description": "Cursor for the next set of suggested feeds, if available."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing credentials.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getRepostedBy": {
      "get": {
        "summary": "Get Users Who Reposted a Post",
        "description": "Retrieve a list of users who reposted a specific post.",
        "operationId": "GetRepostedBy",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the post for which to retrieve reposts."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of reposts to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A cursor for pagination to retrieve the next set of reposts."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of users who reposted the post.",
            "schema": {
              "type": "object",
              "properties": {
                "reposters": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "description": "Unique identifier of the user who reposted."
                      },
                      "username": {
                        "type": "string",
                        "description": "Username of the user who reposted."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the user who reposted."
                      },
                      "repostedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the post was reposted."
                      }
                    }
                  }
                },
                "nextCursor": {
                  "type": "string",
                  "description": "Cursor for the next set of reposts, if available."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing credentials.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.sendInteractions": {
      "post": {
        "summary": "Send Interaction",
        "description": "Send an interaction (like, repost) for a specified post.",
        "operationId": "SendInteraction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "type": "string",
                  "description": "The unique identifier of the post to interact with."
                },
                "interactionType": {
                  "type": "string",
                  "description": "Type of interaction to send (e.g., 'like', 'repost').",
                  "enum": [ "like", "repost" ]
                },
                "userId": {
                  "type": "string",
                  "description": "The unique identifier of the user sending the interaction."
                }
              },
              "required": [ "postId", "interactionType", "userId" ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the interaction.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Confirmation status of the interaction, e.g., 'success'."
                },
                "interactionId": {
                  "type": "string",
                  "description": "Unique identifier for the sent interaction."
                },
                "postId": {
                  "type": "string",
                  "description": "The ID of the post that was interacted with."
                },
                "interactionType": {
                  "type": "string",
                  "description": "The type of interaction (e.g., 'like', 'repost')."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing credentials.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }

  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic",
      "description": "Basic authentication with username and app password."
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error code representing the issue."
        },
        "message": {
          "type": "string",
          "description": "A descriptive message explaining the error."
        }
      }
    }
  }
}
