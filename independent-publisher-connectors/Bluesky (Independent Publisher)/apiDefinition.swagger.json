{
  "swagger": "2.0",
  "info": {
    "title": "Bluesky (Independent Publisher)",
    "description": "The HTTP API Bluesky API enables programmatic interaction with user timelines, posting, and profiles.",
    "version": "1.0"
  },
  "host": "bsky.app",
  "basePath": "/xrpc",
  "schemes": [
    "https"
  ],
  "paths": {
    "/app.bsky.feed.getTimeline": {
      "get": {
        "summary": "Get User Timeline",
        "description": "Retrieve a list of posts from a specified user's timeline.",
        "operationId": "GetTimeline",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The username or user ID for the timeline."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Number of posts to retrieve, up to a maximum limit."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved timeline posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier for the post."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Username of the post's author."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of when the post was created."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "default": {
              "description": "An unspecified error occurred.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "/app.bsky.feed.post": {
      "post": {
        "summary": "Create a New Post",
        "description": "Publish a new status update to the user's feed.",
        "operationId": "CreatePost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "description": "The text content of the post (max 280 characters)."
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of URLs for any media attachments."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the created post."
                },
                "content": {
                  "type": "string",
                  "description": "The content of the created post."
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the post was created."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - post content is too long or missing required parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.actor.getProfile": {
      "get": {
        "summary": "Get User Profile",
        "description": "Retrieve profile information for a specified user.",
        "operationId": "GetUserProfile",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The username or user ID of the profile to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the user's profile.",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Username of the profile."
                },
                "bio": {
                  "type": "string",
                  "description": "The user's biography."
                },
                "follower_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of the user's followers."
                },
                "following_count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Count of accounts the user is following."
                },
                "profile_image": {
                  "type": "string",
                  "description": "URL to the user's profile image."
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getKnownFollowers": {
      "get": {
        "summary": "Get Known Followers",
        "description": "Retrieve a list of followers that are known to follow a specific user.",
        "operationId": "GetKnownFollowers",
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The handle or user ID of the user to retrieve known followers for."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of followers to return."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved known followers.",
            "schema": {
              "type": "object",
              "properties": {
                "followers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the follower."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the follower."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the follower's avatar image."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.sendMessage": {
      "post": {
        "summary": "Send Message",
        "description": "Send a message to a conversation.",
        "operationId": "SendMessage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "conversationId": {
                  "type": "string",
                  "description": "ID of the conversation to send the message to."
                },
                "content": {
                  "type": "string",
                  "description": "The content of the message."
                },
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Array of URLs for any media attachments."
                }
              },
              "required": [ "conversationId", "content" ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Message sent successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "messageId": {
                  "type": "string",
                  "description": "Unique identifier of the sent message."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp when the message was sent."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getRelationships": {
      "get": {
        "summary": "Get Relationships",
        "description": "Retrieve the relationship status between the specified user and other users.",
        "operationId": "GetRelationships",
        "parameters": [
          {
            "name": "subject",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The handle or user ID of the subject whose relationships are being queried."
          },
          {
            "name": "objects",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "List of handles or user IDs to check relationships with the subject."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved relationship statuses.",
            "schema": {
              "type": "object",
              "properties": {
                "relationships": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the other user."
                      },
                      "isFollowing": {
                        "type": "boolean",
                        "description": "Whether the subject is following this user."
                      },
                      "isFollowedBy": {
                        "type": "boolean",
                        "description": "Whether this user is following the subject."
                      },
                      "isMuted": {
                        "type": "boolean",
                        "description": "Whether the subject has muted this user."
                      },
                      "isBlocking": {
                        "type": "boolean",
                        "description": "Whether the subject is blocking this user."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.video.uploadVideo": {
      "post": {
        "summary": "Upload Video",
        "description": "Upload a video file to Bluesky.",
        "operationId": "UploadVideo",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The video file to upload."
          },
          {
            "name": "title",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Title of the video."
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Description of the video."
          },
          {
            "name": "tags",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Tags associated with the video."
          }
        ],
        "responses": {
          "201": {
            "description": "Video uploaded successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "videoId": {
                  "type": "string",
                  "description": "Unique identifier of the uploaded video."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the upload (e.g., processing, completed)."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getFeed": {
      "get": {
        "summary": "Get Feed",
        "description": "Retrieve the feed of posts for a specified user or tag.",
        "operationId": "GetFeed",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The handle or user ID to retrieve the feed for. If not specified, retrieves the global feed."
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A tag to filter the feed by. Only posts containing this tag will be returned."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of posts to retrieve."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time",
            "description": "Retrieve posts before this timestamp."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved feed posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "Unique identifier for the post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Handle of the post's author."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post."
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the post was created."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getStarterPack": {
      "get": {
        "summary": "Get Starter Pack",
        "description": "Retrieve a list of recommended users to follow for new users.",
        "operationId": "GetStarterPack",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of recommended users to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved recommended users.",
            "schema": {
              "type": "object",
              "properties": {
                "recommendedUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the recommended user."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the recommended user."
                      },
                      "bio": {
                        "type": "string",
                        "description": "Biography of the recommended user."
                      },
                      "followerCount": {
                        "type": "integer",
                        "description": "Number of followers the recommended user has."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getStarterPacks": {
      "get": {
        "summary": "Get Starter Packs",
        "description": "Retrieve a list of starter packs, which are collections of recommended users to follow.",
        "operationId": "GetStarterPacks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of starter packs to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved starter packs.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "packId": {
                        "type": "string",
                        "description": "Unique identifier for the starter pack."
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the starter pack."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the starter pack."
                      },
                      "users": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "handle": {
                              "type": "string",
                              "description": "Handle of the recommended user."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of the recommended user."
                            },
                            "bio": {
                              "type": "string",
                              "description": "Biography of the recommended user."
                            },
                            "followerCount": {
                              "type": "integer",
                              "description": "Number of followers the recommended user has."
                            }
                          }
                        },
                        "description": "List of recommended users in the starter pack."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getListBlocks": {
      "get": {
        "summary": "Get Blocked Users",
        "description": "Retrieve a list of users that the specified user has blocked.",
        "operationId": "GetListBlocks",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The handle or user ID for which to retrieve the blocked users."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of blocked users to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of blocked users.",
            "schema": {
              "type": "object",
              "properties": {
                "blockedUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the blocked user."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the blocked user."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the blocked user's avatar image."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.graph.getBlocks": {
      "get": {
        "summary": "Get Blocks",
        "description": "Retrieve a list of users blocked by the authenticated user.",
        "operationId": "GetBlocks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of blocked users to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of blocked users.",
            "schema": {
              "type": "object",
              "properties": {
                "blockedUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the blocked user."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the blocked user."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the blocked user's avatar image."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getLikes": {
      "get": {
        "summary": "Get Likes",
        "description": "Retrieve a list of users who liked a specified post.",
        "operationId": "GetLikes",
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the post to retrieve likes for."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of likes to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of users who liked the post.",
            "schema": {
              "type": "object",
              "properties": {
                "likes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "The handle of the user who liked the post."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The display name of the user who liked the post."
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the user's avatar image who liked the post."
                      },
                      "likedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the user liked the post."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.getPosts": {
      "get": {
        "summary": "Get Posts",
        "description": "Retrieve a list of specific posts by their IDs.",
        "operationId": "GetPosts",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Array of post IDs to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the specified posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "Unique identifier of the post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Handle of the post's author."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post."
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the post was created."
                      },
                      "likesCount": {
                        "type": "integer",
                        "description": "Number of likes the post has received."
                      },
                      "commentsCount": {
                        "type": "integer",
                        "description": "Number of comments on the post."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/app.bsky.feed.searchPosts": {
      "get": {
        "summary": "Search Posts",
        "description": "Search for posts that match a specific query.",
        "operationId": "SearchPosts",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The search query to match posts."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of posts to retrieve."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for pagination to fetch additional results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results for posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "postId": {
                        "type": "string",
                        "description": "Unique identifier of the post."
                      },
                      "author": {
                        "type": "string",
                        "description": "Handle of the post's author."
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post."
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the post was created."
                      },
                      "likesCount": {
                        "type": "integer",
                        "description": "Number of likes the post has received."
                      },
                      "commentsCount": {
                        "type": "integer",
                        "description": "Number of comments on the post."
                      }
                    }
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request - missing or invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "An unspecified error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "/app.bsky.feed.getFeed": {
        "get": {
          "summary": "Get Feed",
          "description": "Retrieve the feed of posts for a specified user or tag.",
          "operationId": "GetFeed",
          "parameters": [
            {
              "name": "user",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "The handle or user ID to retrieve the feed for. If not specified, retrieves the global feed."
            },
            {
              "name": "tag",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "A tag to filter the feed by. Only posts containing this tag will be returned."
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of posts to retrieve."
            },
            {
              "name": "before",
              "in": "query",
              "required": false,
              "type": "string",
              "format": "date-time",
              "description": "Retrieve posts before this timestamp."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved feed posts.",
              "schema": {
                "type": "object",
                "properties": {
                  "posts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "postId": {
                          "type": "string",
                          "description": "Unique identifier for the post."
                        },
                        "author": {
                          "type": "string",
                          "description": "Handle of the post's author."
                        },
                        "content": {
                          "type": "string",
                          "description": "Content of the post."
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the post was created."
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request - missing or invalid parameters.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "401": {
              "description": "Unauthorized - Invalid or missing API key.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "default": {
              "description": "An unspecified error occurred.",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "securityDefinitions": {
      "api_key": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Enter your Bluesky API token here."
      }
    },
    "security": [
      {
        "api_key": []
      }
    ],
    "definitions": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code representing the issue."
          },
          "message": {
            "type": "string",
            "description": "A descriptive message explaining the error."
          }
        }
      }
    }
  }
