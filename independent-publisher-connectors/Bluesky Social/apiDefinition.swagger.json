{
  "swagger": "2.0",
  "info": {
    "title": "Bluesky Social",
    "description": "Specification for the Bluesky Social endpoints. Includes endpoints for social interaction, admin, chat, ATProto, and ozone.",
    "contact": {
      "name": "Dan Romano",
      "email": "dan.romano@swolcat.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.0"
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://docs.bsky.app/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://example.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Social Media"
    }
  ],
  "host": "bsky.social",
  "basePath": "/xrpc",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/xrpc/app.bsky.actor.getPreferences": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Preferences for Current Account",
        "description": "Retrieve the user's preferences.\n",
        "operationId": "GetPreferences",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved preferences for the current account.",
            "schema": {
              "type": "object",
              "required": [
                "preferences"
              ],
              "properties": {
                "preferences": {
                  "$ref": "#/definitions/Preferences"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.getProfile": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Detailed Profile of an Actor",
        "description": "Retrieve the profile of a specific actor.\n",
        "operationId": "GetProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the account to fetch the profile of.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the actor's detailed profile.",
            "schema": {
              "$ref": "#/definitions/ProfileViewDetailed"
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.getProfiles": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Detailed Profiles of Multiple Actors",
        "description": "Retrieve profiles for multiple actors.\n",
        "operationId": "GetProfiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actors",
            "in": "query",
            "description": "Comma-separated list of handles or DIDs of the accounts to fetch profiles for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifiers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved detailed profiles of the specified actors.",
            "schema": {
              "type": "object",
              "required": [
                "profiles"
              ],
              "properties": {
                "profiles": {
                  "type": "array",
                  "description": "An array of detailed profile views for the specified actors.",
                  "items": {
                    "$ref": "#/definitions/ProfileViewDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.getSuggestions": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Suggestions for Actors",
        "description": "Get account suggestions for the user.\n",
        "operationId": "GetSuggestions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of suggestions to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved suggested profiles.",
            "schema": {
              "type": "object",
              "required": [
                "suggestions"
              ],
              "properties": {
                "suggestions": {
                  "type": "array",
                  "description": "An array of suggested profiles for the user.",
                  "items": {
                    "$ref": "#/definitions/ProfileViewDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.putPreferences": {
      "post": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Update Preferences for Current Account",
        "description": "Update the user's preferences.\n",
        "operationId": "PutPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the preferences to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "x-ms-summary": "Preferences Payload"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated preferences for the current account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the preferences update was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.searchActors": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Search for Actors",
        "description": "Search for actors by a query term.\n",
        "operationId": "SearchActors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "The search term used to find actors.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Term"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of results to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of actors matching the search term.",
            "schema": {
              "type": "object",
              "properties": {
                "actors": {
                  "type": "array",
                  "description": "An array of actors matching the search criteria.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.searchActorsTypeahead": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Search Actors for Typeahead",
        "description": "Get actor search suggestions.\n",
        "operationId": "SearchActorsTypeahead",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "The search term used for typeahead results.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Term"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of results to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved typeahead suggestions for actors.",
            "schema": {
              "type": "object",
              "properties": {
                "actors": {
                  "type": "array",
                  "description": "An array of minimal actor details matching the typeahead search.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.describeFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Describe Feed Generator",
        "description": "Get metadata about the feed generator.\n",
        "operationId": "DescribeFeedGenerator",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved metadata about the feed generator.",
            "schema": {
              "type": "object",
              "properties": {
                "feedFormats": {
                  "type": "array",
                  "description": "An array of supported feed formats.",
                  "items": {
                    "type": "string",
                    "example": "application/json"
                  }
                },
                "links": {
                  "type": "object",
                  "description": "Relevant links or metadata for the feed generator.",
                  "properties": {
                    "privacyPolicy": {
                      "type": "string",
                      "description": "URL of the feed generator's privacy policy.",
                      "example": "https://example.com/privacy"
                    },
                    "termsOfService": {
                      "type": "string",
                      "description": "URL of the feed generator's terms of service.",
                      "example": "https://example.com/terms"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getActorFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feeds for an Actor",
        "description": "Retrieve feeds created by a specific actor.\n",
        "operationId": "GetActorFeeds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor whose feeds are being retrieved.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of feeds to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the actor's feeds.",
            "schema": {
              "type": "object",
              "properties": {
                "feeds": {
                  "type": "array",
                  "description": "An array of feed views created by the actor.",
                  "items": {
                    "type": "object",
                    "description": "Details of a feed.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the feed.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the feed.",
                        "example": "My Tech News"
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the feed's avatar image.",
                        "example": "https://example.com/feed-avatar.jpg"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getActorLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Liked Posts by an Actor",
        "description": "Retrieve posts liked by a specific actor.\n",
        "operationId": "GetActorLikes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor whose liked posts are being retrieved.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of liked posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the liked posts by the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "likes": {
                  "type": "array",
                  "description": "An array of posts liked by the actor.",
                  "items": {
                    "type": "object",
                    "description": "Details of a liked post.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the liked post.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "author": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the liked post.",
                        "example": "This is a sample post content."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getAuthorFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Posts by an Author",
        "description": "Retrieve posts from a specific author.\n",
        "operationId": "GetAuthorFeed",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "description": "Handle or DID of the post author.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Author Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the posts by the author.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "description": "An array of posts created by the author.",
                  "items": {
                    "type": "object",
                    "description": "Details of a post.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the post.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "author": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post.",
                        "example": "This is a sample post content."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feed for a Specific URI",
        "description": "Retrieve posts from a specific feed or tag.\n",
        "operationId": "GetFeed",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "description": "URI of the feed to retrieve.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Feed URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of items to retrieve in the feed.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through the feed.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the feed contents.",
            "schema": {
              "type": "object",
              "properties": {
                "feedItems": {
                  "type": "array",
                  "description": "An array of feed items.",
                  "items": {
                    "type": "object",
                    "description": "Details of a feed item.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the feed item.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the feed item.",
                        "example": "This is a sample feed item."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Metadata for a Feed Generator",
        "description": "Retrieve metadata about a specific feed generator.\n",
        "operationId": "GetFeedGenerator",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generator",
            "in": "query",
            "description": "URI of the feed generator to retrieve metadata for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Feed Generator URI"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved metadata for the feed generator.",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "Metadata about the feed generator.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the feed generator.",
                      "example": "Tech News Feeds"
                    },
                    "avatar": {
                      "type": "string",
                      "description": "URL of the feed generator's avatar image.",
                      "example": "https://example.com/generator-avatar.jpg"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the feed generator.",
                      "example": "A generator for curated tech news feeds."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getFeedGenerators": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Metadata for Multiple Feed Generators",
        "description": "Retrieve metadata about all feed generators.\n",
        "operationId": "GetFeedGenerators",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generators",
            "in": "query",
            "description": "Comma-separated list of feed generator URIs to retrieve metadata for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Feed Generator URIs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved metadata for multiple feed generators.",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "array",
                  "description": "An array of metadata for the feed generators.",
                  "items": {
                    "type": "object",
                    "description": "Metadata for a single feed generator.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the feed generator.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/generator123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the feed generator.",
                        "example": "Tech News Feeds"
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the feed generator's avatar image.",
                        "example": "https://example.com/generator-avatar.jpg"
                      },
                      "description": {
                        "type": "string",
                        "description": "A brief description of the feed generator.",
                        "example": "A generator for curated tech news feeds."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getFeedSkeleton": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Skeleton Feed",
        "description": "Retrieve a minimal skeletal version of a feed.\n",
        "operationId": "GetFeedSkeleton",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "description": "URI of the feed to retrieve the skeleton for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Feed URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of items in the skeleton.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating the skeleton.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the skeleton feed.",
            "schema": {
              "type": "object",
              "properties": {
                "skeleton": {
                  "type": "array",
                  "description": "An array of skeleton feed items.",
                  "items": {
                    "type": "object",
                    "description": "Details of a skeleton feed item.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the feed item.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/item123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Likes for a Post",
        "description": "Retrieve users who liked a specific post.\n",
        "operationId": "GetLikes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "URI of the post to retrieve likes for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Post URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of likes to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved likes for the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "likes": {
                  "type": "array",
                  "description": "An array of actors who liked the post.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getListFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feed for a List",
        "description": "Retrieve posts from a specific list.\n",
        "operationId": "GetListFeed",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "description": "URI of the list to retrieve the feed for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "List URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through the feed.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list feed.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "description": "An array of posts in the list feed.",
                  "items": {
                    "type": "object",
                    "description": "Details of a post.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the post.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "author": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the post.",
                        "example": "This is a sample post content."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Posts by URIs",
        "description": "Retrieve specific posts by their IDs.\n",
        "operationId": "GetPosts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uris",
            "in": "query",
            "description": "Comma-separated list of post URIs to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Post URIs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "description": "An array of posts corresponding to the provided URIs.",
                  "items": {
                    "type": "object",
                    "description": "Details of a post.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the post.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "author": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the post.",
                        "example": "This is a sample post content."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getPostThread": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Thread for a Post",
        "description": "Retrieve the thread of posts related to a specific post.\n",
        "operationId": "GetPostThread",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "URI of the post to retrieve the thread for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Post URI"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the thread for the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "thread": {
                  "type": "object",
                  "description": "The root post of the thread with its replies.",
                  "properties": {
                    "root": {
                      "$ref": "#/definitions/Post"
                    },
                    "replies": {
                      "type": "array",
                      "description": "An array of replies to the root post.",
                      "items": {
                        "$ref": "#/definitions/Post"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getQuotes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Posts Quoting a Specific Post",
        "description": "Retrieve posts that quote a specific post.\n",
        "operationId": "GetQuotes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "URI of the post to retrieve quotes for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Post URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of quotes to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved posts quoting the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "quotes": {
                  "type": "array",
                  "description": "An array of posts that quote the specified post.",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getRepostedBy": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Actors Who Reposted a Specific Post",
        "description": "Retrieve users who reposted a specific post.\n",
        "operationId": "GetRepostedBy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "URI of the post to retrieve reposts for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Post URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of reposts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved actors who reposted the post.",
            "schema": {
              "type": "object",
              "properties": {
                "repostedBy": {
                  "type": "array",
                  "description": "An array of actors who reposted the specified post.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getSuggestedFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Suggested Feeds",
        "description": "Retrieve suggested feeds for the user.\n",
        "operationId": "GetSuggestedFeeds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of suggested feeds to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved suggested feeds.",
            "schema": {
              "type": "object",
              "properties": {
                "suggestedFeeds": {
                  "type": "array",
                  "description": "An array of suggested feeds.",
                  "items": {
                    "type": "object",
                    "description": "Details of a suggested feed.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the feed.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/generator123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the feed.",
                        "example": "Tech News Feeds"
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the feed's avatar image.",
                        "example": "https://example.com/feed-avatar.jpg"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getTimeline": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Timeline",
        "description": "Retrieve the timeline of posts for the user.\n",
        "operationId": "GetTimeline",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "algorithm",
            "in": "query",
            "description": "The algorithm used to generate the timeline (e.g., reverse chronological).",
            "required": false,
            "type": "string",
            "x-ms-summary": "Timeline Algorithm"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the timeline.",
            "schema": {
              "type": "object",
              "properties": {
                "timeline": {
                  "type": "array",
                  "description": "An array of posts in the user's timeline.",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.searchPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Search Posts",
        "description": "Search for posts matching a query.\n",
        "operationId": "SearchPosts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "The search term used to find posts.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Term"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved posts matching the search term.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "description": "An array of posts matching the search criteria.",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.sendInteractions": {
      "post": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Send Interactions",
        "description": "Send interactions (like, repost) for a post.\n",
        "operationId": "SendInteractions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the interactions to be sent.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "interactions": {
                  "type": "array",
                  "description": "An array of interactions to send.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of interaction (e.g., 'like', 'repost').",
                        "example": "like"
                      },
                      "uri": {
                        "type": "string",
                        "description": "URI of the post the interaction is for.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the interaction was created.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent interactions.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the interactions were successfully sent.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getActorStarterPacks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Starter Packs for Actors",
        "description": "Retrieve starter packs of accounts for new users.\n",
        "operationId": "GetActorStarterPacks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of starter packs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved actor starter packs.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "description": "An array of actor starter packs.",
                  "items": {
                    "type": "object",
                    "description": "Details of a starter pack.",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the starter pack.",
                        "example": "Tech Enthusiasts"
                      },
                      "actors": {
                        "type": "array",
                        "description": "An array of actor profiles included in the pack.",
                        "items": {
                          "$ref": "#/definitions/ProfileView"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Blocked Accounts",
        "description": "Retrieve users blocked by the authenticated user.\n",
        "operationId": "GraphGetBlocks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of blocked accounts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved blocked accounts.",
            "schema": {
              "type": "object",
              "properties": {
                "blocks": {
                  "type": "array",
                  "description": "An array of profiles representing blocked accounts.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Followers",
        "description": "Get a list of followers for a user.\n",
        "operationId": "GetFollowers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to retrieve followers for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of followers to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved followers for the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "followers": {
                  "type": "array",
                  "description": "An array of profiles representing followers.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getFollows": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Follows",
        "description": "Get a list of users followed by a specific user.\n",
        "operationId": "GetFollows",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to retrieve follows for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of follows to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved accounts followed by the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "follows": {
                  "type": "array",
                  "description": "An array of profiles representing accounts followed by the actor.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getKnownFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Known Followers",
        "description": "Retrieve followers who are known to the authenticated user.\n",
        "operationId": "GetKnownFollowers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to retrieve known followers for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of known followers to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved known followers.",
            "schema": {
              "type": "object",
              "properties": {
                "followers": {
                  "type": "array",
                  "description": "An array of profiles representing known followers.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getList": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get List Details",
        "description": "Retrieve a specific list of users.\n",
        "operationId": "GetList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "description": "URI of the list to retrieve.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "List URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of list items to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list details.",
            "schema": {
              "type": "object",
              "properties": {
                "listItems": {
                  "type": "array",
                  "description": "An array of profiles or items in the list.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getListBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get List Blocks",
        "description": "Retrieve users blocked within a specific list.\n",
        "operationId": "GetListBlocks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "description": "URI of the list to retrieve blocked accounts for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "List URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of blocked accounts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved blocked accounts within the list.",
            "schema": {
              "type": "object",
              "properties": {
                "blockedAccounts": {
                  "type": "array",
                  "description": "An array of profiles representing blocked accounts within the list.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getListMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get List Mutes",
        "description": "Retrieve muted lists for the authenticated user.\n",
        "operationId": "GetListMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of muted lists to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved muted lists.",
            "schema": {
              "type": "object",
              "properties": {
                "mutedLists": {
                  "type": "array",
                  "description": "An array of muted list details.",
                  "items": {
                    "type": "object",
                    "description": "Details of a muted list.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the muted list.",
                        "example": "at://did:plc:abcd1234/app.bsky.graph/list123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the muted list.",
                        "example": "Blocked Users"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getLists": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Lists for an Actor",
        "description": "Retrieve all lists for the authenticated user.\n",
        "operationId": "GetLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to retrieve lists for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of lists to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved lists for the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "lists": {
                  "type": "array",
                  "description": "An array of lists associated with the actor.",
                  "items": {
                    "type": "object",
                    "description": "Details of a list.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "URI of the list.",
                        "example": "at://did:plc:abcd1234/app.bsky.graph/list123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the list.",
                        "example": "My Favorites"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Muted Accounts",
        "description": "Retrieve muted users for the authenticated user.\n",
        "operationId": "GetMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of muted accounts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved muted accounts.",
            "schema": {
              "type": "object",
              "properties": {
                "mutedAccounts": {
                  "type": "array",
                  "description": "An array of profiles representing muted accounts.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getRelationships": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Relationships Between Accounts",
        "description": "Retrieve relationships between the authenticated user and specified accounts.\n",
        "operationId": "GetRelationships",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actors",
            "in": "query",
            "description": "Comma-separated list of actor DIDs or handles to retrieve relationships for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifiers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account relationships.",
            "schema": {
              "type": "object",
              "properties": {
                "relationships": {
                  "type": "array",
                  "description": "An array of relationship data between the authenticated user and specified actors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "actor": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "relationship": {
                        "type": "string",
                        "description": "The type of relationship (e.g., 'following', 'followed_by', 'muted').",
                        "example": "following"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getStarterPack": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Starter Pack Details",
        "description": "Retrieve a single starter pack for a new user.\n",
        "operationId": "GetStarterPack",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pack",
            "in": "query",
            "description": "URI of the starter pack to retrieve.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Starter Pack URI"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the starter pack details.",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the starter pack.",
                  "example": "Tech Enthusiasts"
                },
                "actors": {
                  "type": "array",
                  "description": "An array of profiles included in the starter pack.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getStarterPacks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get All Starter Packs",
        "description": "Retrieve all starter packs for new users.\n",
        "operationId": "GetStarterPacks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of starter packs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved starter packs.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "description": "An array of starter packs.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the starter pack.",
                        "example": "Tech Enthusiasts"
                      },
                      "uri": {
                        "type": "string",
                        "description": "URI of the starter pack.",
                        "example": "at://did:plc:abcd1234/app.bsky.graph/starterPack123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getSuggestedFollowsByActor": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Suggested Follows Based on Actor",
        "description": "Retrieve suggested accounts to follow, filtered by an actor.\n",
        "operationId": "GetSuggestedFollowsByActor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to base suggestions on.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of suggestions to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved suggested follows.",
            "schema": {
              "type": "object",
              "properties": {
                "suggestedFollows": {
                  "type": "array",
                  "description": "An array of suggested profiles to follow.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.muteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an Actor",
        "description": "Mute a specific actor for the authenticated user.\n",
        "operationId": "MuteActor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the actor to mute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "actor": {
                  "type": "string",
                  "description": "Handle or DID of the actor to mute.",
                  "example": "did:plc:abcd1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor was successfully muted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.muteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an Actor List",
        "description": "Mute a specific list of actors for the authenticated user.\n",
        "operationId": "MuteActorList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the actor list to mute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "string",
                  "description": "URI of the actor list to mute.",
                  "example": "at://did:plc:abcd1234/app.bsky.graph/list123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the actor list.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor list was successfully muted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.muteThread": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute a Thread",
        "description": "Mute an entire thread of posts for the authenticated user.\n",
        "operationId": "MuteThread",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the thread to mute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "threadUri": {
                  "type": "string",
                  "description": "URI of the thread to mute.",
                  "example": "at://did:plc:abcd1234/app.bsky.feed/thread123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the thread.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the thread was successfully muted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.unmuteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an Actor",
        "description": "Unmute a specific actor for the authenticated user.\n",
        "operationId": "UnmuteActor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the actor to unmute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "actor": {
                  "type": "string",
                  "description": "Handle or DID of the actor to unmute.",
                  "example": "did:plc:abcd1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor was successfully unmuted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.unmuteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an Actor List",
        "description": "Unmute a specific list of actors for the authenticated user.\n",
        "operationId": "UnmuteActorList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the actor list to unmute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "string",
                  "description": "URI of the actor list to unmute.",
                  "example": "at://did:plc:abcd1234/app.bsky.graph/list123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the actor list.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor list was successfully unmuted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.unmuteThread": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute a Thread",
        "description": "Unmute an entire thread of posts for the authenticated user.\n",
        "operationId": "UnmuteThread",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the thread to unmute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "threadUri": {
                  "type": "string",
                  "description": "URI of the thread to unmute.",
                  "example": "at://did:plc:abcd1234/app.bsky.feed/thread123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the thread.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the thread was successfully unmuted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.labeler.getServices": {
      "get": {
        "tags": [
          "app.bsky.labeler"
        ],
        "summary": "Get Labeling Services",
        "description": "Retrieve the list of labeler services available to the user.\n",
        "operationId": "GetServices",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved labeling services.",
            "schema": {
              "type": "object",
              "properties": {
                "services": {
                  "type": "array",
                  "description": "An array of available labeling services.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the labeling service.",
                        "example": "ContentFilterPro"
                      },
                      "endpoint": {
                        "type": "string",
                        "description": "The endpoint of the labeling service.",
                        "example": "https://labeler.example.com/api"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.getUnreadCount": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Get Unread Notification Count",
        "description": "Retrieve the count of unread notifications for the authenticated user.\n",
        "operationId": "GetUnreadCount",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved unread notification count.",
            "schema": {
              "type": "object",
              "properties": {
                "unreadCount": {
                  "type": "integer",
                  "description": "The number of unread notifications.",
                  "example": 12
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve unread count.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.listNotifications": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "List Notifications",
        "description": "List notifications for the authenticated user.\n",
        "operationId": "ListNotifications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Max num of notifications to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved notifications.",
            "schema": {
              "type": "object",
              "properties": {
                "notifications": {
                  "type": "array",
                  "description": "An array of notifications.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the notification.",
                        "example": "notif123"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of notification (e.g., 'like', 'mention').",
                        "example": "like"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the notification was created.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.putPreferences": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Update Notification Preferences",
        "description": "Update notification preferences for the authenticated user.\n",
        "operationId": "NotificationPutPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Notification preferences to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "preferences": {
                  "type": "object",
                  "description": "The notification preferences object.",
                  "example": {
                    "likes": true,
                    "mentions": false,
                    "replies": true
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated notification preferences.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the preferences were successfully updated.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.registerPush": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Register Push Notifications",
        "description": "Register the user for push notifications.\n",
        "operationId": "RegisterPush",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the device to register for push notifications.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deviceToken": {
                  "type": "string",
                  "description": "The device token for push notifications.",
                  "example": "device_token_abc123"
                },
                "platform": {
                  "type": "string",
                  "description": "The platform of the device (e.g., 'iOS', 'Android').",
                  "example": "iOS"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully registered the device for push notifications.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the device was successfully registered.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.updateSeen": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Update Notifications as Seen",
        "description": "Mark notifications as seen for the authenticated user.\n",
        "operationId": "UpdateSeen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the notifications to update as seen.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "seenAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp when notifications were marked as seen.",
                  "example": "2023-11-19T12:34:56Z"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated notifications as seen.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the notifications were successfully updated as seen.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.video.getJobStatus": {
      "get": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Get Video Job Status",
        "description": "Retrieve the status of a video upload job.\n",
        "operationId": "GetJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "The ID of the video job to retrieve the status for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Job ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved video job status.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current status of the video job (e.g., 'pending', 'processing', 'completed').",
                  "example": "processing"
                },
                "progress": {
                  "type": "integer",
                  "description": "The percentage of progress for the video job.",
                  "example": 50
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.video.getUploadLimits": {
      "get": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Get Video Upload Limits",
        "description": "Retrieve the upload limits for videos, such as file size or resolution.\n",
        "operationId": "GetUploadLimits",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved video upload limits.",
            "schema": {
              "type": "object",
              "properties": {
                "maxFileSize": {
                  "type": "integer",
                  "description": "The maximum file size allowed for video uploads (in bytes).",
                  "example": 104857600
                },
                "maxDuration": {
                  "type": "integer",
                  "description": "The maximum duration allowed for video uploads (in seconds).",
                  "example": 300
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve upload limits.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.video.uploadVideo": {
      "post": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Upload Video",
        "description": "Upload a video file using multipart/form-data.",
        "operationId": "UploadVideo",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The video file to upload in MP4 format.",
            "x-ms-summary": "Video File"
          },
          {
            "name": "metadata",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Optional metadata for the video, such as title or description.",
            "x-ms-summary": "Video Metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully uploaded the video."
          },
          "400": {
            "description": "Bad Request - Invalid video file or parameters."
          },
          "500": {
            "description": "Internal Server Error - Unexpected failure during video upload."
          }
        }
      }
    },
    "/xrpc/chat.bsky.actor.deleteAccount": {
      "post": {
        "tags": [
          "chat.bsky.actor"
        ],
        "summary": "Delete Account",
        "description": "Permanently delete the user's account and associated data.\n",
        "operationId": "DeleteAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details to confirm account deletion.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "confirmDelete": {
                  "type": "boolean",
                  "description": "Confirmation flag to delete the account.",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the account was successfully deleted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.actor.exportAccountData": {
      "get": {
        "tags": [
          "chat.bsky.actor"
        ],
        "summary": "Export Account Data",
        "description": "Export the user's account data for archival or migration.\n",
        "operationId": "ExportAccountData",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully exported account data.",
            "schema": {
              "type": "object",
              "properties": {
                "accountData": {
                  "type": "string",
                  "description": "The exported account data in JSON format.",
                  "example": "{\"username\": \"johndoe\", \"posts\": [...]}"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to export account data.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.deleteMessageForSelf": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Delete Message for Self",
        "description": "Delete a message from the user's view only (does not delete for others).\n",
        "operationId": "DeleteMessageForSelf",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the message to delete.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "messageId": {
                  "type": "string",
                  "description": "Unique identifier of the message to delete.",
                  "example": "msg123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the message for the authenticated user.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the message was successfully deleted for the user.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.getConvo": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Conversation",
        "description": "Retrieve a specific conversation for the authenticated user.\n",
        "operationId": "GetConvo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "description": "Unique identifier of the convo to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Conversation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the conversation.",
                  "example": "convo123"
                },
                "participants": {
                  "type": "array",
                  "description": "A list of participants in the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "Handle of the participant.",
                        "example": "johndoe"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the participant.",
                        "example": "John Doe"
                      }
                    }
                  }
                },
                "messages": {
                  "type": "array",
                  "description": "The list of messages in the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "The text content of the message.",
                        "example": "Hello, world!"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the message was created.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.getConvoForMembers": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Conversation for Members",
        "description": "Get a conversation involving specific members.\n",
        "operationId": "GetConvoForMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "members",
            "in": "query",
            "description": "A comma-separated list of member handles or IDs.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Member Handles/IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the convo for the specified members.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier of the conversation.",
                  "example": "convo123"
                },
                "participants": {
                  "type": "array",
                  "description": "A list of participants in the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "Handle of the participant.",
                        "example": "johndoe"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the participant.",
                        "example": "John Doe"
                      }
                    }
                  }
                },
                "messages": {
                  "type": "array",
                  "description": "The list of messages in the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "The text content of the message.",
                        "example": "Hello, world!"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the message was created.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or member list.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.getLog": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Conversation Log",
        "description": "Retrieve the activity log for a conversation.\n",
        "operationId": "GetLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "description": "Unique identifier of the convo to retrieve the log for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of log entries to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating the log.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the convo log.",
            "schema": {
              "type": "object",
              "properties": {
                "log": {
                  "type": "array",
                  "description": "An array of log entries for the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID in the log.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "The text content of the message.",
                        "example": "Hello, world!"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the message.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid conversation ID or input.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.getMessages": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Conversation Messages",
        "description": "Get a list of messages in a specific conversation.",
        "operationId": "GetMessages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "description": "Unique identifier of the conversation.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of messages to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating messages.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved messages in the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "type": "array",
                  "description": "A list of messages.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "Message content.",
                        "example": "Hello, how are you?"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Message creation timestamp.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.leaveConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Leave Conversation",
        "description": "Leave a specific conversation.",
        "operationId": "LeaveConvo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The details of the convo to leave.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier of the convo to leave.",
                  "example": "convo123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully left the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.listConvos": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "List Conversations",
        "description": "Get a list of all conversations for the authenticated user.",
        "operationId": "ListConvos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of conversations to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating conversations.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of conversations.",
            "schema": {
              "type": "object",
              "properties": {
                "conversations": {
                  "type": "array",
                  "description": "A list of conversations.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Conversation ID.",
                        "example": "convo123"
                      },
                      "participants": {
                        "type": "array",
                        "description": "Participants in the conversation.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "handle": {
                              "type": "string",
                              "description": "Participant handle.",
                              "example": "johndoe"
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Participant display name.",
                              "example": "John Doe"
                            }
                          }
                        }
                      },
                      "lastMessageAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the last message in the conversation.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or pagination cursor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.muteConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Mute Conversation",
        "description": "Mute a specific conversation. Muted conversations will not send notifications.\n",
        "operationId": "MuteConvo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the convo to mute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier of the convo to mute.",
                  "example": "convo123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.sendMessage": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Send Message",
        "description": "Send a new message in a specific conversation.\n",
        "operationId": "SendMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the message to send.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier of the conversation.",
                  "example": "convo123"
                },
                "text": {
                  "type": "string",
                  "description": "The content of the message.",
                  "example": "Hello, world!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the message.",
            "schema": {
              "type": "object",
              "properties": {
                "messageId": {
                  "type": "string",
                  "description": "Unique identifier of the sent message.",
                  "example": "msg123"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.createSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Session",
        "description": "Create a new session for authentication. Generates access and refresh tokens.",
        "operationId": "CreateSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Credentials to create a session.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "The user's email or handle.",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "description": "The user's password.",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a session.",
            "schema": {
              "type": "object",
              "properties": {
                "accessJwt": {
                  "type": "string",
                  "description": "The access token for authentication.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refreshJwt": {
                  "type": "string",
                  "description": "The refresh token for session renewal.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid credentials or input.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.refreshSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Refresh Session",
        "description": "Refresh an existing session to obtain a new access token and refresh token.",
        "operationId": "RefreshSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The refresh token for renewing the session.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshJwt": {
                  "type": "string",
                  "description": "The refresh token provided during session creation or previous refresh.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed the session.",
            "schema": {
              "type": "object",
              "properties": {
                "accessJwt": {
                  "type": "string",
                  "description": "The new access token for authentication.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refreshJwt": {
                  "type": "string",
                  "description": "The new refresh token for session renewal.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid or expired refresh token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.sendMessageBatch": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Send Message Batch",
        "description": "Send a batch of messages to multiple conversations.\n",
        "operationId": "SendMessageBatch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the messages to send.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "type": "array",
                  "description": "A list of messages to send in batch.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "convoId": {
                        "type": "string",
                        "description": "Unique identifier of the conversation.",
                        "example": "convo123"
                      },
                      "text": {
                        "type": "string",
                        "description": "The message content.",
                        "example": "Hello, everyone!"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the batch of messages.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or message data.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.unmuteConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Unmute Conversation",
        "description": "Unmute a previously muted conversation.",
        "operationId": "UnmuteConvo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the convo to unmute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier of the convo to unmute.",
                  "example": "convo123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.updateRead": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Update Read Status",
        "description": "Mark messages in a conversation as read up to a specified point.\n",
        "operationId": "UpdateRead",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the convo and read status update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier of the conversation.",
                  "example": "convo123"
                },
                "readUpToMessageId": {
                  "type": "string",
                  "description": "The ID of the last message read.",
                  "example": "msg456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the read status.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.moderation.getActorMetadata": {
      "get": {
        "tags": [
          "chat.bsky.moderation"
        ],
        "summary": "Get Actor Metadata",
        "description": "Retrieve metadata about a specific actor for moderation.\n",
        "operationId": "GetActorMetadata",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "The DID or handle of the actor whose metadata is being fetched.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Handle or DID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved actor metadata.",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "Metadata associated with the actor.",
                  "properties": {
                    "reputation": {
                      "type": "string",
                      "description": "The reputation of the actor.",
                      "example": "good"
                    },
                    "warnings": {
                      "type": "array",
                      "description": "List of warnings or infractions related to the actor.",
                      "items": {
                        "type": "string",
                        "example": "Spam reported on 2023-11-19"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid actor identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.moderation.getMessageContext": {
      "get": {
        "tags": [
          "chat.bsky.moderation"
        ],
        "summary": "Get Message Context",
        "description": "Retrieve the context of a specific message for moderation purposes.\n",
        "operationId": "GetMessageContext",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "messageId",
            "in": "query",
            "description": "Unique identifier of the message to retrieve context for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Message ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the message context.",
            "schema": {
              "type": "object",
              "properties": {
                "before": {
                  "type": "array",
                  "description": "Messages sent before the specified message.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "Message content.",
                        "example": "What are you up to?"
                      }
                    }
                  }
                },
                "after": {
                  "type": "array",
                  "description": "Messages sent after the specified message.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID.",
                        "example": "msg125"
                      },
                      "text": {
                        "type": "string",
                        "description": "Message content.",
                        "example": "Let's catch up soon!"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid message ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.moderation.updateActorAccess": {
      "post": {
        "tags": [
          "chat.bsky.moderation"
        ],
        "summary": "Update Actor Access",
        "description": "Update actor access permissions or restrictions.\n",
        "operationId": "UpdateActorAccess",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the access update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "actor": {
                  "type": "string",
                  "description": "The DID or handle of the actor whose access is being updated.",
                  "example": "did:plc:xyz123"
                },
                "accessLevel": {
                  "type": "string",
                  "description": "The new access level for the actor.",
                  "example": "restricted"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated actor access.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid actor identifier or access level.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.deleteAccount": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Delete Account",
        "description": "Permanently delete an account, including all associated data.\n",
        "operationId": "AdminDeleteAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account to delete.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the account to delete.",
                  "example": "account123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.disableAccountInvites": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Disable Account Invites",
        "description": "Disable account invites for a specific user.\n",
        "operationId": "DisableAccountInvites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the user whose invites are being disabled.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the account.",
                  "example": "account123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled account invites.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.disableInviteCodes": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Disable Invite Codes",
        "description": "Disable specific invite codes to prevent further usage.\n",
        "operationId": "DisableInviteCodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the invite codes to disable.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inviteCodes": {
                  "type": "array",
                  "description": "A list of invite codes to disable.",
                  "items": {
                    "type": "string",
                    "example": "ABC123"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled the invite codes.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid or already disabled invite codes.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.enableAccountInvites": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Enable Account Invites",
        "description": "Re-enable invite privileges for a specific account.\n",
        "operationId": "EnableAccountInvites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account whose invite privileges are being enabled.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the account.",
                  "example": "account123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully enabled account invites.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid or already enabled account ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.getAccountInfo": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get Account Info",
        "description": "Retrieve detailed information about a specific account.\n",
        "operationId": "GetAccountInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Unique identifier of the account.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account information.",
            "schema": {
              "type": "object",
              "properties": {
                "account": {
                  "type": "object",
                  "description": "Detailed information about the account.",
                  "properties": {
                    "accountId": {
                      "type": "string",
                      "description": "Unique identifier of the account.",
                      "example": "account123"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email associated with the account.",
                      "example": "user@example.com"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the account.",
                      "example": "active"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.getAccountInfos": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get Account Infos",
        "description": "Get a list of accounts with their details.\n",
        "operationId": "GetAccountInfos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of accounts to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating accounts.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account information.",
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "description": "A list of account details.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "description": "Unique identifier of the account.",
                        "example": "account123"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email associated with the account.",
                        "example": "user@example.com"
                      },
                      "status": {
                        "type": "string",
                        "description": "The current status of the account.",
                        "example": "active"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or pagination cursor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.getInviteCodes": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get Invite Codes",
        "description": "Get a list of all active or disabled invite codes.\n",
        "operationId": "GetInviteCodes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of invite codes to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating invite codes.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved invite codes.",
            "schema": {
              "type": "object",
              "properties": {
                "inviteCodes": {
                  "type": "array",
                  "description": "A list of invite codes.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The invite code.",
                        "example": "ABC123"
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the invite code (e.g., active, disabled).",
                        "example": "active"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or pagination cursor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.getSubjectStatus": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get Subject Status",
        "description": "Retrieve the status of a specific subject (e.g., an account or actor).\n",
        "operationId": "GetSubjectStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "description": "Unique identifier (e.g., DID or handle) of the subject to retrieve the status for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Subject ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved subject status.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current status of the subject.",
                  "example": "active"
                },
                "moderation": {
                  "type": "object",
                  "description": "Moderation details for the subject.",
                  "properties": {
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Spam activity detected."
                      }
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Restricted for policy violation."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid subject ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.searchAccounts": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Search Accounts",
        "description": "Search for accounts with a specific email, handle, etc.\n",
        "operationId": "AdminSearchAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The search query to match against account properties.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Query"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Result Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating the results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account search results.",
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "description": "A list of accounts matching the query.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "description": "Unique identifier of the account.",
                        "example": "account123"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email associated with the account.",
                        "example": "user@example.com"
                      },
                      "handle": {
                        "type": "string",
                        "description": "The handle of the account.",
                        "example": "johndoe"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid query or parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.sendEmail": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Send Email",
        "description": "Send an email to a specific account or group of accounts.\n",
        "operationId": "SendEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the email to send.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "to": {
                  "type": "string",
                  "description": "The email address or identifier of the recipient.",
                  "example": "user@example.com"
                },
                "subject": {
                  "type": "string",
                  "description": "The subject line of the email.",
                  "example": "Account Update Notification"
                },
                "body": {
                  "type": "string",
                  "description": "The content of the email.",
                  "example": "Your account has been updated successfully."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the email.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid email details or parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.updateAccountEmail": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update Account Email",
        "description": "Update the email address associated with a specific account.\n",
        "operationId": "UpdateAccountEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account and the new email address.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the account.",
                  "example": "account123"
                },
                "newEmail": {
                  "type": "string",
                  "description": "The new email address for the account.",
                  "example": "newuser@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the account email.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier or email.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.updateAccountHandle": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update Account Handle",
        "description": "Update the handle associated with a specific account.\n",
        "operationId": "UpdateAccountHandle",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account and the new handle.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the account.",
                  "example": "account123"
                },
                "newHandle": {
                  "type": "string",
                  "description": "The new handle for the account.",
                  "example": "newhandle"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the account handle.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier or handle.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.updateAccountPassword": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update Account Password",
        "description": "Update the password for a specific account.\n",
        "operationId": "UpdateAccountPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account and the new password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the account.",
                  "example": "account123"
                },
                "newPassword": {
                  "type": "string",
                  "description": "The new password for the account.",
                  "example": "newSecurePassword123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the account password.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier or password.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.admin.updateSubjectStatus": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update Subject Status",
        "description": "Update the status of a specific subject (e.g., actor).\n",
        "operationId": "UpdateSubjectStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the subject and the new status.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subjectId": {
                  "type": "string",
                  "description": "Unique identifier of the subject.",
                  "example": "did:plc:xyz123"
                },
                "newStatus": {
                  "type": "string",
                  "description": "The new status for the subject (e.g., active, restricted).",
                  "example": "restricted"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the subject status.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid subject identifier or status.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.identity.getRecommendedDidCredentials": {
      "get": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Get Recommended DID Credentials",
        "description": "Get a list of recommended DID credentials for an identity.\n",
        "operationId": "GetRecommendedDidCredentials",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved recommended DID credentials.",
            "schema": {
              "type": "object",
              "properties": {
                "credentials": {
                  "type": "array",
                  "description": "A list of recommended DID credentials.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "did": {
                        "type": "string",
                        "description": "The DID credential.",
                        "example": "did:plc:xyz123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve credentials.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.identity.requestPlcOperationSignature": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Request PLC Operation Signature",
        "description": "Request a signature for a PLC operation to validate or authenticate actions.\n",
        "operationId": "RequestPlcOperationSignature",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the PLC operation to sign.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operationDetails": {
                  "type": "object",
                  "description": "Details of the operation to sign.",
                  "example": {
                    "type": "update",
                    "did": "did:plc:xyz123"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generated a PLC operation signature.",
            "schema": {
              "type": "object",
              "properties": {
                "signature": {
                  "type": "string",
                  "description": "The generated signature for the PLC operation.",
                  "example": "abc123signaturexyz"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to generate signature.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.identity.resolveHandle": {
      "get": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Resolve Handle",
        "description": "Resolve a handle to its DID for account identification.\n",
        "operationId": "ResolveHandle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "handle",
            "in": "query",
            "description": "The handle to resolve into a DID.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Handle"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully resolved the handle.",
            "schema": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "The DID corresponding to the handle.",
                  "example": "did:plc:xyz123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid or unresolved handle.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.identity.signPlcOperation": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Sign PLC Operation",
        "description": "Sign a PLC operation for authentication or validation.\n",
        "operationId": "SignPlcOperation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the PLC operation to be signed.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operationDetails": {
                  "type": "object",
                  "description": "The details of the PLC operation.",
                  "example": {
                    "type": "create",
                    "did": "did:plc:xyz123",
                    "metadata": {}
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully signed the PLC operation.",
            "schema": {
              "type": "object",
              "properties": {
                "signature": {
                  "type": "string",
                  "description": "The signature of the PLC operation.",
                  "example": "abc123signaturexyz"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Failed to sign the PLC operation.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.identity.submitPlcOperation": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Submit PLC Operation",
        "description": "Submit a PLC operation to the network.\n",
        "operationId": "SubmitPlcOperation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the PLC operation to submit.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operationDetails": {
                  "type": "object",
                  "description": "The details of the PLC operation.",
                  "example": {
                    "type": "update",
                    "did": "did:plc:xyz123",
                    "metadata": {}
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully submitted the PLC operation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates that the PLC operation was successfully submitted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Failed to submit the PLC operation.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.identity.updateHandle": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Update Handle",
        "description": "Update the handle associated with a specific DID.\n",
        "operationId": "UpdateHandle",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the DID and the new handle.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "The DID associated with the handle to update.",
                  "example": "did:plc:xyz123"
                },
                "newHandle": {
                  "type": "string",
                  "description": "The new handle to associate with the DID.",
                  "example": "newhandle"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the handle.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates that the handle was successfully updated.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid DID or handle.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.label.queryLabels": {
      "get": {
        "tags": [
          "com.atproto.label"
        ],
        "summary": "Query Labels",
        "description": "Query the labels associated with specific content or entities.\n",
        "operationId": "QueryLabels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "description": "The identifier of the subject (e.g., post or user) to query labels for.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Subject ID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of labels to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Result Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating the labels.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved labels.",
            "schema": {
              "type": "object",
              "properties": {
                "labels": {
                  "type": "array",
                  "description": "A list of labels associated with the subject.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "labelId": {
                        "type": "string",
                        "description": "Unique identifier of the label.",
                        "example": "label123"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of label (e.g., spam, offensive).",
                        "example": "spam"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or query.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.moderation.createReport": {
      "post": {
        "tags": [
          "com.atproto.moderation"
        ],
        "summary": "Create Report",
        "description": "Create a report flagging inappropriate content or behavior.\n",
        "operationId": "CreateReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the report to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subjectId": {
                  "type": "string",
                  "description": "The identifier of the subject being reported.",
                  "example": "did:plc:xyz123"
                },
                "reason": {
                  "type": "string",
                  "description": "The reason for the report.",
                  "example": "Spam content"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the report.",
            "schema": {
              "type": "object",
              "properties": {
                "reportId": {
                  "type": "string",
                  "description": "Unique identifier of the created report.",
                  "example": "report123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid report details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.applyWrites": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Apply Writes",
        "description": "Apply a set of write operations to the repo.\n",
        "operationId": "ApplyWrites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The list of writes to apply to the repository.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "writes": {
                  "type": "array",
                  "description": "A list of write operations to apply.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "operation": {
                        "type": "string",
                        "description": "The type of operation (e.g., create, update, delete).",
                        "example": "create"
                      },
                      "record": {
                        "type": "object",
                        "description": "The record to apply the operation to."
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Writes successfully applied to the repository.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates that the writes were applied successfully.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid write operations.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.createRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Create Record",
        "description": "Create a new record in the repository.\n",
        "operationId": "CreateRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The details of the record to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "collection": {
                  "type": "string",
                  "description": "The name of the collection to create the record in.",
                  "example": "posts"
                },
                "record": {
                  "type": "object",
                  "description": "The content of the record.",
                  "example": {
                    "content": "Hello World"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Unique identifier of the created record.",
                  "example": "record123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid record details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.deleteRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Delete Record",
        "description": "Delete a record from the repository.\n",
        "operationId": "DeleteRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The identifier of the record to delete.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "collection": {
                  "type": "string",
                  "description": "The name of the collection containing the record.",
                  "example": "posts"
                },
                "recordId": {
                  "type": "string",
                  "description": "Unique identifier of the record to delete.",
                  "example": "record123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates that the record was successfully deleted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid record identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.describeRepo": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Describe Repository",
        "description": "Retrieve metadata about the repository.\n",
        "operationId": "DescribeRepo",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved repository metadata.",
            "schema": {
              "type": "object",
              "properties": {
                "collections": {
                  "type": "array",
                  "description": "List of collections in the repository.",
                  "items": {
                    "type": "string",
                    "example": "posts"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve repository details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.importRepo": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Import Repository",
        "description": "Import an existing repository into the current system.\n",
        "operationId": "ImportRepo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the repository to import.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "repoUrl": {
                  "type": "string",
                  "description": "The URL of the repository to import.",
                  "example": "https://repo.example.com"
                },
                "credentials": {
                  "type": "object",
                  "description": "Credentials for accessing the repository.",
                  "properties": {
                    "username": {
                      "type": "string",
                      "description": "Username for repository access."
                    },
                    "password": {
                      "type": "string",
                      "description": "Password for repository access."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Repository successfully imported.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful import operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid repository details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.listMissingBlobs": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "List Missing Blobs",
        "description": "Get a list of blobs missing from the repository.\n",
        "operationId": "ListMissingBlobs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "description": "Unique identifier of the repository to check.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of missing blobs.",
            "schema": {
              "type": "object",
              "properties": {
                "missingBlobs": {
                  "type": "array",
                  "description": "A list of missing blob identifiers.",
                  "items": {
                    "type": "string",
                    "example": "blob123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid repository identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.listRecords": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "List Records",
        "description": "Retrieve list records from a collection in a repository.\n",
        "operationId": "ListRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "collection",
            "in": "query",
            "description": "The name of the collection to list records from.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Collection Name"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Result Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating the records.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of records.",
            "schema": {
              "type": "object",
              "properties": {
                "records": {
                  "type": "array",
                  "description": "A list of records from the collection.",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid collection name or parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.putRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Update or Replace Record",
        "description": "Update or replace an existing record in the repository.\n",
        "operationId": "PutRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the record to update or replace.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "collection": {
                  "type": "string",
                  "description": "The name of the collection containing the record.",
                  "example": "posts"
                },
                "recordId": {
                  "type": "string",
                  "description": "Unique identifier of the record.",
                  "example": "record123"
                },
                "record": {
                  "type": "object",
                  "description": "The new content of the record.",
                  "example": {
                    "content": "Updated Content"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record successfully updated or replaced.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid record details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.repo.uploadBlob": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Upload Blob",
        "description": "Uploads a binary blob to a repo using multipart/form-data.",
        "operationId": "UploadBlob",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The binary blob to upload.",
            "x-ms-summary": "Blob File"
          },
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique repository ID where the blob will be stored.",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully uploaded the blob.",
            "schema": {
              "type": "object",
              "properties": {
                "blobId": {
                  "type": "string",
                  "description": "Unique identifier of the uploaded blob."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected failure during blob upload.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.activateAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Activate Account",
        "description": "Activate a user account after registration or reactivation.\n",
        "operationId": "ActivateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account activation request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "The activation token.",
                  "example": "activationToken123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account successfully activated.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful activation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid token or account status.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.checkAccountStatus": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Check Account Status",
        "description": "Check the status of an account - active, pending, or deactivated.\n",
        "operationId": "CheckAccountStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Unique identifier of the account.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account status.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current status of the account.",
                  "example": "active"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.confirmEmail": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Confirm Email",
        "description": "Confirm the account/email address during registration or update.\n",
        "operationId": "ConfirmEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the email confirmation request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address to confirm.",
                  "example": "user@example.com"
                },
                "token": {
                  "type": "string",
                  "description": "The confirmation token.",
                  "example": "emailToken123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email successfully confirmed.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful email confirmation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid email or token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.createAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Account",
        "description": "Register a new user account with the specified details.\n",
        "operationId": "CreateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address for the new account.",
                  "example": "user@example.com"
                },
                "handle": {
                  "type": "string",
                  "description": "The desired handle for the account.",
                  "example": "newhandle"
                },
                "password": {
                  "type": "string",
                  "description": "The password for the account.",
                  "example": "SecurePassword123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the new account.",
                  "example": "account123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.createAppPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create App Password",
        "description": "Generate a new app-specific password for a user account.\n",
        "operationId": "CreateAppPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the app password to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name or purpose of the app password.",
                  "example": "MyApp"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App password successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "appPassword": {
                  "type": "string",
                  "description": "The generated app password.",
                  "example": "securePassword123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.createInviteCode": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Invite Code",
        "description": "Generate a single-use invite code to allow new user registrations.\n",
        "operationId": "CreateInviteCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the invite code to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "useLimit": {
                  "type": "integer",
                  "description": "The number of times this invite code can be used.",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite code successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "inviteCode": {
                  "type": "string",
                  "description": "The generated invite code.",
                  "example": "INVITE123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid invite code details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.createInviteCodes": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Multiple Invite Codes",
        "description": "Generate multiple invite codes for user registrations.\n",
        "operationId": "CreateInviteCodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the invite codes to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "The number of invite codes to generate.",
                  "example": 5
                },
                "useLimit": {
                  "type": "integer",
                  "description": "The number of uses allowed per invite code.",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite codes successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "inviteCodes": {
                  "type": "array",
                  "description": "A list of generated invite codes.",
                  "items": {
                    "type": "string",
                    "example": "INVITE123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.deactivateAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Deactivate Account",
        "description": "Deactivate a user account.\n",
        "operationId": "DeactivateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account to deactivate.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the account.",
                  "example": "account123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account successfully deactivated.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful account deactivation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.deleteAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Delete Account",
        "description": "Permanently delete a user account and all associated data\n",
        "operationId": "ATProtoDeleteAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the account to delete.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the account.",
                  "example": "account123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful account deletion.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.deleteSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Delete Session",
        "description": "Log out the current session.\n",
        "operationId": "DeleteSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Session successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful session termination.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid session or token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.describeServer": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Describe Server",
        "description": "Retrieve information about the current server.\n",
        "operationId": "DescribeServer",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved server description.",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "The server version.",
                  "example": "1.0.0"
                },
                "features": {
                  "type": "array",
                  "description": "List of supported features.",
                  "items": {
                    "type": "string",
                    "example": "feature1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Failed to retrieve server details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.getAccountInviteCodes": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get Account Invite Codes",
        "description": "Retrieve all invite codes for an authenticated account.\n",
        "operationId": "GetAccountInviteCodes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "Unique identifier of the account.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account invite codes.",
            "schema": {
              "type": "object",
              "properties": {
                "inviteCodes": {
                  "type": "array",
                  "description": "List of invite codes associated with the account.",
                  "items": {
                    "type": "string",
                    "example": "INVITE123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid account identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.getServiceAuth": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get Service Auth",
        "description": "Retrieve auth tokens for interacting with the server services.\n",
        "operationId": "GetServiceAuth",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved service authentication details.",
            "schema": {
              "type": "object",
              "properties": {
                "serviceAuth": {
                  "type": "object",
                  "description": "Details of the service authentication.",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Authentication token for the service.",
                      "example": "token123"
                    },
                    "expiration": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Expiration time of the token.",
                      "example": "2024-12-31T23:59:59Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Failed to retrieve service authentication.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.getSession": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get Session",
        "description": "Retrieve information about the current session.\n",
        "operationId": "GetSession",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved session information.",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "Unique identifier of the authenticated user.",
                  "example": "user123"
                },
                "sessionStatus": {
                  "type": "string",
                  "description": "The current status of the session.",
                  "example": "active"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Failed to retrieve session details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.listAppPasswords": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "List App Passwords",
        "description": "Get a list of all app-specific passwords for an account.\n",
        "operationId": "ListAppPasswords",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved app passwords.",
            "schema": {
              "type": "object",
              "properties": {
                "appPasswords": {
                  "type": "array",
                  "description": "List of application-specific passwords.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "appName": {
                        "type": "string",
                        "description": "The name of the app associated with the password.",
                        "example": "MyApp"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The creation date of the app password.",
                        "example": "2024-11-19T12:00:00Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Failed to retrieve app passwords.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.requestAccountDelete": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request Account Deletion",
        "description": "Submit a request to delete the authenticated user account.\n",
        "operationId": "RequestAccountDelete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Account deletion request submitted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the deletion request was accepted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to process the account deletion request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.requestEmailConfirmation": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request Email Confirmation",
        "description": "Request an email confirmation for the current user\n",
        "operationId": "RequestEmailConfirmation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Email confirmation request successfully submitted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the confirmation request was accepted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to process the email confirmation request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.requestEmailUpdate": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request Email Update",
        "description": "Request an update to the user's email address.\n",
        "operationId": "RequestEmailUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the email update request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newEmail": {
                  "type": "string",
                  "description": "The new email address for the user.",
                  "example": "newuser@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email update request successfully submitted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the update request was accepted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to process the email update request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.requestPasswordReset": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request Password Reset",
        "description": "Request a password reset for the user's account.\n",
        "operationId": "RequestPasswordReset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the password reset request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address associated with the account.",
                  "example": "user@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset request successfully submitted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the reset request was accepted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to process the password reset request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.reserveSigningKey": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Reserve Signing Key",
        "description": "Reserve a signing key for the user account.\n",
        "operationId": "ReserveSigningKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the signing key reservation request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "keyId": {
                  "type": "string",
                  "description": "The identifier for the signing key.",
                  "example": "key123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signing key successfully reserved.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the signing key reservation was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to process the signing key reservation.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.resetPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Reset Password",
        "description": "Reset the user's password after confirming their identity with a token.\n",
        "operationId": "ResetPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the password reset request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "The password reset token.",
                  "example": "resetToken123"
                },
                "newPassword": {
                  "type": "string",
                  "description": "The new password for the account.",
                  "example": "SecurePassword123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password successfully reset.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the password reset was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid token or password.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.revokeAppPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Revoke App Password",
        "description": "Revoke an app-specific password for a user's account.\n",
        "operationId": "RevokeAppPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the app password to revoke.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "appPasswordId": {
                  "type": "string",
                  "description": "Unique identifier of the app password to revoke.",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App password successfully revoked.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the app password was revoked successfully.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid app password identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.updateEmail": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Update Email",
        "description": "Update an email address for a user's account after confirmation.\n",
        "operationId": "UpdateEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the email update request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "The confirmation token for the email update.",
                  "example": "emailUpdateToken123"
                },
                "newEmail": {
                  "type": "string",
                  "description": "The new email address for the account.",
                  "example": "newuser@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email successfully updated.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the email update was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid token or email.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.getBlob": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Blob",
        "description": "Retrieve a binary blob from a repo using multipart/form-data.",
        "operationId": "GetBlob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blobId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the blob to retrieve.",
            "x-ms-summary": "Blob ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the blob as a JSON response.",
            "schema": {
              "type": "object",
              "properties": {
                "blobId": {
                  "type": "string",
                  "description": "Unique identifier of the blob."
                },
                "data": {
                  "type": "string",
                  "format": "byte",
                  "description": "The binary content of the blob, base64-encoded."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid blob ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified blob does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected failure during blob retrieval.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.getBlocks": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Blocks",
        "description": "Retrieve multiple binary blocks from the specified repository.\n",
        "operationId": "SyncGetBlocks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockIds",
            "in": "query",
            "description": "Comma-separated list of block IDs to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Block IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved binary blocks.",
            "schema": {
              "type": "object",
              "properties": {
                "blocks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "blockId": {
                        "type": "string",
                        "description": "Unique identifier of the block."
                      },
                      "data": {
                        "type": "string",
                        "format": "byte",
                        "description": "The base64-encoded binary data of the block."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid block IDs or request parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - One or more specified blocks do not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - Unexpected failure during block retrieval.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.getLatestCommit": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Latest Commit",
        "description": "Retrieve the latest commit for the repository.\n",
        "operationId": "GetLatestCommit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "description": "Unique identifier of the repository.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Latest commit successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "commit": {
                  "type": "object",
                  "description": "Details of the latest commit.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the commit.",
                      "example": "commit123"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of the commit.",
                      "example": "2024-11-20T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid repository identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.getRecord": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Record",
        "description": "Retrieve a record from the repo by its unique identifier.\n",
        "operationId": "ATProtoGetRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recordId",
            "in": "query",
            "description": "Unique identifier of the record.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Record ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Record successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "record": {
                  "type": "object",
                  "description": "Details of the retrieved record.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the record.",
                      "example": "record123"
                    },
                    "content": {
                      "type": "string",
                      "description": "The content of the record.",
                      "example": "Record content here."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid record identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.getRepo": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Repository",
        "description": "Retrieve repository data as base64-encoded binary content.\n",
        "operationId": "SyncGetRepo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "description": "Unique identifier of the repository to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the repository data.",
            "schema": {
              "type": "object",
              "properties": {
                "repoId": {
                  "type": "string",
                  "description": "Unique identifier of the repository.",
                  "example": "repo123"
                },
                "data": {
                  "type": "string",
                  "format": "byte",
                  "description": "Base64-encoded repository data."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid repository ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.getRepoStatus": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Repository Status",
        "description": "Retrieve repo status, incl. synchronization info.\n",
        "operationId": "GetRepoStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "description": "Unique identifier of the repository.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Repository status successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "object",
                  "description": "Details of the repository's status.",
                  "properties": {
                    "syncStatus": {
                      "type": "string",
                      "description": "The synchronization status of the repository.",
                      "example": "synchronized"
                    },
                    "lastCommit": {
                      "type": "string",
                      "description": "The identifier of the last commit.",
                      "example": "commit123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid repository identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.listBlobs": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "List Blobs",
        "description": "Get a list of all blobs in the repository.\n",
        "operationId": "ListBlobs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "description": "Unique identifier of the repository.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Blobs successfully listed.",
            "schema": {
              "type": "object",
              "properties": {
                "blobs": {
                  "type": "array",
                  "description": "List of blobs in the repository.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the blob.",
                        "example": "blob123"
                      },
                      "size": {
                        "type": "integer",
                        "description": "The size of the blob in bytes.",
                        "example": 1024
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid repository identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.listRepos": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "List Repositories",
        "description": "Get a list of all repositories available in the system.\n",
        "operationId": "ListRepos",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved repositories list.",
            "schema": {
              "type": "object",
              "properties": {
                "repositories": {
                  "type": "array",
                  "description": "List of repositories.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the repository.",
                        "example": "repo123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the repository.",
                        "example": "MyRepository"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve repositories list.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.notifyOfUpdate": {
      "post": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Notify of Update",
        "description": "Notify the system about updates to a repo to trigger sync.\n",
        "operationId": "NotifyOfUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the update notification.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "repoId": {
                  "type": "string",
                  "description": "Unique identifier of the repository.",
                  "example": "repo123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update notification successfully submitted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the update notification was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid update details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.sync.requestCrawl": {
      "post": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Request Crawl",
        "description": "Submit a request to crawl a repository for updates.\n",
        "operationId": "RequestCrawl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the crawl request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "repoId": {
                  "type": "string",
                  "description": "Unique identifier of the repository to crawl.",
                  "example": "repo123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Crawl request successfully submitted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the crawl request was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid crawl request details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.communication.createTemplate": {
      "post": {
        "tags": [
          "tools.ozone.communication"
        ],
        "summary": "Create Template",
        "description": "Create a new communication template for notifications or messages.\n",
        "operationId": "CreateTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the template to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the template.",
                  "example": "WelcomeTemplate"
                },
                "content": {
                  "type": "string",
                  "description": "The content of the template.",
                  "example": "Welcome to the service!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template successfully created.",
            "schema": {
              "type": "object",
              "properties": {
                "templateId": {
                  "type": "string",
                  "description": "Unique identifier of the created template.",
                  "example": "template123"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to create template.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.communication.deleteTemplate": {
      "post": {
        "tags": [
          "tools.ozone.communication"
        ],
        "summary": "Delete Template",
        "description": "Delete an existing communication template.\n",
        "operationId": "DeleteTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the template to delete.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "templateId": {
                  "type": "string",
                  "description": "Unique identifier of the template.",
                  "example": "template123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the template was deleted successfully.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to delete template.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.communication.listTemplates": {
      "get": {
        "tags": [
          "tools.ozone.communication"
        ],
        "summary": "List Templates",
        "description": "Get a list of all communication templates.\n",
        "operationId": "ListTemplates",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of templates.",
            "schema": {
              "type": "object",
              "properties": {
                "templates": {
                  "type": "array",
                  "description": "List of communication templates.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the template.",
                        "example": "template123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the template.",
                        "example": "WelcomeTemplate"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the template.",
                        "example": "Welcome to the service!"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve templates.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.communication.updateTemplate": {
      "post": {
        "tags": [
          "tools.ozone.communication"
        ],
        "summary": "Update Template",
        "description": "Update an existing communication template.\n",
        "operationId": "UpdateTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the template to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "templateId": {
                  "type": "string",
                  "description": "Unique identifier of the template.",
                  "example": "template123"
                },
                "name": {
                  "type": "string",
                  "description": "The new name for the template.",
                  "example": "UpdatedTemplate"
                },
                "content": {
                  "type": "string",
                  "description": "The new content for the template.",
                  "example": "Updated content for the template."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template successfully updated.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the template was updated successfully.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to update template.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.emitEvent": {
      "post": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Emit Moderation Event",
        "description": "Emit a moderation event for tracking or logging purposes.\n",
        "operationId": "EmitEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the moderation event.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventType": {
                  "type": "string",
                  "description": "The type of moderation event.",
                  "example": "userBan"
                },
                "details": {
                  "type": "string",
                  "description": "Additional details about the event.",
                  "example": "User banned for violating terms of service."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moderation event successfully emitted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the event was emitted successfully.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to emit moderation event.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.getEvent": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Event",
        "description": "Retrieve details of a specific moderation event.\n",
        "operationId": "GetEvent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "description": "Unique identifier of the moderation event.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moderation event.",
            "schema": {
              "type": "object",
              "properties": {
                "event": {
                  "type": "object",
                  "description": "Details of the moderation event.",
                  "properties": {
                    "eventType": {
                      "type": "string",
                      "description": "The type of moderation event.",
                      "example": "userBan"
                    },
                    "details": {
                      "type": "string",
                      "description": "Additional details about the event.",
                      "example": "User banned for violating terms of service."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid event identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.getRecord": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Record",
        "description": "Retrieve a moderation record for an entity or user.\n",
        "operationId": "OzoneGetRecord",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recordId",
            "in": "query",
            "description": "Unique identifier of the moderation record.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Record ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moderation record.",
            "schema": {
              "type": "object",
              "properties": {
                "record": {
                  "type": "object",
                  "description": "Details of the moderation record.",
                  "properties": {
                    "entityId": {
                      "type": "string",
                      "description": "The ID of the entity associated with the record.",
                      "example": "entity123"
                    },
                    "actions": {
                      "type": "array",
                      "description": "List of actions associated with the moderation record.",
                      "items": {
                        "type": "string",
                        "example": "userBan"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid record identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.getRecords": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Records",
        "description": "Retrieve moderation records based on provided filters.\n",
        "operationId": "ModerationGetRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Filter criteria for retrieving moderation records.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filter Query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moderation records.",
            "schema": {
              "type": "object",
              "properties": {
                "records": {
                  "type": "array",
                  "description": "List of moderation records.",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid query parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.getRepo": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Repository",
        "description": "Retrieve details of a specific moderation repository.\n",
        "operationId": "OzoneGetRepo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "description": "Unique identifier of the repository.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moderation repository.",
            "schema": {
              "type": "object",
              "properties": {
                "repository": {
                  "type": "object",
                  "description": "Details of the moderation repository.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the repository.",
                      "example": "repo123"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the repository.",
                      "example": "active"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid repository identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.getRepos": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Repositories",
        "description": "Get a list of all moderation repositories.\n",
        "operationId": "GetRepos",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moderation repositories.",
            "schema": {
              "type": "object",
              "properties": {
                "repositories": {
                  "type": "array",
                  "description": "List of moderation repositories.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the repository.",
                        "example": "repo123"
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the repository.",
                        "example": "active"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve repositories.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.queryEvents": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Query Moderation Events",
        "description": "Retrieve moderation events based on specified criteria.\n",
        "operationId": "ModerationQueryEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Filter criteria for querying moderation events.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Filter Query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moderation events.",
            "schema": {
              "type": "object",
              "properties": {
                "events": {
                  "type": "array",
                  "description": "List of moderation events.",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid query parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.queryStatuses": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Query Moderation Statuses",
        "description": "Retrieve the statuses of moderated entities.\n",
        "operationId": "QueryStatuses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query string for filtering moderation statuses.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Status Query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moderation statuses.",
            "schema": {
              "type": "object",
              "properties": {
                "statuses": {
                  "type": "array",
                  "description": "List of moderation statuses.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "entityId": {
                        "type": "string",
                        "description": "Unique identifier of the moderated entity.",
                        "example": "entity123"
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the entity.",
                        "example": "banned"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid query parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.moderation.searchRepos": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Search Repositories",
        "description": "Search moderation repos based on query params.\n",
        "operationId": "SearchRepos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query string for searching repositories.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Repository Search Query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved matching repositories.",
            "schema": {
              "type": "object",
              "properties": {
                "repositories": {
                  "type": "array",
                  "description": "List of matching moderation repositories.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier of the repository.",
                        "example": "repo123"
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the repository.",
                        "example": "active"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid query parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.server.getConfig": {
      "get": {
        "tags": [
          "tools.ozone.server"
        ],
        "summary": "Get Server Configuration",
        "description": "Retrieve the current server config details.\n",
        "operationId": "GetConfig",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved server configuration.",
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "object",
                  "description": "Details of the server configuration.",
                  "properties": {
                    "version": {
                      "type": "string",
                      "description": "The server version.",
                      "example": "1.0.0"
                    },
                    "environment": {
                      "type": "string",
                      "description": "The server environment (e.g., production, staging).",
                      "example": "production"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve server configuration.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.set.addValues": {
      "post": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Add Values to Set",
        "description": "Add values to an existing set in the system.\n",
        "operationId": "AddValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the values to add.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "setId": {
                  "type": "string",
                  "description": "Unique identifier of the set.",
                  "example": "set123"
                },
                "values": {
                  "type": "array",
                  "description": "Values to add to the set.",
                  "items": {
                    "type": "string",
                    "example": "value1"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Values successfully added to the set.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the operation was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to add values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.set.deleteSet": {
      "post": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Delete Set",
        "description": "Delete an existing set by its unique identifier.\n",
        "operationId": "DeleteSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the set to delete.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "setId": {
                  "type": "string",
                  "description": "Unique identifier of the set.",
                  "example": "set123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the operation was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to delete the set.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.set.deleteValues": {
      "post": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Delete Values from Set",
        "description": "Remove specific values from a set by its unique identifier.\n",
        "operationId": "DeleteValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the values to delete.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "setId": {
                  "type": "string",
                  "description": "Unique identifier of the set.",
                  "example": "set123"
                },
                "values": {
                  "type": "array",
                  "description": "Values to remove from the set.",
                  "items": {
                    "type": "string",
                    "example": "value1"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Values successfully removed from the set.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the operation was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to remove values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.set.getValues": {
      "get": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Get Values from Set",
        "description": "Retrieve the values stored in a specific set.\n",
        "operationId": "GetValues",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "setId",
            "in": "query",
            "description": "Unique identifier of the set.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Set ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved set values.",
            "schema": {
              "type": "object",
              "properties": {
                "values": {
                  "type": "array",
                  "description": "List of values in the set.",
                  "items": {
                    "type": "string",
                    "example": "value1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid set ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.set.querySets": {
      "get": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Query Sets",
        "description": "Get a list of sets matching query criteria.\n",
        "operationId": "QuerySets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Query criteria for filtering sets.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Set Query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved matching sets.",
            "schema": {
              "type": "object",
              "properties": {
                "sets": {
                  "type": "array",
                  "description": "List of matching sets.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "setId": {
                        "type": "string",
                        "description": "Unique identifier of the set.",
                        "example": "set123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the set.",
                        "example": "MySet"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid query parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.set.upsertSet": {
      "post": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Upsert Set",
        "description": "Create or update a set with specified values.\n",
        "operationId": "UpsertSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the set to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "setId": {
                  "type": "string",
                  "description": "Unique identifier of the set.",
                  "example": "set123"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the set.",
                  "example": "MySet"
                },
                "values": {
                  "type": "array",
                  "description": "The values to include in the set.",
                  "items": {
                    "type": "string",
                    "example": "value1"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Set successfully created or updated.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the operation was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to upsert set.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.signature.findCorrelation": {
      "get": {
        "tags": [
          "tools.ozone.signature"
        ],
        "summary": "Find Correlation",
        "description": "Search for correlations btw. entities based on their signatures.\n",
        "operationId": "FindCorrelation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "signature",
            "in": "query",
            "description": "The signature to search for correlations.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Signature"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved correlations.",
            "schema": {
              "type": "object",
              "properties": {
                "correlations": {
                  "type": "array",
                  "description": "List of correlations found.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "entityId": {
                        "type": "string",
                        "description": "The ID of the correlated entity.",
                        "example": "entity123"
                      },
                      "similarity": {
                        "type": "number",
                        "description": "The similarity score.",
                        "example": 0.85
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid signature.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.signature.findRelatedAccounts": {
      "get": {
        "tags": [
          "tools.ozone.signature"
        ],
        "summary": "Find Related Accounts",
        "description": "Retrieve accounts related to the specified signature.\n",
        "operationId": "FindRelatedAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "signature",
            "in": "query",
            "description": "The signature to search for related accounts.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Signature"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved related accounts.",
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "description": "List of related accounts.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "description": "Unique identifier of the related account.",
                        "example": "account123"
                      },
                      "relationship": {
                        "type": "string",
                        "description": "The type of relationship.",
                        "example": "associated"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid signature.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.signature.searchAccounts": {
      "get": {
        "tags": [
          "tools.ozone.signature"
        ],
        "summary": "Search Accounts by Signature",
        "description": "Search for accounts associated with a specific signature.\n",
        "operationId": "OzoneSearchAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The signature or criteria to search for accounts.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved matching accounts.",
            "schema": {
              "type": "object",
              "properties": {
                "accounts": {
                  "type": "array",
                  "description": "List of accounts matching the query.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "description": "Unique identifier of the account.",
                        "example": "account123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the account.",
                        "example": "John Doe"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid search query.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.team.addMember": {
      "post": {
        "tags": [
          "tools.ozone.team"
        ],
        "summary": "Add Team Member",
        "description": "Add a new member to a team.\n",
        "operationId": "AddMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the member to add.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "teamId": {
                  "type": "string",
                  "description": "Unique identifier of the team.",
                  "example": "team123"
                },
                "memberId": {
                  "type": "string",
                  "description": "Unique identifier of the member.",
                  "example": "member456"
                },
                "role": {
                  "type": "string",
                  "description": "The role of the new member.",
                  "example": "Developer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member successfully added to the team.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the operation was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to add member.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.team.deleteMember": {
      "post": {
        "tags": [
          "tools.ozone.team"
        ],
        "summary": "Delete Team Member",
        "description": "Remove a member from a team.\n",
        "operationId": "DeleteMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the member to remove.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "teamId": {
                  "type": "string",
                  "description": "Unique identifier of the team.",
                  "example": "team123"
                },
                "memberId": {
                  "type": "string",
                  "description": "Unique identifier of the member.",
                  "example": "member456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member successfully removed from the team.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the operation was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to remove member.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.team.listMembers": {
      "get": {
        "tags": [
          "tools.ozone.team"
        ],
        "summary": "List Team Members",
        "description": "Get a list of members in a specific team.\n",
        "operationId": "ListMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "description": "Unique identifier of the team.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Team ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved team members.",
            "schema": {
              "type": "object",
              "properties": {
                "members": {
                  "type": "array",
                  "description": "List of team members.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "memberId": {
                        "type": "string",
                        "description": "Unique identifier of the member.",
                        "example": "member456"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the team member.",
                        "example": "Jane Doe"
                      },
                      "role": {
                        "type": "string",
                        "description": "The role of the team member.",
                        "example": "Developer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid team ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/tools.ozone.team.updateMember": {
      "post": {
        "tags": [
          "tools.ozone.team"
        ],
        "summary": "Update Team Member",
        "description": "Update details of a team member.\n",
        "operationId": "UpdateMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the member to update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "teamId": {
                  "type": "string",
                  "description": "Unique identifier of the team.",
                  "example": "team123"
                },
                "memberId": {
                  "type": "string",
                  "description": "Unique identifier of the member.",
                  "example": "member456"
                },
                "role": {
                  "type": "string",
                  "description": "The updated role of the team member.",
                  "example": "Team Lead"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member details successfully updated.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates the operation was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to update member details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Preferences": {
      "type": "object",
      "description": "An object containing preferences attached to the current account.",
      "properties": {
        "theme": {
          "type": "string",
          "description": "The user's theme preference (e.g., 'dark' or 'light').",
          "example": "dark"
        },
        "notifications": {
          "type": "object",
          "description": "The user's notification preferences.",
          "properties": {
            "email": {
              "type": "boolean",
              "description": "Whether email notifications are enabled.",
              "example": true
            },
            "push": {
              "type": "boolean",
              "description": "Whether push notifications are enabled.",
              "example": false
            }
          }
        },
        "language": {
          "type": "string",
          "description": "The user's preferred language code (e.g., 'en', 'fr').",
          "example": "en"
        },
        "privacySettings": {
          "type": "object",
          "description": "The user's privacy-related preferences.",
          "properties": {
            "profileVisibility": {
              "type": "string",
              "description": "The visibility of the user's profile (e.g., 'public', 'private').",
              "example": "public"
            },
            "messagePermissions": {
              "type": "string",
              "description": "Who can send messages to the user (e.g., 'anyone', 'contacts').",
              "example": "contacts"
            }
          }
        }
      }
    },
    "ProfileView": {
      "type": "object",
      "description": "A minimal view of an actor's profile, used for search and typeahead results.",
      "properties": {
        "did": {
          "type": "string",
          "description": "Decentralized Identifier (DID) of the actor.",
          "example": "did:plc:abcd1234"
        },
        "handle": {
          "type": "string",
          "description": "Handle of the actor.",
          "example": "user.handle.bsky.app"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the actor.",
          "example": "John Doe"
        },
        "avatar": {
          "type": "string",
          "description": "URL of the actor's avatar image.",
          "example": "https://example.com/avatar.jpg"
        },
        "description": {
          "type": "string",
          "description": "A brief description or bio for the actor.",
          "example": "Just another Bluesky user."
        }
      }
    },
    "ProfileViewDetailed": {
      "type": "object",
      "description": "Detailed profile view of an actor.",
      "properties": {
        "did": {
          "type": "string",
          "description": "Decentralized Identifier (DID) of the actor.",
          "example": "did:plc:abcd1234"
        },
        "handle": {
          "type": "string",
          "description": "Handle of the actor.",
          "example": "user.handle.bsky.app"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the actor.",
          "example": "John Doe"
        },
        "bio": {
          "type": "string",
          "description": "The biography or about section of the actor.",
          "example": "Just another Bluesky enthusiast."
        },
        "avatar": {
          "type": "string",
          "description": "URL of the actor's avatar image.",
          "example": "https://example.com/avatar.jpg"
        },
        "banner": {
          "type": "string",
          "description": "URL of the actor's banner image.",
          "example": "https://example.com/banner.jpg"
        },
        "followersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of followers the actor has.",
          "example": 123
        },
        "followingCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of accounts the actor is following.",
          "example": 456
        },
        "postsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of posts the actor has made.",
          "example": 789
        },
        "isFollowing": {
          "type": "boolean",
          "description": "Whether the authenticated user is following the actor.",
          "example": true
        },
        "isFollowedBy": {
          "type": "boolean",
          "description": "Whether the authenticated user is followed by the actor.",
          "example": false
        }
      }
    },
    "Label": {
      "type": "object",
      "description": "Metadata tag or label applied to a resource (e.g., actor, post, or record) within the Bluesky network.",
      "required": [
        "src",
        "uri",
        "val",
        "cts"
      ],
      "properties": {
        "src": {
          "type": "string",
          "format": "uri",
          "description": "URI of the source that created this label (e.g., actor DID or service identifier)."
        },
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "URI of the resource to which the label applies (e.g., actor profile, post, or record)."
        },
        "val": {
          "type": "string",
          "maxLength": 128,
          "description": "A short string representing the label's value or type."
        },
        "neg": {
          "type": "boolean",
          "description": "If true, this is a negation label that invalidates a previous label."
        },
        "cts": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the label was created."
        }
      }
    },
    "Post": {
      "type": "object",
      "description": "Details of a post.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI of the post.",
          "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
        },
        "author": {
          "$ref": "#/definitions/ProfileView"
        },
        "content": {
          "type": "string",
          "description": "The content of the post.",
          "example": "This is a sample post content."
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Standard error response for failed requests.",
      "required": [
        "error",
        "message"
      ],
      "properties": {
        "error": {
          "type": "string",
          "enum": [
            "InvalidRequest",
            "ExpiredToken",
            "InvalidToken",
            "Unauthorized",
            "NotFound",
            "InternalServerError",
            "AuthMissing"
          ],
          "description": "Type of error encountered during the request."
        },
        "message": {
          "type": "string",
          "description": "Detailed error message."
        },
        "code": {
          "type": "integer",
          "description": "Optional error code, such as an HTTP status code."
        },
        "details": {
          "type": "string",
          "description": "Additional information about the error for debugging purposes."
        }
      }
    }
  }
}