{
  "swagger": "2.0",
  "info": {
    "title": "Bluesky Social",
    "description": "Specification for the Bluesky Social endpoints",
    "contact": {
      "name": "Dan Romano",
      "email": "dan.romano@swolcat.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.0"
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://docs.bsky.app/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://example.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Social Media"
    }
  ],
  "host": "bsky.social",
  "basePath": "/xrpc",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/xrpc/app.bsky.actor.getPreferences": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Preferences for Current Account",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nGet private preferences attached to the current account. Expected use is \nsynchronization between multiple devices and import/export during account migration. Requires authentication.\n",
        "operationId": "GetPreferences",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved preferences for the current account.",
            "schema": {
              "type": "object",
              "required": [
                "preferences"
              ],
              "properties": {
                "preferences": {
                  "$ref": "#/definitions/Preferences"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.getProfile": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Detailed Profile of an Actor",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nGet a detailed profile view of an actor. This endpoint does not require authentication, \nbut the metadata returned will depend on whether the request is authenticated.\n",
        "operationId": "GetProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the account to fetch the profile of.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the actor's detailed profile.",
            "schema": {
              "$ref": "#/definitions/ProfileViewDetailed"
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.getProfiles": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Detailed Profiles of Multiple Actors",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nFetches detailed profile views for multiple actors. This endpoint supports \nbatch retrieval of profiles based on identifiers.\n",
        "operationId": "GetProfiles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actors",
            "in": "query",
            "description": "Comma-separated list of handles or DIDs of the accounts to fetch profiles for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifiers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved detailed profiles of the specified actors.",
            "schema": {
              "type": "object",
              "required": [
                "profiles"
              ],
              "properties": {
                "profiles": {
                  "type": "array",
                  "description": "An array of detailed profile views for the specified actors.",
                  "items": {
                    "$ref": "#/definitions/ProfileViewDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.getSuggestions": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Get Suggestions for Actors",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nFetches suggested profiles for the authenticated user or general suggestions \nwhen unauthenticated. Suggestions are based on mutual follows or other platform-specific logic.\n",
        "operationId": "GetSuggestions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of suggestions to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved suggested profiles.",
            "schema": {
              "type": "object",
              "required": [
                "suggestions"
              ],
              "properties": {
                "suggestions": {
                  "type": "array",
                  "description": "An array of suggested profiles for the user.",
                  "items": {
                    "$ref": "#/definitions/ProfileViewDetailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.putPreferences": {
      "post": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Update Preferences for Current Account",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nUpdate preferences for the current account. Requires authentication.\n",
        "operationId": "PutPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the preferences to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Preferences"
            },
            "x-ms-summary": "Preferences Payload"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated preferences for the current account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the preferences update was successful.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.searchActors": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Search for Actors",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nSearch for actors (users) on the platform based on a query string. \nAuthentication can improve search relevance but is not required.\n",
        "operationId": "SearchActors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "The search term used to find actors.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Term"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of actors matching the search term.",
            "schema": {
              "type": "object",
              "properties": {
                "actors": {
                  "type": "array",
                  "description": "An array of actors matching the search criteria.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.actor.searchActorsTypeahead": {
      "get": {
        "tags": [
          "app.bsky.actor"
        ],
        "summary": "Search Actors for Typeahead",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nPerform a lightweight search for actors to support typeahead functionality. \nReturns minimal actor details for quick lookups.\n",
        "operationId": "SearchActorsTypeahead",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "The search term used for typeahead results.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Term"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of results to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved typeahead suggestions for actors.",
            "schema": {
              "type": "object",
              "properties": {
                "actors": {
                  "type": "array",
                  "description": "An array of minimal actor details matching the typeahead search.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.describeFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Describe Feed Generator",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nProvides metadata about the feed generator, including supported feed formats \nand other configuration details. No authentication is required.\n",
        "operationId": "DescribeFeedGenerator",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved metadata about the feed generator.",
            "schema": {
              "type": "object",
              "properties": {
                "feedFormats": {
                  "type": "array",
                  "description": "An array of supported feed formats.",
                  "items": {
                    "type": "string",
                    "example": "application/json"
                  }
                },
                "links": {
                  "type": "object",
                  "description": "Relevant links or metadata for the feed generator.",
                  "properties": {
                    "privacyPolicy": {
                      "type": "string",
                      "description": "URL of the feed generator's privacy policy.",
                      "example": "https://example.com/privacy"
                    },
                    "termsOfService": {
                      "type": "string",
                      "description": "URL of the feed generator's terms of service.",
                      "example": "https://example.com/terms"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getActorFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feeds for an Actor",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nFetches a list of feeds created by a specific actor.\n",
        "operationId": "GetActorFeeds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor whose feeds are being retrieved.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of feeds to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the actor's feeds.",
            "schema": {
              "type": "object",
              "properties": {
                "feeds": {
                  "type": "array",
                  "description": "An array of feed views created by the actor.",
                  "items": {
                    "type": "object",
                    "description": "Details of a feed.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the feed.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the feed.",
                        "example": "My Tech News"
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the feed's avatar image.",
                        "example": "https://example.com/feed-avatar.jpg"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getActorLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Liked Posts by an Actor",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nFetches posts that have been liked by a specific actor.\n",
        "operationId": "GetActorLikes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor whose liked posts are being retrieved.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of liked posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the liked posts by the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "likes": {
                  "type": "array",
                  "description": "An array of posts liked by the actor.",
                  "items": {
                    "type": "object",
                    "description": "Details of a liked post.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the liked post.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "author": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the liked post.",
                        "example": "This is a sample post content."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getAuthorFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Posts by an Author",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nFetches posts created by a specific author.\n",
        "operationId": "GetAuthorFeed",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "description": "Handle or DID of the author whose posts are being retrieved.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Author Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the posts by the author.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "description": "An array of posts created by the author.",
                  "items": {
                    "type": "object",
                    "description": "Details of a post.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the post.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "author": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the post.",
                        "example": "This is a sample post content."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feed for a Specific URI",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the contents of a specific feed based on its URI.\n",
        "operationId": "GetFeed",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "description": "The URI of the feed to retrieve.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Feed URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of items to retrieve in the feed.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through the feed.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the feed contents.",
            "schema": {
              "type": "object",
              "properties": {
                "feedItems": {
                  "type": "array",
                  "description": "An array of feed items.",
                  "items": {
                    "type": "object",
                    "description": "Details of a feed item.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the feed item.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the feed item.",
                        "example": "This is a sample feed item."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getFeedGenerator": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Metadata for a Feed Generator",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve metadata for a specific feed generator.\n",
        "operationId": "GetFeedGenerator",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generator",
            "in": "query",
            "description": "The URI of the feed generator to retrieve metadata for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Feed Generator URI"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved metadata for the feed generator.",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "description": "Metadata about the feed generator.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the feed generator.",
                      "example": "Tech News Feeds"
                    },
                    "avatar": {
                      "type": "string",
                      "description": "URL of the feed generator's avatar image.",
                      "example": "https://example.com/generator-avatar.jpg"
                    },
                    "description": {
                      "type": "string",
                      "description": "A brief description of the feed generator.",
                      "example": "A generator for curated tech news feeds."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getFeedGenerators": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Metadata for Multiple Feed Generators",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve metadata for multiple feed generators based on their URIs.\n",
        "operationId": "GetFeedGenerators",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "generators",
            "in": "query",
            "description": "Comma-separated list of feed generator URIs to retrieve metadata for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Feed Generator URIs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved metadata for multiple feed generators.",
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "array",
                  "description": "An array of metadata for the feed generators.",
                  "items": {
                    "type": "object",
                    "description": "Metadata for a single feed generator.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the feed generator.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/generator123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the feed generator.",
                        "example": "Tech News Feeds"
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the feed generator's avatar image.",
                        "example": "https://example.com/generator-avatar.jpg"
                      },
                      "description": {
                        "type": "string",
                        "description": "A brief description of the feed generator.",
                        "example": "A generator for curated tech news feeds."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getFeedSkeleton": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Skeleton Feed",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieves a skeleton feed, typically used for pre-rendering or optimization.\n",
        "operationId": "GetFeedSkeleton",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "feed",
            "in": "query",
            "description": "The URI of the feed to retrieve the skeleton for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Feed URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of items in the skeleton.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating the skeleton.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the skeleton feed.",
            "schema": {
              "type": "object",
              "properties": {
                "skeleton": {
                  "type": "array",
                  "description": "An array of skeleton feed items.",
                  "items": {
                    "type": "object",
                    "description": "Details of a skeleton feed item.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the feed item.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/item123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getLikes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Likes for a Post",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieves a list of actors who have liked a specific post.\n",
        "operationId": "GetLikes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "The URI of the post to retrieve likes for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Post URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of likes to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved likes for the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "likes": {
                  "type": "array",
                  "description": "An array of actors who liked the post.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getListFeed": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Feed for a List",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the feed for a specific list of actors.\n",
        "operationId": "GetListFeed",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "description": "The URI of the list to retrieve the feed for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "List URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through the feed.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list feed.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "description": "An array of posts in the list feed.",
                  "items": {
                    "type": "object",
                    "description": "Details of a post.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the post.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "author": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the post.",
                        "example": "This is a sample post content."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Posts by URIs",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve posts specified by their URIs.\n",
        "operationId": "GetPosts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uris",
            "in": "query",
            "description": "Comma-separated list of post URIs to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Post URIs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the posts.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "description": "An array of posts corresponding to the provided URIs.",
                  "items": {
                    "type": "object",
                    "description": "Details of a post.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the post.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "author": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the post.",
                        "example": "This is a sample post content."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getPostThread": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Thread for a Post",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the thread for a specific post, including replies and related posts.\n",
        "operationId": "GetPostThread",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "The URI of the post to retrieve the thread for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Post URI"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the thread for the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "thread": {
                  "type": "object",
                  "description": "The root post of the thread with its replies.",
                  "properties": {
                    "root": {
                      "$ref": "#/definitions/Post"
                    },
                    "replies": {
                      "type": "array",
                      "description": "An array of replies to the root post.",
                      "items": {
                        "$ref": "#/definitions/Post"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getQuotes": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Posts Quoting a Specific Post",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve posts that quote a specific post.\n",
        "operationId": "GetQuotes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "The URI of the post to retrieve quotes for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Post URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of quotes to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved posts quoting the specified post.",
            "schema": {
              "type": "object",
              "properties": {
                "quotes": {
                  "type": "array",
                  "description": "An array of posts that quote the specified post.",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getRepostedBy": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Actors Who Reposted a Specific Post",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of actors who have reposted a specific post.\n",
        "operationId": "GetRepostedBy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uri",
            "in": "query",
            "description": "The URI of the post to retrieve reposts for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Post URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of reposts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved actors who reposted the post.",
            "schema": {
              "type": "object",
              "properties": {
                "repostedBy": {
                  "type": "array",
                  "description": "An array of actors who reposted the specified post.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getSuggestedFeeds": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Suggested Feeds",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of suggested feeds for the authenticated user or general suggestions.\n",
        "operationId": "GetSuggestedFeeds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of suggested feeds to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved suggested feeds.",
            "schema": {
              "type": "object",
              "properties": {
                "suggestedFeeds": {
                  "type": "array",
                  "description": "An array of suggested feeds.",
                  "items": {
                    "type": "object",
                    "description": "Details of a suggested feed.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the feed.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/generator123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the feed.",
                        "example": "Tech News Feeds"
                      },
                      "avatar": {
                        "type": "string",
                        "description": "URL of the feed's avatar image.",
                        "example": "https://example.com/feed-avatar.jpg"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.getTimeline": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Get Timeline",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the authenticated user's timeline, including posts from followed actors.\n",
        "operationId": "GetTimeline",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "algorithm",
            "in": "query",
            "description": "The algorithm used to generate the timeline (e.g., reverse chronological).",
            "required": false,
            "type": "string",
            "x-ms-summary": "Timeline Algorithm"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the timeline.",
            "schema": {
              "type": "object",
              "properties": {
                "timeline": {
                  "type": "array",
                  "description": "An array of posts in the user's timeline.",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.searchPosts": {
      "get": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Search Posts",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nSearch posts based on a query string.\n",
        "operationId": "SearchPosts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "term",
            "in": "query",
            "description": "The search term used to find posts.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Search Term"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of posts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved posts matching the search term.",
            "schema": {
              "type": "object",
              "properties": {
                "posts": {
                  "type": "array",
                  "description": "An array of posts matching the search criteria.",
                  "items": {
                    "$ref": "#/definitions/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.feed.sendInteractions": {
      "post": {
        "tags": [
          "app.bsky.feed"
        ],
        "summary": "Send Interactions",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nSend interactions like likes, reposts, or other custom interactions for a post.\n",
        "operationId": "SendInteractions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the interactions to be sent.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "interactions": {
                  "type": "array",
                  "description": "An array of interactions to send.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of interaction (e.g., 'like', 'repost').",
                        "example": "like"
                      },
                      "uri": {
                        "type": "string",
                        "description": "The URI of the post the interaction is for.",
                        "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the interaction was created.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent interactions.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the interactions were successfully sent.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getActorStarterPacks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Starter Packs for Actors",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve recommended starter packs of actors for a new user to follow.\n",
        "operationId": "GetActorStarterPacks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of starter packs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved actor starter packs.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "description": "An array of actor starter packs.",
                  "items": {
                    "type": "object",
                    "description": "Details of a starter pack.",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the starter pack.",
                        "example": "Tech Enthusiasts"
                      },
                      "actors": {
                        "type": "array",
                        "description": "An array of actor profiles included in the pack.",
                        "items": {
                          "$ref": "#/definitions/ProfileView"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Blocked Accounts",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of accounts blocked by the authenticated user.\n",
        "operationId": "GetBlocks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of blocked accounts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved blocked accounts.",
            "schema": {
              "type": "object",
              "properties": {
                "blocks": {
                  "type": "array",
                  "description": "An array of profiles representing blocked accounts.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Followers",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of followers for a specific actor.\n",
        "operationId": "GetFollowers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to retrieve followers for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of followers to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved followers for the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "followers": {
                  "type": "array",
                  "description": "An array of profiles representing followers.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getFollows": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Follows",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of accounts followed by a specific actor.\n",
        "operationId": "GetFollows",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to retrieve follows for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of follows to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved accounts followed by the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "follows": {
                  "type": "array",
                  "description": "An array of profiles representing accounts followed by the actor.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getKnownFollowers": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Known Followers",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve known followers of a specific actor that are mutually followed by the authenticated user.\n",
        "operationId": "GetKnownFollowers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to retrieve known followers for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of known followers to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved known followers.",
            "schema": {
              "type": "object",
              "properties": {
                "followers": {
                  "type": "array",
                  "description": "An array of profiles representing known followers.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getList": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get List Details",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the details of a specific list.\n",
        "operationId": "GetList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "description": "The URI of the list to retrieve.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "List URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of list items to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list details.",
            "schema": {
              "type": "object",
              "properties": {
                "listItems": {
                  "type": "array",
                  "description": "An array of profiles or items in the list.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getListBlocks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get List Blocks",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of blocked accounts within a specific list.\n",
        "operationId": "GetListBlocks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "description": "The URI of the list to retrieve blocked accounts for.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "List URI"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of blocked accounts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved blocked accounts within the list.",
            "schema": {
              "type": "object",
              "properties": {
                "blockedAccounts": {
                  "type": "array",
                  "description": "An array of profiles representing blocked accounts within the list.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getListMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get List Mutes",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve muted lists for the authenticated user.\n",
        "operationId": "GetListMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of muted lists to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved muted lists.",
            "schema": {
              "type": "object",
              "properties": {
                "mutedLists": {
                  "type": "array",
                  "description": "An array of muted list details.",
                  "items": {
                    "type": "object",
                    "description": "Details of a muted list.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the muted list.",
                        "example": "at://did:plc:abcd1234/app.bsky.graph/list123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the muted list.",
                        "example": "Blocked Users"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getLists": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Lists for an Actor",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve all lists associated with a specific actor.\n",
        "operationId": "GetLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to retrieve lists for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of lists to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved lists for the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "lists": {
                  "type": "array",
                  "description": "An array of lists associated with the actor.",
                  "items": {
                    "type": "object",
                    "description": "Details of a list.",
                    "properties": {
                      "uri": {
                        "type": "string",
                        "description": "The URI of the list.",
                        "example": "at://did:plc:abcd1234/app.bsky.graph/list123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the list.",
                        "example": "My Favorites"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getMutes": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Muted Accounts",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of accounts muted by the authenticated user.\n",
        "operationId": "GetMutes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of muted accounts to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved muted accounts.",
            "schema": {
              "type": "object",
              "properties": {
                "mutedAccounts": {
                  "type": "array",
                  "description": "An array of profiles representing muted accounts.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getRelationships": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Relationships Between Accounts",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve relationships between accounts for the authenticated user.\n",
        "operationId": "GetRelationships",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actors",
            "in": "query",
            "description": "Comma-separated list of actor DIDs or handles to retrieve relationships for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifiers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account relationships.",
            "schema": {
              "type": "object",
              "properties": {
                "relationships": {
                  "type": "array",
                  "description": "An array of relationship data between the authenticated user and specified actors.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "actor": {
                        "$ref": "#/definitions/ProfileView"
                      },
                      "relationship": {
                        "type": "string",
                        "description": "The type of relationship (e.g., 'following', 'followed_by', 'muted').",
                        "example": "following"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getStarterPack": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Starter Pack Details",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the details of a specific starter pack.\n",
        "operationId": "GetStarterPack",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pack",
            "in": "query",
            "description": "The URI of the starter pack to retrieve.",
            "required": true,
            "type": "string",
            "format": "uri",
            "x-ms-summary": "Starter Pack URI"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the starter pack details.",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the starter pack.",
                  "example": "Tech Enthusiasts"
                },
                "actors": {
                  "type": "array",
                  "description": "An array of profiles included in the starter pack.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getStarterPacks": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get All Starter Packs",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve all available starter packs for the authenticated user.\n",
        "operationId": "GetStarterPacks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of starter packs to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved starter packs.",
            "schema": {
              "type": "object",
              "properties": {
                "starterPacks": {
                  "type": "array",
                  "description": "An array of starter packs.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the starter pack.",
                        "example": "Tech Enthusiasts"
                      },
                      "uri": {
                        "type": "string",
                        "description": "The URI of the starter pack.",
                        "example": "at://did:plc:abcd1234/app.bsky.graph/starterPack123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.getSuggestedFollowsByActor": {
      "get": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Get Suggested Follows Based on Actor",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of suggested follows based on a specific actor.\n",
        "operationId": "GetSuggestedFollowsByActor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "Handle or DID of the actor to base suggestions on.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Actor Identifier"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of suggestions to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved suggested follows.",
            "schema": {
              "type": "object",
              "properties": {
                "suggestedFollows": {
                  "type": "array",
                  "description": "An array of suggested profiles to follow.",
                  "items": {
                    "$ref": "#/definitions/ProfileView"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.muteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an Actor",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nMute a specific actor for the authenticated user.\n",
        "operationId": "MuteActor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the actor to mute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "actor": {
                  "type": "string",
                  "description": "Handle or DID of the actor to mute.",
                  "example": "did:plc:abcd1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor was successfully muted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.muteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute an Actor List",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nMute a specific actor list for the authenticated user.\n",
        "operationId": "MuteActorList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the actor list to mute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "string",
                  "description": "The URI of the actor list to mute.",
                  "example": "at://did:plc:abcd1234/app.bsky.graph/list123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the actor list.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor list was successfully muted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.muteThread": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Mute a Thread",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nMute a specific thread for the authenticated user.\n",
        "operationId": "MuteThread",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the thread to mute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "threadUri": {
                  "type": "string",
                  "description": "The URI of the thread to mute.",
                  "example": "at://did:plc:abcd1234/app.bsky.feed/thread123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the thread.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the thread was successfully muted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.unmuteActor": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an Actor",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nUnmute a specific actor for the authenticated user.\n",
        "operationId": "UnmuteActor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the actor to unmute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "actor": {
                  "type": "string",
                  "description": "Handle or DID of the actor to unmute.",
                  "example": "did:plc:abcd1234"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor was successfully unmuted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.unmuteActorList": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute an Actor List",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nUnmute a specific actor list for the authenticated user.\n",
        "operationId": "UnmuteActorList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the actor list to unmute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "list": {
                  "type": "string",
                  "description": "The URI of the actor list to unmute.",
                  "example": "at://did:plc:abcd1234/app.bsky.graph/list123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the actor list.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor list was successfully unmuted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.graph.unmuteThread": {
      "post": {
        "tags": [
          "app.bsky.graph"
        ],
        "summary": "Unmute a Thread",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nUnmute a specific thread for the authenticated user.\n",
        "operationId": "UnmuteThread",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the thread to unmute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "threadUri": {
                  "type": "string",
                  "description": "The URI of the thread to unmute.",
                  "example": "at://did:plc:abcd1234/app.bsky.feed/thread123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the thread.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the thread was successfully unmuted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.labeler.getServices": {
      "get": {
        "tags": [
          "app.bsky.labeler"
        ],
        "summary": "Get Labeling Services",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of available labeling services.\n",
        "operationId": "GetServices",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved labeling services.",
            "schema": {
              "type": "object",
              "properties": {
                "services": {
                  "type": "array",
                  "description": "An array of available labeling services.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the labeling service.",
                        "example": "ContentFilterPro"
                      },
                      "endpoint": {
                        "type": "string",
                        "description": "The endpoint of the labeling service.",
                        "example": "https://labeler.example.com/api"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.getUnreadCount": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Get Unread Notification Count",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the count of unread notifications for the authenticated user.\n",
        "operationId": "GetUnreadCount",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved unread notification count.",
            "schema": {
              "type": "object",
              "properties": {
                "unreadCount": {
                  "type": "integer",
                  "description": "The number of unread notifications.",
                  "example": 12
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve unread count.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.listNotifications": {
      "get": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "List Notifications",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve a list of notifications for the authenticated user.\n",
        "operationId": "ListNotifications",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of notifications to retrieve.",
            "required": false,
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating through results.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved notifications.",
            "schema": {
              "type": "object",
              "properties": {
                "notifications": {
                  "type": "array",
                  "description": "An array of notifications.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the notification.",
                        "example": "notif123"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of notification (e.g., 'like', 'mention').",
                        "example": "like"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the notification was created.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.putPreferences": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Update Notification Preferences",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nUpdate the notification preferences for the authenticated user.\n",
        "operationId": "NotificationPutPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Notification preferences to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "preferences": {
                  "type": "object",
                  "description": "The notification preferences object.",
                  "example": {
                    "likes": true,
                    "mentions": false,
                    "replies": true
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated notification preferences.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the preferences were successfully updated.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.registerPush": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Register Push Notifications",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRegister a device for push notifications.\n",
        "operationId": "RegisterPush",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the device to register for push notifications.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deviceToken": {
                  "type": "string",
                  "description": "The device token for push notifications.",
                  "example": "device_token_abc123"
                },
                "platform": {
                  "type": "string",
                  "description": "The platform of the device (e.g., 'iOS', 'Android').",
                  "example": "iOS"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully registered the device for push notifications.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the device was successfully registered.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.notification.updateSeen": {
      "post": {
        "tags": [
          "app.bsky.notification"
        ],
        "summary": "Update Notifications as Seen",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nMark notifications as seen for the authenticated user.\n",
        "operationId": "UpdateSeen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the notifications to update as seen.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "seenAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp when notifications were marked as seen.",
                  "example": "2023-11-19T12:34:56Z"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated notifications as seen.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the notifications were successfully updated as seen.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.video.getJobStatus": {
      "get": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Get Video Job Status",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the status of a video processing job.\n",
        "operationId": "GetJobStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "description": "The ID of the video job to retrieve the status for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Job ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved video job status.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The current status of the video job (e.g., 'pending', 'processing', 'completed').",
                  "example": "processing"
                },
                "progress": {
                  "type": "integer",
                  "description": "The percentage of progress for the video job.",
                  "example": 50
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.video.getUploadLimits": {
      "get": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Get Video Upload Limits",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the video upload limits for the authenticated user.\n",
        "operationId": "GetUploadLimits",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved video upload limits.",
            "schema": {
              "type": "object",
              "properties": {
                "maxFileSize": {
                  "type": "integer",
                  "description": "The maximum file size allowed for video uploads (in bytes).",
                  "example": 104857600
                },
                "maxDuration": {
                  "type": "integer",
                  "description": "The maximum duration allowed for video uploads (in seconds).",
                  "example": 300
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to retrieve upload limits.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/app.bsky.video.uploadVideo": {
      "post": {
        "tags": [
          "app.bsky.video"
        ],
        "summary": "Upload Video",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`app.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nUpload a video file for processing and hosting.\n",
        "operationId": "UploadVideo",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "The video file to upload.",
            "required": true,
            "type": "file",
            "x-ms-summary": "Video File"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title of the video.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Video Title"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "A description of the video.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Video Description"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully uploaded the video.",
            "schema": {
              "type": "object",
              "properties": {
                "videoId": {
                  "type": "string",
                  "description": "The ID of the uploaded video.",
                  "example": "vid123"
                },
                "status": {
                  "type": "string",
                  "description": "The status of the upload (e.g., 'processing').",
                  "example": "processing"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or file upload.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.actor.deleteAccount": {
      "post": {
        "tags": [
          "chat.bsky.actor"
        ],
        "summary": "Delete Account",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`chat.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nPermanently delete the authenticated user's account.\n",
        "operationId": "DeleteAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details to confirm account deletion.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "confirmDelete": {
                  "type": "boolean",
                  "description": "Confirmation flag to delete the account.",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the account was successfully deleted.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.actor.exportAccountData": {
      "get": {
        "tags": [
          "chat.bsky.actor"
        ],
        "summary": "Export Account Data",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`chat.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nExport the authenticated user's account data for backup or migration purposes.\n",
        "operationId": "ExportAccountData",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successfully exported account data.",
            "schema": {
              "type": "object",
              "properties": {
                "accountData": {
                  "type": "string",
                  "description": "The exported account data in JSON format.",
                  "example": "{\"username\": \"johndoe\", \"posts\": [...]}"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Unable to export account data.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.deleteMessageForSelf": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Delete Message for Self",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`chat.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nDelete a specific message for the authenticated user without affecting other participants.\n",
        "operationId": "DeleteMessageForSelf",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the message to delete.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "messageId": {
                  "type": "string",
                  "description": "The unique identifier of the message to delete.",
                  "example": "msg123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the message for the authenticated user.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the message was successfully deleted for the user.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.getConvo": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Conversation",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`chat.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the details of a specific conversation by its unique identifier.\n",
        "operationId": "GetConvo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "description": "The unique identifier of the conversation to retrieve.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Conversation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the conversation.",
                  "example": "convo123"
                },
                "participants": {
                  "type": "array",
                  "description": "A list of participants in the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "Handle of the participant.",
                        "example": "johndoe"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the participant.",
                        "example": "John Doe"
                      }
                    }
                  }
                },
                "messages": {
                  "type": "array",
                  "description": "The list of messages in the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "The text content of the message.",
                        "example": "Hello, world!"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the message was created.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.getConvoForMembers": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Conversation for Members",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`chat.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the details of a conversation involving specific members.\n",
        "operationId": "GetConvoForMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "members",
            "in": "query",
            "description": "A comma-separated list of member handles or IDs.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Member Handles/IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the conversation for the specified members.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier of the conversation.",
                  "example": "convo123"
                },
                "participants": {
                  "type": "array",
                  "description": "A list of participants in the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "handle": {
                        "type": "string",
                        "description": "Handle of the participant.",
                        "example": "johndoe"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of the participant.",
                        "example": "John Doe"
                      }
                    }
                  }
                },
                "messages": {
                  "type": "array",
                  "description": "The list of messages in the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "The text content of the message.",
                        "example": "Hello, world!"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the message was created.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or member list.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.getLog": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Conversation Log",
        "description": "*This endpoint is part of the Bluesky application Lexicon APIs (`chat.bsky.*`). \nPublic endpoints which don't require authentication can be made directly \nagainst the public Bluesky AppView API: https://public.api.bsky.app. \nAuthenticated requests are usually made to the user's PDS, with automatic \nservice proxying. Authenticated requests can be used for both public and non-public endpoints.*\n\n*To learn more about calling atproto API endpoints like this one, see the \n[API Hosts and Auth](https://docs.bsky.app/docs/advanced-guides/api-directory) guide.*\n\nRetrieve the message log for a specific conversation.\n",
        "operationId": "GetLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "description": "The unique identifier of the conversation to retrieve the log for.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of log entries to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating the log.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the conversation log.",
            "schema": {
              "type": "object",
              "properties": {
                "log": {
                  "type": "array",
                  "description": "An array of log entries for the conversation.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID in the log.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "The text content of the message.",
                        "example": "Hello, world!"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the message.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid conversation ID or input.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.getMessages": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Conversation Messages",
        "description": "Retrieve a list of messages in a specific conversation. This API supports pagination for large conversations.\n",
        "operationId": "GetMessages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "description": "The unique identifier of the conversation.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of messages to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating messages.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved messages in the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "type": "array",
                  "description": "A list of messages.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Message ID.",
                        "example": "msg123"
                      },
                      "text": {
                        "type": "string",
                        "description": "Message content.",
                        "example": "Hello, how are you?"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Message creation timestamp.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.leaveConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Leave Conversation",
        "description": "Leave a specific conversation. Once left, the user will no longer receive notifications or messages for that conversation.\n",
        "operationId": "LeaveConvo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The details of the conversation to leave.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "The unique identifier of the conversation to leave.",
                  "example": "convo123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully left the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.listConvos": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "List Conversations",
        "description": "Retrieve a list of all conversations for the authenticated user. Supports pagination for larger conversation lists.\n",
        "operationId": "ListConvos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of conversations to retrieve.",
            "required": false,
            "type": "integer",
            "x-ms-summary": "Limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "A pagination cursor for navigating conversations.",
            "required": false,
            "type": "string",
            "x-ms-summary": "Pagination Cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of conversations.",
            "schema": {
              "type": "object",
              "properties": {
                "conversations": {
                  "type": "array",
                  "description": "A list of conversations.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Conversation ID.",
                        "example": "convo123"
                      },
                      "participants": {
                        "type": "array",
                        "description": "Participants in the conversation.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "handle": {
                              "type": "string",
                              "description": "Participant handle.",
                              "example": "johndoe"
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Participant display name.",
                              "example": "John Doe"
                            }
                          }
                        }
                      },
                      "lastMessageAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the last message in the conversation.",
                        "example": "2023-11-19T12:34:56Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or pagination cursor.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.muteConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Mute Conversation",
        "description": "Mute a specific conversation. Muted conversations will not send notifications.\n",
        "operationId": "MuteConvo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the conversation to mute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "The unique identifier of the conversation to mute.",
                  "example": "convo123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.sendMessage": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Send Message",
        "description": "Send a new message in a specific conversation.\n",
        "operationId": "SendMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the message to send.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "The unique identifier of the conversation.",
                  "example": "convo123"
                },
                "text": {
                  "type": "string",
                  "description": "The content of the message.",
                  "example": "Hello, world!"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the message.",
            "schema": {
              "type": "object",
              "properties": {
                "messageId": {
                  "type": "string",
                  "description": "The unique identifier of the sent message.",
                  "example": "msg123"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.createSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Session",
        "description": "Create a new session for authentication. This endpoint generates an access token and refresh token for the user.\n",
        "operationId": "CreateSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Credentials to create a session.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "The user's email or handle.",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "description": "The user's password.",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created a session.",
            "schema": {
              "type": "object",
              "properties": {
                "accessJwt": {
                  "type": "string",
                  "description": "The access token for authentication.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refreshJwt": {
                  "type": "string",
                  "description": "The refresh token for session renewal.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid credentials or input.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/com.atproto.server.refreshSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Refresh Session",
        "description": "Refresh an existing session to obtain a new access token and refresh token. The previous refresh token becomes invalid.\n",
        "operationId": "RefreshSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The refresh token for renewing the session.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshJwt": {
                  "type": "string",
                  "description": "The refresh token provided during session creation or previous refresh.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed the session.",
            "schema": {
              "type": "object",
              "properties": {
                "accessJwt": {
                  "type": "string",
                  "description": "The new access token for authentication.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refreshJwt": {
                  "type": "string",
                  "description": "The new refresh token for session renewal.",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid or expired refresh token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.sendMessageBatch": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Send Message Batch",
        "description": "Send a batch of messages to multiple conversations.\n",
        "operationId": "SendMessageBatch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the messages to send.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "type": "array",
                  "description": "A list of messages to send in batch.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "convoId": {
                        "type": "string",
                        "description": "The unique identifier of the conversation.",
                        "example": "convo123"
                      },
                      "text": {
                        "type": "string",
                        "description": "The message content.",
                        "example": "Hello, everyone!"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the batch of messages.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or message data.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.unmuteConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Unmute Conversation",
        "description": "Unmute a previously muted conversation. The user will start receiving notifications for the conversation again.\n",
        "operationId": "UnmuteConvo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the conversation to unmute.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "The unique identifier of the conversation to unmute.",
                  "example": "convo123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/xrpc/chat.bsky.convo.updateRead": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Update Read Status",
        "description": "Mark messages in a conversation as read up to a specified point.\n",
        "operationId": "UpdateRead",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details of the conversation and read status update.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "The unique identifier of the conversation.",
                  "example": "convo123"
                },
                "readUpToMessageId": {
                  "type": "string",
                  "description": "The ID of the last message read.",
                  "example": "msg456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the read status.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates successful operation.",
                  "example": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or conversation ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Preferences": {
      "type": "object",
      "description": "An object containing preferences attached to the current account.",
      "properties": {
        "theme": {
          "type": "string",
          "description": "The user's theme preference (e.g., 'dark' or 'light').",
          "example": "dark"
        },
        "notifications": {
          "type": "object",
          "description": "The user's notification preferences.",
          "properties": {
            "email": {
              "type": "boolean",
              "description": "Whether email notifications are enabled.",
              "example": true
            },
            "push": {
              "type": "boolean",
              "description": "Whether push notifications are enabled.",
              "example": false
            }
          }
        },
        "language": {
          "type": "string",
          "description": "The user's preferred language code (e.g., 'en', 'fr').",
          "example": "en"
        },
        "privacySettings": {
          "type": "object",
          "description": "The user's privacy-related preferences.",
          "properties": {
            "profileVisibility": {
              "type": "string",
              "description": "The visibility of the user's profile (e.g., 'public', 'private').",
              "example": "public"
            },
            "messagePermissions": {
              "type": "string",
              "description": "Who can send messages to the user (e.g., 'anyone', 'contacts').",
              "example": "contacts"
            }
          }
        }
      }
    },
    "ProfileViewBasic": {
      "type": "object",
      "description": "Basic profile view for an actor in the Bluesky network.",
      "properties": {
        "did": {
          "type": "string",
          "description": "Decentralized Identifier (DID) of the actor."
        },
        "handle": {
          "type": "string",
          "description": "The unique handle or username of the actor."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the actor."
        },
        "avatar": {
          "type": "string",
          "format": "uri",
          "description": "URL to the avatar image of the actor."
        },
        "viewer": {
          "type": "object",
          "description": "Viewer-specific state for the profile.",
          "properties": {
            "following": {
              "type": "string",
              "description": "URI of the profile the viewer is following."
            },
            "followedBy": {
              "type": "string",
              "description": "URI of the profile that is following the viewer."
            },
            "muted": {
              "type": "boolean",
              "description": "Indicates whether the viewer has muted this actor."
            },
            "blockedBy": {
              "type": "boolean",
              "description": "Indicates whether the viewer is blocked by this actor."
            },
            "blocking": {
              "type": "string",
              "description": "URI of the actor being blocked."
            }
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          },
          "description": "Metadata tags or labels associated with this actor."
        }
      }
    },
    "ProfileView": {
      "type": "object",
      "description": "A minimal view of an actor's profile, used for search and typeahead results.",
      "properties": {
        "did": {
          "type": "string",
          "description": "Decentralized Identifier (DID) of the actor.",
          "example": "did:plc:abcd1234"
        },
        "handle": {
          "type": "string",
          "description": "Handle of the actor.",
          "example": "user.handle.bsky.app"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the actor.",
          "example": "John Doe"
        },
        "avatar": {
          "type": "string",
          "description": "URL of the actor's avatar image.",
          "example": "https://example.com/avatar.jpg"
        },
        "description": {
          "type": "string",
          "description": "A brief description or bio for the actor.",
          "example": "Just another Bluesky user."
        }
      }
    },
    "ProfileViewDetailed": {
      "type": "object",
      "description": "Detailed profile view of an actor.",
      "properties": {
        "did": {
          "type": "string",
          "description": "Decentralized Identifier (DID) of the actor.",
          "example": "did:plc:abcd1234"
        },
        "handle": {
          "type": "string",
          "description": "Handle of the actor.",
          "example": "user.handle.bsky.app"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the actor.",
          "example": "John Doe"
        },
        "bio": {
          "type": "string",
          "description": "The biography or about section of the actor.",
          "example": "Just another Bluesky enthusiast."
        },
        "avatar": {
          "type": "string",
          "description": "URL of the actor's avatar image.",
          "example": "https://example.com/avatar.jpg"
        },
        "banner": {
          "type": "string",
          "description": "URL of the actor's banner image.",
          "example": "https://example.com/banner.jpg"
        },
        "followersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of followers the actor has.",
          "example": 123
        },
        "followingCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of accounts the actor is following.",
          "example": 456
        },
        "postsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of posts the actor has made.",
          "example": 789
        },
        "isFollowing": {
          "type": "boolean",
          "description": "Whether the authenticated user is following the actor.",
          "example": true
        },
        "isFollowedBy": {
          "type": "boolean",
          "description": "Whether the authenticated user is followed by the actor.",
          "example": false
        }
      }
    },
    "Label": {
      "type": "object",
      "description": "Metadata tag or label applied to a resource (e.g., actor, post, or record) within the Bluesky network.",
      "required": [
        "src",
        "uri",
        "val",
        "cts"
      ],
      "properties": {
        "src": {
          "type": "string",
          "format": "uri",
          "description": "URI of the source that created this label (e.g., actor DID or service identifier)."
        },
        "uri": {
          "type": "string",
          "format": "uri",
          "description": "URI of the resource to which the label applies (e.g., actor profile, post, or record)."
        },
        "val": {
          "type": "string",
          "maxLength": 128,
          "description": "A short string representing the label's value or type."
        },
        "neg": {
          "type": "boolean",
          "description": "If `true`, this is a negation label that invalidates a previous label."
        },
        "cts": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the label was created."
        }
      }
    },
    "Post": {
      "type": "object",
      "description": "Details of a post.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The URI of the post.",
          "example": "at://did:plc:abcd1234/app.bsky.feed/post123"
        },
        "author": {
          "$ref": "#/definitions/ProfileView"
        },
        "content": {
          "type": "string",
          "description": "The content of the post.",
          "example": "This is a sample post content."
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Standard error response for failed requests.",
      "required": [
        "error",
        "message"
      ],
      "properties": {
        "error": {
          "type": "string",
          "enum": [
            "InvalidRequest",
            "ExpiredToken",
            "InvalidToken",
            "Unauthorized",
            "NotFound",
            "InternalServerError",
            "AuthMissing"
          ],
          "description": "Type of error encountered during the request."
        },
        "message": {
          "type": "string",
          "description": "Detailed error message."
        },
        "code": {
          "type": "integer",
          "description": "Optional error code, such as an HTTP status code."
        },
        "details": {
          "type": "string",
          "description": "Additional information about the error for debugging purposes."
        }
      }
    }
  }
}