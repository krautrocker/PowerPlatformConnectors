{
  "swagger": "2.0",
  "info": {
    "title": "Bluesky Social",
    "description": "Specification for the Bluesky Social endpoints",
    "contact": {
      "name": "Dan Romano",
      "email": "dan.romano@swolcat.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/license/mit/"
    },
    "version": "1.0"
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://docs.bsky.app/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://example.com/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Social Media"
    }
  ],
  "host": "bsky.social",
  "basePath": "/xrpc",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/token",
      "scopes": {
        "transition:generic": "General access to user data and actions",
        "transition:chat.bsky": "Access to chat features, including direct messages"
      }
    }
  },
  "security": [
    {
      "oauth2-auth": [
        "transition:generic",
        "transition:chat.bsky"
      ]
    }
  ],
  "consumes": [
  ],
  "produces": [
  ],
  "paths": {
    "/com.atproto.repo.listMissingBlobs": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "List Missing Blobs",
        "description": "Retrieves a list of missing blobs (data units) in the repository. This endpoint is part of the `atproto.repo` namespace and requires authentication.",
        "operationId": "ListMissingBlobs",
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository to check for missing blobs.",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of missing blobs.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "The unique identifier of a missing blob."
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.listRecords": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "List Records",
        "description": "Retrieves a list of records within the repository. This endpoint is part of the `atproto.repo` namespace and requires authentication.",
        "operationId": "ListRecords",
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository to list records from.",
            "x-ms-summary": "Repository ID"
          },
          {
            "name": "recordType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by the type of records to list.",
            "x-ms-summary": "Record type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of records.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "recordId": {
                    "type": "string",
                    "description": "Unique identifier of the record."
                  },
                  "data": {
                    "type": "object",
                    "description": "Content of the record."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.putRecord": {
      "put": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Put Record",
        "description": "Updates or creates a record within the repository. This endpoint is part of the `atproto.repo` namespace and requires authentication.",
        "operationId": "PutRecord",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recordDetails",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Unique identifier of the record to be created or updated."
                },
                "content": {
                  "type": "object",
                  "description": "Content data of the record."
                }
              }
            },
            "x-ms-summary": "Record details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully put the record in the repository.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the record was successfully created or updated."
                },
                "recordId": {
                  "type": "string",
                  "description": "Unique identifier of the record."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.uploadBlob": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Upload Blob",
        "description": "Uploads a binary blob to the specified repository in the Ozone system. This endpoint is part of the `com.atproto.repo` namespace and requires authentication.",
        "operationId": "UploadBlob",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "The binary file to upload as a blob.",
            "x-ms-summary": "Blob File"
          },
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository where the blob will be stored.",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully uploaded the blob.",
            "schema": {
              "type": "object",
              "properties": {
                "blobId": {
                  "type": "string",
                  "description": "The unique identifier of the uploaded blob."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.activateAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Activate Account",
        "description": "Activates a newly created account based on verification data, enabling access to the platform. This endpoint is part of the `atproto.server` namespace and requires authentication.\n",
        "operationId": "ActivateAccount",
        "parameters": [
          {
            "name": "activationCode",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The activation code provided to the user during account creation.",
            "x-ms-summary": "Activation code"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled invites for the specified account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the account's invites were successfully disabled."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.checkAccountStatus": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Check Account Status",
        "description": "Retrieves the status of a specific account, providing details on activation and accessibility. This endpoint is part of the `atproto.server` namespace.",
        "operationId": "CheckAccountStatus",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account to check.",
            "x-ms-summary": "Account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled invites for the specified account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the account's invites were successfully disabled."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.confirmEmail": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Confirm Email",
        "description": "Confirms a user's email address during account setup. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "ConfirmEmail",
        "parameters": [
          {
            "name": "confirmationCode",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The confirmation code sent to the user's email.",
            "x-ms-summary": "Confirmation code"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully confirmed the email.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the email was successfully confirmed."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid confirmation code or parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.createAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Account",
        "description": "Creates a new user account on the platform. This endpoint is part of the `atproto.server` namespace.",
        "operationId": "CreateAccount",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountDetails",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Desired username for the account."
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Email address associated with the account."
                },
                "password": {
                  "type": "string",
                  "description": "Password for the account."
                }
              }
            },
            "x-ms-summary": "Account details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the account.",
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier of the newly created account."
                },
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the account was successfully created."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.createAppPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create App Password",
        "description": "Generates a new app-specific password for the user, allowing limited access to applications. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "CreateAppPassword",
        "parameters": [
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The name of the application for which the password is being created.",
            "x-ms-summary": "Application name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an app-specific password.",
            "schema": {
              "type": "object",
              "properties": {
                "appPassword": {
                  "type": "string",
                  "description": "The generated app-specific password."
                },
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the app password was successfully created."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.getEvent": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Event",
        "description": "Retrieves details of a specific moderation event in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "GetEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the moderation event to retrieve.",
            "x-ms-summary": "Event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the moderation event details.",
            "schema": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "description": "The unique identifier of the moderation event."
                },
                "eventType": {
                  "type": "string",
                  "description": "The type of the moderation event (e.g., 'warning', 'ban')."
                },
                "targetId": {
                  "type": "string",
                  "description": "The identifier of the target associated with the event."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason for the moderation event."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp when the event was created."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified event does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.createInviteCode": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Invite Code",
        "description": "Creates a single invite code, allowing the invited user to create an account. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "CreateInviteCode",
        "parameters": [
          {
            "name": "targetEmail",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "The email address of the user to be invited.",
            "x-ms-summary": "Target email"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created an invite code.",
            "schema": {
              "type": "object",
              "properties": {
                "inviteCode": {
                  "type": "string",
                  "description": "The generated invite code."
                },
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the invite code was successfully created."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.createInviteCodes": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Invite Codes",
        "description": "Generates new invite codes for users in the system. This endpoint is part of the `com.atproto.server` namespace and requires authentication.",
        "operationId": "CreateInviteCodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "inviteData",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "description": "The number of invite codes to create.",
                  "x-ms-summary": "Count"
                },
                "expiration": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The expiration date of the invite codes.",
                  "x-ms-summary": "Expiration Date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created invite codes.",
            "schema": {
              "type": "object",
              "properties": {
                "codes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of generated invite codes."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.createSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Create Session",
        "description": "Initiates a new user session, providing an authentication token. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "CreateSession",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sessionDetails",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Username for the session."
                },
                "password": {
                  "type": "string",
                  "description": "Password for the session."
                }
              }
            },
            "x-ms-summary": "Session details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the session.",
            "schema": {
              "type": "object",
              "properties": {
                "authToken": {
                  "type": "string",
                  "description": "The generated authentication token for the session."
                },
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the session was successfully created."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.deactivateAccount": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Deactivate Account",
        "description": "Deactivates the user's account, suspending access to the platform. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "DeactivateAccount",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully deactivated the account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the account was successfully deactivated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.set.deleteSet": {
      "delete": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Delete Set",
        "description": "Deletes a specified set in the Ozone system. This endpoint is part of the `tools.ozone.set` namespace and requires authentication.",
        "operationId": "DeleteSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "setId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the set to delete.",
            "x-ms-summary": "Set ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified set.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the set was successfully deleted."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for the deletion."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified set does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.set.deleteValues": {
      "delete": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Delete Values from Set",
        "description": "Deletes specific values from a specified set in the Ozone system. This endpoint is part of the `tools.ozone.set` namespace and requires authentication.",
        "operationId": "DeleteValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "setId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the set from which to delete values.",
            "x-ms-summary": "Set ID"
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "List of values to be deleted from the set.",
            "x-ms-summary": "Values to Delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified values from the set.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the values were successfully deleted."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for the deletion of values."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified set does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.deleteSession": {
      "delete": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Delete Session",
        "description": "Ends the user's current session, effectively logging them out. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "DeleteSession",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the session.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the session was successfully deleted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.set.getValues": {
      "get": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Get Values from Set",
        "description": "Retrieves values from a specified set in the Ozone system. This endpoint is part of the `tools.ozone.set` namespace and requires authentication.",
        "operationId": "GetValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "setId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the set from which to retrieve values.",
            "x-ms-summary": "Set ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of values to retrieve from the set.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving values, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved values from the specified set.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "A value from the specified set."
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified set does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.set.querySets": {
      "get": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Query Sets",
        "description": "Retrieves a list of sets based on specified filters in the Ozone system. This endpoint is part of the `tools.ozone.set` namespace and requires authentication.",
        "operationId": "QuerySets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter to apply when querying sets, such as a keyword or tag.",
            "x-ms-summary": "Filter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of sets to retrieve in the query results.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving sets, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of sets matching the query.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "setId": {
                    "type": "string",
                    "description": "The unique identifier of the set."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the set."
                  },
                  "description": {
                    "type": "string",
                    "description": "A brief description of the set."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the set was created."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.set.upsertSet": {
      "put": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Upsert Set",
        "description": "Creates or updates a set in the Ozone system. This endpoint is part of the `tools.ozone.set` namespace and requires authentication.",
        "operationId": "UpsertSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "setId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique identifier of the set. If not provided, a new set will be created.",
            "x-ms-summary": "Set ID"
          },
          {
            "name": "setData",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the set.",
                  "x-ms-summary": "Set Name"
                },
                "description": {
                  "type": "string",
                  "description": "A brief description of the set.",
                  "x-ms-summary": "Set Description"
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "A list of values to include in the set.",
                  "x-ms-summary": "Set Values"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or updated the set.",
            "schema": {
              "type": "object",
              "properties": {
                "setId": {
                  "type": "string",
                  "description": "The unique identifier of the upserted set."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for the upsert operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.describeServer": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Describe Server",
        "description": "Retrieves metadata and configuration details about the server. This endpoint is part of the `atproto.server` namespace.",
        "operationId": "DescribeServer",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved server description.",
            "schema": {
              "type": "object",
              "properties": {
                "serverName": {
                  "type": "string",
                  "description": "Name of the server."
                },
                "version": {
                  "type": "string",
                  "description": "Version of the server software."
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of features supported by the server."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.getAccountInviteCodes": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get Account Invite Codes",
        "description": "Retrieves a list of invite codes associated with the user's account. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "GetAccountInviteCodes",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account invite codes.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "inviteCode": {
                    "type": "string",
                    "description": "The invite code string."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the invite code was created."
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the invite code will expire, if applicable."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.getServiceAuth": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get Service Auth",
        "description": "Retrieves authentication information for the current service, such as token details or login requirements. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "GetServiceAuth",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved service authentication details.",
            "schema": {
              "type": "object",
              "properties": {
                "authToken": {
                  "type": "string",
                  "description": "Authentication token for the service."
                },
                "expiresIn": {
                  "type": "integer",
                  "description": "Expiration time of the authentication token in seconds."
                },
                "tokenType": {
                  "type": "string",
                  "description": "Type of the token (e.g., Bearer)."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.getSession": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Get Session",
        "description": "Retrieves details about the current session, including user information and session status. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "GetSession",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved session details.",
            "schema": {
              "type": "object",
              "properties": {
                "sessionId": {
                  "type": "string",
                  "description": "Unique identifier of the session."
                },
                "userId": {
                  "type": "string",
                  "description": "Unique identifier of the user associated with the session."
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Indicates if the session is currently active."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.listAppPasswords": {
      "get": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "List App Passwords",
        "description": "Retrieves a list of app-specific passwords generated for the user's account. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "ListAppPasswords",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of app passwords.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "appPasswordId": {
                    "type": "string",
                    "description": "Unique identifier of the app password."
                  },
                  "appName": {
                    "type": "string",
                    "description": "Name of the app associated with the password."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the app password was created."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.refreshSession": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Refresh Session",
        "description": "Refreshes the current session, extending the authentication validity period. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "RefreshSession",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed the session.",
            "schema": {
              "type": "object",
              "properties": {
                "authToken": {
                  "type": "string",
                  "description": "The new authentication token for the refreshed session."
                },
                "expiresIn": {
                  "type": "integer",
                  "description": "Expiration time of the authentication token in seconds."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.requestAccountDelete": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request Account Delete",
        "description": "Initiates a request to delete the user's account. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "RequestAccountDelete",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully initiated account deletion request.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the account deletion request was successfully initiated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.requestEmailConfirmation": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request Email Confirmation",
        "description": "Sends a confirmation email to verify the user’s email address. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "RequestEmailConfirmation",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully requested email confirmation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the email confirmation request was successfully sent."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.requestEmailUpdate": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request Email Update",
        "description": "Initiates a request to update the user’s email address. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "RequestEmailUpdate",
        "parameters": [
          {
            "name": "newEmail",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "The new email address to associate with the user’s account.",
            "x-ms-summary": "New email address"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully initiated email update request.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the email update request was successfully initiated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.requestPasswordReset": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Request Password Reset",
        "description": "Sends a password reset request to the user’s email, initiating the password reset process. This endpoint is part of the `atproto.server` namespace.",
        "operationId": "RequestPasswordReset",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "The email address associated with the user’s account.",
            "x-ms-summary": "User email address"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully initiated password reset request.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the password reset request was successfully initiated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid email or parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.reserveSigningKey": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Reserve Signing Key",
        "description": "Reserves a signing key for the user, enabling specific cryptographic operations. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "ReserveSigningKey",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "signingKeyDetails",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "keyName": {
                  "type": "string",
                  "description": "Name of the signing key to be reserved."
                }
              }
            },
            "x-ms-summary": "Signing key details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully reserved signing key.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the signing key was successfully reserved."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.resetPassword": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Reset Password",
        "description": "Resets the user’s password after verifying a reset token, enabling them to regain account access. This endpoint is part of the `atproto.server` namespace.",
        "operationId": "ResetPassword",
        "parameters": [
          {
            "name": "resetToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The token provided to verify password reset.",
            "x-ms-summary": "Reset token"
          },
          {
            "name": "newPassword",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The new password to set for the account.",
            "x-ms-summary": "New password"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully reset the password.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the password was successfully reset."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid reset token or parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.revokeAppPassword": {
      "delete": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Revoke App Password",
        "description": "Revokes an app-specific password, removing its access to the user’s account. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "RevokeAppPassword",
        "parameters": [
          {
            "name": "appPasswordId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the app password to revoke.",
            "x-ms-summary": "App password ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully revoked the app password.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the app password was successfully revoked."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid app password ID.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.updateEmail": {
      "post": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Update Email",
        "description": "Updates the user’s email address after verification. This endpoint is part of the `atproto.server` namespace and requires authentication.",
        "operationId": "UpdateEmail",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The token used to verify email update.",
            "x-ms-summary": "Verification token"
          },
          {
            "name": "newEmail",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "The new email address to associate with the user’s account.",
            "x-ms-summary": "New email address"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the email address.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the email address was successfully updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid token or parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.getBlob": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Blob",
        "description": "Retrieves a binary blob from the specified repository in the Ozone system.",
        "operationId": "GetBlob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blobId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the blob to retrieve.",
            "x-ms-summary": "Blob ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the blob.",
            "schema": {
              "type": "string",
              "description": "The binary data of the blob."
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified blob does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.getBlocks": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Retrieve Blocks",
        "description": "Retrieves binary data blocks from the repository. This endpoint is part of the `com.atproto.sync` namespace and requires authentication.\n",
        "operationId": "GetBlocks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of block IDs to retrieve.",
            "x-ms-summary": "Block IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved binary blocks.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.getLatestCommit": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Latest Commit",
        "description": "Retrieves details of the latest commit made to the repository. This endpoint is part of the  `atproto.sync` namespace and requires authentication.\n",
        "operationId": "GetLatestCommit",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved latest commit details.",
            "schema": {
              "type": "object",
              "properties": {
                "commitId": {
                  "type": "string",
                  "description": "Unique identifier of the latest commit."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of when the commit was made."
                },
                "changes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "changeId": {
                        "type": "string",
                        "description": "Identifier of the change within the commit."
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the change."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.getRepoStatus": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Repository Status",
        "description": "Retrieves the status of a repository, including synchronization and health information. This endpoint is part of the `atproto.sync` namespace and requires authentication.",
        "operationId": "GetRepoStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository for which to retrieve the status.",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the repository status.",
            "schema": {
              "type": "object",
              "properties": {
                "repoId": {
                  "type": "string",
                  "description": "The unique identifier of the repository."
                },
                "status": {
                  "type": "string",
                  "description": "Current status of the repository (e.g., synchronized, out-of-sync)."
                },
                "health": {
                  "type": "string",
                  "description": "Health status of the repository."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified repository does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.communication.createTemplate": {
      "post": {
        "tags": [
          "tools.ozone.communication"
        ],
        "summary": "Create Communication Template",
        "description": "Creates a new communication template in the Ozone system. This endpoint is part of the `tools.ozone.communication` namespace and requires authentication.",
        "operationId": "CreateTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateName",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the communication template.",
                  "x-ms-summary": "Template Name"
                },
                "subject": {
                  "type": "string",
                  "description": "The subject line of the communication template.",
                  "x-ms-summary": "Template Subject"
                },
                "body": {
                  "type": "string",
                  "description": "The body content of the communication template.",
                  "x-ms-summary": "Template Body"
                },
                "metadata": {
                  "type": "object",
                  "description": "Optional metadata for the template, such as tags or categories.",
                  "x-ms-summary": "Template Metadata"
                }
              }
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Language code for the template (e.g., 'en' for English).",
            "x-ms-summary": "Template Language"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the communication template.",
            "schema": {
              "type": "object",
              "properties": {
                "templateId": {
                  "type": "string",
                  "description": "The unique identifier of the newly created template."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for template creation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Conflict - A template with the same name already exists.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.communication.deleteTemplate": {
      "delete": {
        "tags": [
          "tools.ozone.communication"
        ],
        "summary": "Delete Communication Template",
        "description": "Deletes a specified communication template from the Ozone system. This endpoint is part of the `tools.ozone.communication` namespace and requires authentication.",
        "operationId": "DeleteTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the communication template to delete.",
            "x-ms-summary": "Template ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the communication template.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the template was successfully deleted."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for template deletion."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified template does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.listBlobs": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "List Blobs",
        "description": "Retrieves a list of blobs (data units) in the repository. This endpoint is part of the `atproto.sync` namespace and requires authentication.",
        "operationId": "ListBlobs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository from which to list blobs.",
            "x-ms-summary": "Repository ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of blobs to retrieve in the list.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving blobs, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of blobs.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "blobId": {
                    "type": "string",
                    "description": "The unique identifier of the blob."
                  },
                  "size": {
                    "type": "integer",
                    "description": "The size of the blob in bytes."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the blob was created."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified repository does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.listRepos": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "List Repositories",
        "description": "Retrieves a list of repositories available for synchronization. This endpoint is part of the `atproto.sync` namespace and requires authentication.",
        "operationId": "ListRepos",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of repositories to retrieve in the list.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving repositories, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of repositories.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "repoId": {
                    "type": "string",
                    "description": "The unique identifier of the repository."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the repository."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the repository was created."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.notifyOfUpdate": {
      "post": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Notify of Update",
        "description": "Notifies the system of an update to a repository, prompting synchronization. This endpoint is part of the `atproto.sync` namespace and requires authentication.",
        "operationId": "NotifyOfUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository that has been updated.",
            "x-ms-summary": "Repository ID"
          },
          {
            "name": "updateDetails",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the latest update to the repository.",
                  "x-ms-summary": "Update Timestamp"
                },
                "changes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of changes or modifications made in the update.",
                  "x-ms-summary": "Update Changes"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully notified the system of the repository update.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the notification was successfully processed."
                },
                "message": {
                  "type": "string",
                  "description": "Message confirming the update notification."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified repository does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.requestCrawl": {
      "post": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Request Crawl",
        "description": "Requests a crawl for a specific repository, initiating a synchronization check. This endpoint is part of the `atproto.sync` namespace and requires authentication.",
        "operationId": "RequestCrawl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository to initiate the crawl.",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully initiated a crawl for the repository.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the crawl was successfully requested."
                },
                "message": {
                  "type": "string",
                  "description": "Message confirming the crawl request."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified repository does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.communication.listTemplates": {
      "get": {
        "tags": [
          "tools.ozone.communication"
        ],
        "summary": "List Communication Templates",
        "description": "Retrieves a list of communication templates in the Ozone system. This endpoint is part of the `tools.ozone.communication` namespace and requires authentication.",
        "operationId": "ListTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of templates to retrieve in the list.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving templates, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of communication templates.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "templateId": {
                    "type": "string",
                    "description": "The unique identifier of the template."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the communication template."
                  },
                  "subject": {
                    "type": "string",
                    "description": "The subject line of the template."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the template was created."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.communication.updateTemplate": {
      "put": {
        "tags": [
          "tools.ozone.communication"
        ],
        "summary": "Update Communication Template",
        "description": "Updates a specified communication template in the Ozone system. This endpoint is part of the `tools.ozone.communication` namespace and requires authentication.",
        "operationId": "UpdateTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the communication template to update.",
            "x-ms-summary": "Template ID"
          },
          {
            "name": "templateData",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The new name of the communication template.",
                  "x-ms-summary": "Template Name"
                },
                "subject": {
                  "type": "string",
                  "description": "The updated subject line of the communication template.",
                  "x-ms-summary": "Template Subject"
                },
                "body": {
                  "type": "string",
                  "description": "The updated body content of the communication template.",
                  "x-ms-summary": "Template Body"
                },
                "metadata": {
                  "type": "object",
                  "description": "Optional metadata for the template, such as tags or categories.",
                  "x-ms-summary": "Template Metadata"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the communication template.",
            "schema": {
              "type": "object",
              "properties": {
                "templateId": {
                  "type": "string",
                  "description": "The unique identifier of the updated template."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for template update."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified template does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.emitEvent": {
      "post": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Emit Moderation Event",
        "description": "Emits a new moderation event in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "EmitEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventData",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventType": {
                  "type": "string",
                  "description": "The type of moderation event to emit (e.g., 'warning', 'ban').",
                  "x-ms-summary": "Event Type"
                },
                "targetId": {
                  "type": "string",
                  "description": "The identifier of the target for the moderation event.",
                  "x-ms-summary": "Target ID"
                },
                "reason": {
                  "type": "string",
                  "description": "The reason for the moderation event.",
                  "x-ms-summary": "Reason"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp when the event was created.",
                  "x-ms-summary": "Timestamp"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully emitted the moderation event.",
            "schema": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "string",
                  "description": "The unique identifier of the emitted event."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for event emission."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.getRecord": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Record",
        "description": "Retrieves a specific moderation record in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "GetRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recordId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the moderation record to retrieve.",
            "x-ms-summary": "Record ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the moderation record.",
            "schema": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "The unique identifier of the moderation record."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the moderation record (e.g., 'active', 'resolved')."
                },
                "actions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of actions taken in the moderation record."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the record was created."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified moderation record does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.getRecords": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Records",
        "description": "Retrieves a list of moderation records in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "GetRecords",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter records by status (e.g., 'active', 'resolved').",
            "x-ms-summary": "Record Status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of records to retrieve in the list.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving records, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of moderation records.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "recordId": {
                    "type": "string",
                    "description": "The unique identifier of the moderation record."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the moderation record."
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of actions taken in the moderation record."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the record was created."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.getRepo": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Repository",
        "description": "Retrieves moderation information for a specific repository in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "GetRepo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository to retrieve moderation information for.",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved moderation information for the repository.",
            "schema": {
              "type": "object",
              "properties": {
                "repoId": {
                  "type": "string",
                  "description": "The unique identifier of the repository."
                },
                "moderationStatus": {
                  "type": "string",
                  "description": "The moderation status of the repository (e.g., 'under review', 'approved')."
                },
                "actions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of moderation actions taken on the repository."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the repository was first moderated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified repository does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.getRepos": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Get Moderation Repositories",
        "description": "Retrieves a list of repositories with moderation information in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "GetRepos",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter repositories by moderation status (e.g., 'under review', 'approved').",
            "x-ms-summary": "Moderation Status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of repositories to retrieve in the list.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving repositories, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of repositories with moderation information.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "repoId": {
                    "type": "string",
                    "description": "The unique identifier of the repository."
                  },
                  "moderationStatus": {
                    "type": "string",
                    "description": "The moderation status of the repository."
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of moderation actions taken on the repository."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the repository was first moderated."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.queryEvents": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Query Moderation Events",
        "description": "Retrieves a list of moderation events based on specified filters in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "QueryEvents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "eventType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter events by type (e.g., 'warning', 'ban').",
            "x-ms-summary": "Event Type"
          },
          {
            "name": "targetId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter events by the target identifier associated with the event.",
            "x-ms-summary": "Target ID"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter events by status (e.g., 'active', 'resolved').",
            "x-ms-summary": "Event Status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of events to retrieve in the list.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving events, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of moderation events.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "eventId": {
                    "type": "string",
                    "description": "The unique identifier of the moderation event."
                  },
                  "eventType": {
                    "type": "string",
                    "description": "The type of the moderation event."
                  },
                  "targetId": {
                    "type": "string",
                    "description": "The identifier of the target associated with the event."
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the moderation event."
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the event was created."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.queryStatuses": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Query Moderation Statuses",
        "description": "Retrieves a list of moderation statuses for specified targets in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "QueryStatuses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "targetIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Comma-separated list of target identifiers to query for moderation statuses.",
            "x-ms-summary": "Target IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the moderation statuses for the specified targets.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "targetId": {
                    "type": "string",
                    "description": "The unique identifier of the target."
                  },
                  "moderationStatus": {
                    "type": "string",
                    "description": "The moderation status of the target (e.g., 'under review', 'approved')."
                  },
                  "lastUpdated": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the moderation status was last updated."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.moderation.searchRepos": {
      "get": {
        "tags": [
          "tools.ozone.moderation"
        ],
        "summary": "Search Moderation Repositories",
        "description": "Searches for repositories based on moderation criteria in the Ozone system. This endpoint is part of the `tools.ozone.moderation` namespace and requires authentication.",
        "operationId": "SearchRepos",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The search query to filter repositories by moderation criteria.",
            "x-ms-summary": "Search Query"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter repositories by moderation status (e.g., 'under review', 'approved').",
            "x-ms-summary": "Moderation Status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of repositories to retrieve in the search results.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving repositories, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results for repositories with moderation information.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "repoId": {
                    "type": "string",
                    "description": "The unique identifier of the repository."
                  },
                  "moderationStatus": {
                    "type": "string",
                    "description": "The moderation status of the repository."
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of moderation actions taken on the repository."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the repository was first moderated."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.server.getConfig": {
      "get": {
        "tags": [
          "tools.ozone.server"
        ],
        "summary": "Get Server Configuration",
        "description": "Retrieves the configuration settings for the Ozone server. This endpoint is part of the `tools.ozone.server` namespace and requires authentication.",
        "operationId": "GetConfig",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server configuration settings.",
            "schema": {
              "type": "object",
              "properties": {
                "configId": {
                  "type": "string",
                  "description": "The unique identifier for the server configuration."
                },
                "settings": {
                  "type": "object",
                  "description": "Configuration settings and parameters for the server."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the last update to the server configuration."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.set.addValues": {
      "post": {
        "tags": [
          "tools.ozone.set"
        ],
        "summary": "Add Values",
        "description": "Adds values to a specific set in the system, useful for managing lists or collections. This endpoint is part of the `tools.ozone.set` namespace and requires authentication.\n",
        "operationId": "AddValues",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "setId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Identifier of the set to add values to.",
            "x-ms-summary": "Set ID"
          },
          {
            "name": "values",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "x-ms-summary": "Values to add"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added values to the set.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the values were successfully added to the set."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid set ID or values.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.signature.findCorrelation": {
      "get": {
        "tags": [
          "tools.ozone.signature"
        ],
        "summary": "Find Signature Correlation",
        "description": "Finds correlations between a specified signature and related records in the Ozone system. This endpoint is part of the `tools.ozone.signature` namespace and requires authentication.",
        "operationId": "FindCorrelation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "signatureId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the signature to find correlations for.",
            "x-ms-summary": "Signature ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found correlations for the specified signature.",
            "schema": {
              "type": "object",
              "properties": {
                "signatureId": {
                  "type": "string",
                  "description": "The unique identifier of the signature."
                },
                "correlatedRecords": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recordId": {
                        "type": "string",
                        "description": "The unique identifier of a correlated record."
                      },
                      "correlationScore": {
                        "type": "number",
                        "format": "float",
                        "description": "The correlation score between the signature and the record."
                      }
                    }
                  },
                  "description": "List of records correlated with the specified signature."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified signature does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.signature.findRelatedAccounts": {
      "get": {
        "tags": [
          "tools.ozone.signature"
        ],
        "summary": "Find Related Accounts by Signature",
        "description": "Finds accounts related to a specified signature in the Ozone system. This endpoint is part of the `tools.ozone.signature` namespace and requires authentication.",
        "operationId": "FindRelatedAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "signatureId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the signature to find related accounts for.",
            "x-ms-summary": "Signature ID"
          },
          {
            "name": "correlationThreshold",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float",
            "description": "The minimum correlation score required to consider an account as related.",
            "x-ms-summary": "Correlation Threshold"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found related accounts for the specified signature.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The unique identifier of a related account."
                  },
                  "correlationScore": {
                    "type": "number",
                    "format": "float",
                    "description": "The correlation score between the signature and the account."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified signature does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.signature.searchAccounts": {
      "get": {
        "tags": [
          "tools.ozone.signature"
        ],
        "summary": "Search Accounts by Signature",
        "description": "Searches for accounts based on a signature pattern or criteria in the Ozone system. This endpoint is part of the `tools.ozone.signature` namespace and requires authentication.",
        "operationId": "SignatureSearchAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "signaturePattern",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The signature pattern or criteria to search for related accounts.",
            "x-ms-summary": "Signature Pattern"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of accounts to retrieve in the search results.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving accounts, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results for accounts matching the signature criteria.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "The unique identifier of a matching account."
                  },
                  "signatureMatchScore": {
                    "type": "number",
                    "format": "float",
                    "description": "The match score between the account's signature and the search pattern."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.team.addMember": {
      "post": {
        "tags": [
          "tools.ozone.team"
        ],
        "summary": "Add Member",
        "description": "Adds a new member to a team, assigning them a specified role. This endpoint is part of the `tools.ozone.team` namespace and requires authentication.\n",
        "operationId": "AddMember",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "memberDetails",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "memberId": {
                  "type": "string",
                  "description": "Unique identifier of the member to add."
                },
                "role": {
                  "type": "string",
                  "description": "Role assigned to the member in the team."
                }
              }
            },
            "x-ms-summary": "Member details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added team member.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the member was successfully added."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid member details.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.team.deleteMember": {
      "delete": {
        "tags": [
          "tools.ozone.team"
        ],
        "summary": "Delete Team Member",
        "description": "Deletes a specified member from a team in the Ozone system. This endpoint is part of the `tools.ozone.team` namespace and requires authentication.",
        "operationId": "DeleteMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the team from which the member will be deleted.",
            "x-ms-summary": "Team ID"
          },
          {
            "name": "memberId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the member to delete.",
            "x-ms-summary": "Member ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the team member.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the member was successfully deleted."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for the deletion."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified team or member does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.team.updateMember": {
      "put": {
        "tags": [
          "tools.ozone.team"
        ],
        "summary": "Update Team Member",
        "description": "Updates information for a specified team member in the Ozone system. This endpoint is part of the `tools.ozone.team` namespace and requires authentication.",
        "operationId": "UpdateMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the team to which the member belongs.",
            "x-ms-summary": "Team ID"
          },
          {
            "name": "memberId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the member to update.",
            "x-ms-summary": "Member ID"
          },
          {
            "name": "memberData",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "description": "The new role of the team member within the team.",
                  "x-ms-summary": "Member Role"
                },
                "status": {
                  "type": "string",
                  "description": "The status of the team member (e.g., 'active', 'inactive').",
                  "x-ms-summary": "Member Status"
                }
              }
            },
            "description": "Data containing the updates for the team member.",
            "x-ms-summary": "Member Data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the team member information.",
            "schema": {
              "type": "object",
              "properties": {
                "memberId": {
                  "type": "string",
                  "description": "The unique identifier of the updated team member."
                },
                "message": {
                  "type": "string",
                  "description": "Confirmation message for the update operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified team or member does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.identity.submitPlcOperation": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Submit PLC Operation",
        "description": "Submits an operation to the Personal Log Chain (PLC) for processing. This endpoint is part of the `atproto.identity` namespace and requires authentication.",
        "operationId": "SubmitPlcOperation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationData",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operationId": {
                  "type": "string",
                  "description": "The unique identifier of the operation to be submitted."
                },
                "content": {
                  "type": "object",
                  "description": "The data related to the PLC operation."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the operation submission."
                }
              }
            },
            "x-ms-summary": "PLC Operation Data"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfully submitted to PLC.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the operation was successfully submitted."
                },
                "operationId": {
                  "type": "string",
                  "description": "The unique identifier of the submitted operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.getRecord": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Record",
        "description": "Retrieves a specific record from the repository. This endpoint is part of the `atproto.sync` namespace and requires authentication.",
        "operationId": "SyncGetRecord",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository containing the record.",
            "x-ms-summary": "Repository ID"
          },
          {
            "name": "collection",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The name of the collection containing the record.",
            "x-ms-summary": "Collection Name"
          },
          {
            "name": "recordId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the record to retrieve.",
            "x-ms-summary": "Record ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the record.",
            "schema": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "The unique identifier of the retrieved record."
                },
                "data": {
                  "type": "object",
                  "description": "Data content of the retrieved record."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified record does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.sync.getRepo": {
      "get": {
        "tags": [
          "com.atproto.sync"
        ],
        "summary": "Get Repository",
        "description": "Retrieves a repository's data, including metadata and records. This endpoint is part of the `atproto.sync` namespace and requires authentication.",
        "operationId": "SyncGetRepo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository to retrieve.",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the repository data.",
            "schema": {
              "type": "object",
              "properties": {
                "repoId": {
                  "type": "string",
                  "description": "The unique identifier of the repository."
                },
                "metadata": {
                  "type": "object",
                  "description": "Metadata of the repository."
                },
                "records": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "List of records in the repository."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified repository does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.actor.deleteAccount": {
      "post": {
        "tags": [
          "chat.bsky.actor"
        ],
        "summary": "Delete Account",
        "description": "Permanently deletes an account and all associated data. This endpoint is part of the chat.bsky namespace and requires authentication.",
        "operationId": "DeleteAccount",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor whose account is being deleted.",
            "x-ms-summary": "Actor identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the account was successfully deleted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.actor.exportAccountData": {
      "post": {
        "tags": [
          "chat.bsky.actor"
        ],
        "summary": "Export Account Data",
        "description": "Exports account data for the authenticated user, allowing them to back up or transfer information. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "ExportAccountData",
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor exporting their data.",
            "x-ms-summary": "Actor identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully exported account data.",
            "schema": {
              "type": "object",
              "properties": {
                "dataUrl": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to download the exported account data."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.deleteMessageForSelf": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Delete Message for Self",
        "description": "Deletes a specific message from the user’s view without affecting other participants' views. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "DeleteMessageForSelf",
        "parameters": [
          {
            "name": "messageId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the message to delete.",
            "x-ms-summary": "Message identifier"
          },
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor deleting the message.",
            "x-ms-summary": "Actor identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the message for the actor.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the message was successfully deleted from the actor's view."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.getConvoForMembers": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Convo for Members",
        "description": "Retrieves a conversation for specified members, based on unique identifiers for the members. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "GetConvoForMembers",
        "parameters": [
          {
            "name": "memberIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of member IDs for the conversation.",
            "x-ms-summary": "Member IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the conversation for specified members.",
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier for the conversation."
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of member IDs in the conversation."
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.getConvo": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Convo",
        "description": "Retrieves a conversation by its unique identifier. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "GetConvo",
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation.",
            "x-ms-summary": "Conversation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier for the conversation."
                },
                "members": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of member IDs in the conversation."
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.getLog": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Log",
        "description": "Retrieves the log (message history) of a specific conversation by its unique identifier. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "GetConvoLog",
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation to retrieve the log.",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of messages to retrieve in the log.",
            "x-ms-summary": "Log limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the conversation log.",
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier for the conversation."
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.getMessages": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Get Messages",
        "description": "Retrieves a list of messages in a specific conversation by its unique identifier. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "GetMessages",
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation to retrieve messages from.",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of messages to retrieve.",
            "x-ms-summary": "Messages limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved messages in the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "convoId": {
                  "type": "string",
                  "description": "Unique identifier for the conversation."
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.leaveConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Leave Convo",
        "description": "Allows the authenticated user to leave a specific conversation, removing it from their active conversations. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "LeaveConvo",
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation to leave.",
            "x-ms-summary": "Conversation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully left the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the user successfully left the conversation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.listConvos": {
      "get": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "List Convos",
        "description": "Retrieves a list of active conversations for the authenticated user. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "ListConvos",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of conversations to retrieve.",
            "x-ms-summary": "Conversations limit"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cursor for paginated results, provided by the previous response.",
            "x-ms-summary": "Pagination cursor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of conversations.",
            "schema": {
              "type": "object",
              "properties": {
                "convos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Conversation"
                  }
                },
                "cursor": {
                  "type": "string",
                  "description": "Cursor for the next set of results, if available."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.muteConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Mute Convo",
        "description": "Mutes a specific conversation for the authenticated user, disabling notifications for that conversation. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "MuteConvo",
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation to mute.",
            "x-ms-summary": "Conversation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully muted the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the conversation was successfully muted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.sendMessageBatch": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Send Message Batch",
        "description": "Sends multiple messages to a specified conversation in a batch. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "SendMessageBatch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation to which messages are being sent.",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "messages",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "Content of the message."
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of when the message was created."
                  }
                }
              }
            },
            "x-ms-summary": "Messages batch"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent messages batch.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the batch of messages was successfully sent."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.sendMessage": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Send Message",
        "description": "Sends a single message to a specified conversation. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "SendMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation to which the message is being sent.",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string",
                  "description": "Content of the message."
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of when the message was created."
                }
              }
            },
            "x-ms-summary": "Message content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the message.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the message was successfully sent."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.unmuteConvo": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Unmute Convo",
        "description": "Unmutes a specific conversation for the authenticated user, re-enabling notifications for that conversation. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "UnmuteConvo",
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation to unmute.",
            "x-ms-summary": "Conversation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully unmuted the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the conversation was successfully unmuted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.convo.updateRead": {
      "post": {
        "tags": [
          "chat.bsky.convo"
        ],
        "summary": "Update Read",
        "description": "Marks the conversation as read up to a specified message, updating the read status for the authenticated user. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "UpdateRead",
        "parameters": [
          {
            "name": "convoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the conversation.",
            "x-ms-summary": "Conversation ID"
          },
          {
            "name": "lastReadMessageId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the last read message in the conversation.",
            "x-ms-summary": "Last read message ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the read status for the conversation.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the read status was successfully updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.moderation.getActorMetadata": {
      "get": {
        "tags": [
          "chat.bsky.moderation"
        ],
        "summary": "Get Actor Metadata",
        "description": "Retrieves metadata for a specific actor, including any moderation details. This endpoint is part of the `chat.bsky` namespace and typically requires authentication.",
        "operationId": "GetActorMetadata",
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier for the actor whose metadata is being retrieved.",
            "x-ms-summary": "Actor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved actor metadata.",
            "schema": {
              "type": "object",
              "properties": {
                "actorId": {
                  "type": "string",
                  "description": "Unique identifier for the actor."
                },
                "metadata": {
                  "type": "object",
                  "description": "Metadata details for the actor, including moderation information."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.moderation.getMessageContext": {
      "get": {
        "tags": [
          "chat.bsky.moderation"
        ],
        "summary": "Get Message Context",
        "description": "Retrieves the context of a specific message, including any moderation details. This endpoint is part of the `chat.bsky` namespace and typically requires authentication.",
        "operationId": "GetMessageContext",
        "parameters": [
          {
            "name": "messageId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the message for which context is being retrieved.",
            "x-ms-summary": "Message ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved message context.",
            "schema": {
              "type": "object",
              "properties": {
                "messageId": {
                  "type": "string",
                  "description": "Unique identifier for the message."
                },
                "context": {
                  "type": "object",
                  "description": "Context details of the message, including moderation information."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/chat.bsky.moderation.updateActorAccess": {
      "post": {
        "tags": [
          "chat.bsky.moderation"
        ],
        "summary": "Update Actor Access",
        "description": "Updates the access level for a specific actor, allowing moderation actions to be applied. This endpoint is part of the `chat.bsky` namespace and requires authentication.",
        "operationId": "UpdateActorAccess",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actorId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the actor whose access level is being updated.",
            "x-ms-summary": "Actor ID"
          },
          {
            "name": "accessLevel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "level": {
                  "type": "string",
                  "description": "New access level for the actor (e.g., restricted, allowed)."
                }
              }
            },
            "x-ms-summary": "Access level update"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated actor access level.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the actor's access level was successfully updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.server.deleteAccount": {
      "delete": {
        "tags": [
          "com.atproto.server"
        ],
        "summary": "Delete Account",
        "description": "Permanently deletes an account and all associated data within the Bluesky network. This operation cannot be undone. This endpoint is part of the `com.atproto.server` namespace and requires authentication.",
        "operationId": "ServerDeleteAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "The unique identifier of the account to delete."
                },
                "confirmation": {
                  "type": "string",
                  "description": "Confirmation string to verify the delete operation."
                }
              }
            },
            "description": "Details of the account to delete and confirmation.",
            "x-ms-summary": "Account Deletion Details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the account was successfully deleted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or missing confirmation.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.deleteAccount": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Delete Account",
        "description": "Permanently deletes an account along with all associated data. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "AdminDeleteAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account to be deleted.",
            "x-ms-summary": "Account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the account was successfully deleted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.disableAccountInvites": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Disable Account Invites",
        "description": "Disables all invite codes generated by an account, preventing them from being used. This endpoint  is part of the `atproto.admin` namespace and requires authentication.\n",
        "operationId": "DisableAccountInvites",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account whose invites are being disabled.",
            "x-ms-summary": "Account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled invites for the specified account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the account's invites were successfully disabled."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.disableInviteCodes": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Disable Invite Codes",
        "description": "Disables specified invite codes, rendering them unusable. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "DisableInviteCodes",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "inviteCodes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of invite codes to disable."
            },
            "x-ms-summary": "Invite codes"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled the specified invite codes.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the invite codes were successfully disabled."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.enableAccountInvites": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Enable Account Invites",
        "description": "Enables invite codes for a specified account, allowing new invite codes to be generated. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "EnableAccountInvites",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account for which invites are being enabled.",
            "x-ms-summary": "Account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully enabled invites for the specified account.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if invites were successfully enabled for the account."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.getAccountInfo": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get Account Info",
        "description": "Retrieves information for a specific account based on its unique identifier. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "GetAccountInfo",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account whose information is being retrieved.",
            "x-ms-summary": "Account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved account information.",
            "schema": {
              "type": "object",
              "properties": {
                "accountId": {
                  "type": "string",
                  "description": "Unique identifier for the account."
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Email associated with the account."
                },
                "status": {
                  "type": "string",
                  "description": "Status of the account (e.g., active, suspended)."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.getAccountInfos": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get Account Infos",
        "description": "Retrieves information for multiple accounts. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "GetAccountInfos",
        "parameters": [
          {
            "name": "accountIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of account IDs to retrieve information for.",
            "x-ms-summary": "Account IDs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved information for multiple accounts.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Unique identifier for the account."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email associated with the account."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the account (e.g., active, suspended)."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.getInviteCodes": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get Invite Codes",
        "description": "Retrieves a list of invite codes, including their status and usage details. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "GetInviteCodes",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique identifier of the account for which invite codes are retrieved.",
            "x-ms-summary": "Account ID"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by invite code status (e.g., active, expired).",
            "x-ms-summary": "Invite code status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of invite codes.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The invite code."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the invite code."
                  },
                  "uses": {
                    "type": "integer",
                    "description": "Number of times the invite code has been used."
                  },
                  "maxUses": {
                    "type": "integer",
                    "description": "Maximum allowed uses for the invite code."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.getSubjectStatus": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Get Subject Status",
        "description": "Retrieves the moderation status for a specific subject (e.g., an account or content). This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "GetSubjectStatus",
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the subject whose status is being retrieved.",
            "x-ms-summary": "Subject ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved subject status.",
            "schema": {
              "type": "object",
              "properties": {
                "subjectId": {
                  "type": "string",
                  "description": "Unique identifier for the subject."
                },
                "status": {
                  "type": "string",
                  "description": "Moderation status of the subject (e.g., active, suspended)."
                },
                "lastUpdated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the subject status was last updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.searchAccounts": {
      "get": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Search Accounts",
        "description": "Searches for accounts based on specified criteria, such as email or username. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "AdminSearchAccounts",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search term for finding accounts (e.g., email, username).",
            "x-ms-summary": "Search query"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by account status (e.g., active, suspended).",
            "x-ms-summary": "Account status"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to retrieve.",
            "x-ms-summary": "Results limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved search results for accounts.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "type": "string",
                    "description": "Unique identifier for the account."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email associated with the account."
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the account (e.g., active, suspended)."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.sendEmail": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Send Email",
        "description": "Sends an email to a specified account, allowing administrators to communicate directly with users. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "SendEmail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account to send the email to.",
            "x-ms-summary": "Account ID"
          },
          {
            "name": "emailContent",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "subject": {
                  "type": "string",
                  "description": "Subject of the email."
                },
                "body": {
                  "type": "string",
                  "description": "Body content of the email."
                }
              }
            },
            "x-ms-summary": "Email content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sent the email.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the email was successfully sent."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.updateAccountEmail": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update Account Email",
        "description": "Updates the email associated with a specified account. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "UpdateAccountEmail",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account to update.",
            "x-ms-summary": "Account ID"
          },
          {
            "name": "newEmail",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "email",
            "description": "New email address to associate with the account.",
            "x-ms-summary": "New email address"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the account email.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the email was successfully updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.updateAccountHandle": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update Account Handle",
        "description": "Updates the handle associated with a specified account. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "UpdateAccountHandle",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account to update.",
            "x-ms-summary": "Account ID"
          },
          {
            "name": "newHandle",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "New handle to associate with the account.",
            "x-ms-summary": "New handle"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the account handle.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the handle was successfully updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.updateAccountPassword": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update Account Password",
        "description": "Updates the password for a specified account. This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "UpdateAccountPassword",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the account for which the password is being updated.",
            "x-ms-summary": "Account ID"
          },
          {
            "name": "newPassword",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The new password for the account.",
            "x-ms-summary": "New password"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the account password.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the password was successfully updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.admin.updateSubjectStatus": {
      "post": {
        "tags": [
          "com.atproto.admin"
        ],
        "summary": "Update Subject Status",
        "description": "Updates the moderation status for a specified subject (e.g., an account or content). This endpoint is part of the `atproto.admin` namespace and requires authentication.",
        "operationId": "UpdateSubjectStatus",
        "parameters": [
          {
            "name": "subjectId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the subject whose status is being updated.",
            "x-ms-summary": "Subject ID"
          },
          {
            "name": "newStatus",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The new moderation status for the subject (e.g., active, suspended).",
            "x-ms-summary": "New status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the subject's status.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the subject's status was successfully updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.identity.getRecommendedDIDCredentials": {
      "get": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Get Recommended DID Credentials",
        "description": "Retrieves a list of recommended DID (Decentralized Identifier) credentials for the authenticated user. This endpoint is part of the `atproto.identity` namespace and requires authentication.",
        "operationId": "GetRecommendedDIDCredentials",
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved recommended DID credentials.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "did": {
                    "type": "string",
                    "description": "The recommended DID."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the DID credential."
                  },
                  "issuedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the credential was issued."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.identity.requestPLCOperationSignature": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Request PLC Operation Signature",
        "description": "Requests a signature for a PLC (Portable Lightweight Credentials) operation, enabling actions requiring signed verification. This endpoint is part of the `atproto.identity` namespace and requires authentication.",
        "operationId": "RequestPLCOperationSignature",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationPayload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "The payload of the PLC operation to be signed."
                }
              }
            },
            "x-ms-summary": "Operation payload"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully requested PLC operation signature.",
            "schema": {
              "type": "object",
              "properties": {
                "signature": {
                  "type": "string",
                  "description": "The generated signature for the PLC operation."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.identity.resolveHandle": {
      "get": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Resolve Handle",
        "description": "Resolves a user handle to its associated decentralized identifier (DID), facilitating actions that require the DID. This endpoint is part of the `atproto.identity` namespace.",
        "operationId": "ResolveHandle",
        "parameters": [
          {
            "name": "handle",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The user handle to be resolved to a DID.",
            "x-ms-summary": "Handle"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully resolved handle to DID.",
            "schema": {
              "type": "object",
              "properties": {
                "did": {
                  "type": "string",
                  "description": "The resolved decentralized identifier for the handle."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.identity.signPLCOperation": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Sign PLC Operation",
        "description": "Signs a PLC (Portable Lightweight Credentials) operation, returning a signed version of the operation payload. This endpoint is part of the `atproto.identity` namespace and requires authentication.",
        "operationId": "SignPLCOperation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationPayload",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "The PLC operation payload to be signed."
                }
              }
            },
            "x-ms-summary": "Operation payload"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully signed the PLC operation.",
            "schema": {
              "type": "object",
              "properties": {
                "signedOperation": {
                  "type": "string",
                  "description": "The signed version of the PLC operation payload."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.identity.updateHandle": {
      "post": {
        "tags": [
          "com.atproto.identity"
        ],
        "summary": "Update Handle",
        "description": "Updates the handle associated with the authenticated user. This endpoint is part of the `atproto.identity` namespace and requires authentication.",
        "operationId": "UpdateHandle",
        "parameters": [
          {
            "name": "newHandle",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The new handle to be associated with the user.",
            "x-ms-summary": "New handle"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the user's handle.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the handle was successfully updated."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.label.queryLabels": {
      "get": {
        "tags": [
          "com.atproto.label"
        ],
        "summary": "Query Labels",
        "description": "Retrieves labels associated with content, allowing administrators to view and manage content labels. This endpoint is part of the `atproto.label` namespace and requires authentication.",
        "operationId": "QueryLabels",
        "parameters": [
          {
            "name": "contentIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A comma-separated list of content IDs to retrieve labels for.",
            "x-ms-summary": "Content IDs"
          },
          {
            "name": "labelType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter labels by type (e.g., offensive, spam).",
            "x-ms-summary": "Label type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved labels for the specified content.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "contentId": {
                    "type": "string",
                    "description": "Unique identifier of the content."
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of labels associated with the content."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.moderation.createReport": {
      "post": {
        "tags": [
          "com.atproto.moderation"
        ],
        "summary": "Create Report",
        "description": "Submits a report regarding content or user behavior, initiating a moderation review. This endpoint is part of the `atproto.moderation` namespace and requires authentication.",
        "operationId": "CreateReport",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "reportDetails",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "contentId": {
                  "type": "string",
                  "description": "Unique identifier of the content being reported."
                },
                "reason": {
                  "type": "string",
                  "description": "Reason for reporting (e.g., offensive, spam)."
                },
                "reporterId": {
                  "type": "string",
                  "description": "Identifier of the user submitting the report."
                }
              }
            },
            "x-ms-summary": "Report details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the report.",
            "schema": {
              "type": "object",
              "properties": {
                "reportId": {
                  "type": "string",
                  "description": "Unique identifier of the created report."
                },
                "status": {
                  "type": "string",
                  "description": "Initial status of the report (e.g., pending)."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.applyWrites": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Apply Writes",
        "description": "Applies a batch of write operations to the repository, including creating, updating, and deleting records. This endpoint is part of the `atproto.repo` namespace and requires authentication.",
        "operationId": "ApplyWrites",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "writes",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of write operation (e.g., create, update, delete)."
                  },
                  "record": {
                    "type": "object",
                    "description": "The record object to be written."
                  }
                }
              }
            },
            "x-ms-summary": "Batch of write operations"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully applied write operations.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the writes were successfully applied."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.createRecord": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Create Record",
        "description": "Creates a new record within the repository. This endpoint is part of the `atproto.repo` namespace and requires authentication.",
        "operationId": "CreateRecord",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recordDetails",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recordType": {
                  "type": "string",
                  "description": "Type of the record to be created."
                },
                "content": {
                  "type": "object",
                  "description": "The content of the record."
                }
              }
            },
            "x-ms-summary": "Record details"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the record.",
            "schema": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Unique identifier of the created record."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.deleteRecord": {
      "delete": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Delete Record",
        "description": "Deletes a record from the repository based on its unique identifier. This endpoint is part of the `atproto.repo` namespace and requires authentication.",
        "operationId": "DeleteRecord",
        "parameters": [
          {
            "name": "recordId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the record to be deleted.",
            "x-ms-summary": "Record ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the record.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the record was successfully deleted."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.describeRepo": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Describe Repo",
        "description": "Retrieves metadata about the repository, providing an overview of its structure and configuration. This endpoint is part of the `atproto.repo` namespace.",
        "operationId": "DescribeRepo",
        "parameters": [
          {
            "name": "repoId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the repository to describe.",
            "x-ms-summary": "Repository ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved repository description.",
            "schema": {
              "type": "object",
              "properties": {
                "repoId": {
                  "type": "string",
                  "description": "Unique identifier of the repository."
                },
                "structure": {
                  "type": "object",
                  "description": "Structural information of the repository."
                },
                "config": {
                  "type": "object",
                  "description": "Configuration details of the repository."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.getRecord": {
      "get": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Get Record",
        "description": "Retrieves a specific record from the repository based on its unique identifier. This endpoint is part of the `atproto.repo` namespace.",
        "operationId": "RepoGetRecord",
        "parameters": [
          {
            "name": "recordId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the record to retrieve.",
            "x-ms-summary": "Record ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the record.",
            "schema": {
              "type": "object",
              "properties": {
                "recordId": {
                  "type": "string",
                  "description": "Unique identifier of the record."
                },
                "data": {
                  "type": "object",
                  "description": "Content and details of the retrieved record."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/com.atproto.repo.importRepo": {
      "post": {
        "tags": [
          "com.atproto.repo"
        ],
        "summary": "Import Repo",
        "description": "Imports an external repository into the current repository structure, enabling integration of existing data. This endpoint is part of the `atproto.repo` namespace and requires authentication.\n",
        "operationId": "ImportRepo",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "importData",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sourceUrl": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL of the external repository to import."
                },
                "importOptions": {
                  "type": "object",
                  "description": "Options for how the import should be handled."
                }
              }
            },
            "x-ms-summary": "Import data and options"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully imported repository data.",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates if the import was successful."
                },
                "importedRecords": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of identifiers for the imported records."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/tools.ozone.team.listMembers": {
      "get": {
        "tags": [
          "tools.ozone.team"
        ],
        "summary": "List Team Members",
        "description": "Retrieves a list of members for a specified team in the Ozone system. This endpoint is part of the `tools.ozone.team` namespace and requires authentication.",
        "operationId": "ListMembers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The unique identifier of the team whose members are being listed.",
            "x-ms-summary": "Team ID"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The maximum number of members to retrieve in the list.",
            "x-ms-summary": "Limit"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The starting point for retrieving members, useful for pagination.",
            "x-ms-summary": "Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of team members.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "memberId": {
                    "type": "string",
                    "description": "The unique identifier of the team member."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the team member."
                  },
                  "role": {
                    "type": "string",
                    "description": "The role of the member within the team."
                  },
                  "joinedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of when the member joined the team."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication token.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found - The specified team does not exist.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error - The server encountered an unexpected condition.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Conversation": {
      "type": "object",
      "properties": {
        "conversationId": {
          "type": "string",
          "description": "Unique identifier for the conversation."
        },
        "participants": {
          "type": "array",
          "description": "List of participants in the conversation.",
          "items": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "description": "Unique identifier of the participant."
              },
              "displayName": {
                "type": "string",
                "description": "Display name of the participant."
              }
            }
          }
        },
        "messages": {
          "type": "array",
          "description": "List of messages in the conversation.",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "lastMessageTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the last message in the conversation."
        },
        "unreadCount": {
          "type": "integer",
          "description": "Number of unread messages in the conversation."
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string",
          "description": "Unique identifier for the message."
        },
        "content": {
          "type": "string",
          "description": "Content of the message."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the message was sent."
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "error",
        "message"
      ],
      "properties": {
        "error": {
          "type": "string",
          "enum": [
            "InvalidRequest",
            "ExpiredToken",
            "InvalidToken",
            "Unauthorized",
            "NotFound",
            "InternalServerError"
          ],
          "description": "Type of error encountered during the request."
        },
        "message": {
          "type": "string",
          "description": "Detailed error message."
        },
        "code": {
          "type": "integer",
          "description": "Optional error code, such as an HTTP status code."
        },
        "details": {
          "type": "string",
          "description": "Additional information about the error for debugging purposes."
        }
      }
    }
  },
  "tags": [
    {
      "name": "boopTag",
      "description": "boopTag description"
    }
  ]
}